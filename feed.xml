<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="html">Ottmar’s Notes</title>
<subtitle>Mainly about Oracle APEX and PL/SQL</subtitle>
<author>
  <name>Ottmar Gobrecht</name>
  <email>ottmar.gobrecht@gmail.com</email>
  <uri>https://ogobrecht.github.io/about/</uri>
</author>
<id>https://ogobrecht.github.io/index.xml</id>
<link href="https://ogobrecht.github.io/index.xml" rel="self" type="application/atom+xml" />
<link href="https://ogobrecht.github.io/" rel="alternate" type="text/html" hreflang="en" />
<generator uri="https://gohugo.io/" version="0.62.1">Hugo</generator>
<updated>2020-12-14T15:09:35+01:00</updated>


<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2020-08-03-how-to-migrate-oracle-cloud-wallet-into-existing-auto-login-local-wallet/</id>
<link href="https://ogobrecht.github.io/posts/2020-08-03-how-to-migrate-oracle-cloud-wallet-into-existing-auto-login-local-wallet/" rel="alternate" type="text/html" title="How to migrate Oracle Cloud wallet into existing auto_login_local wallet" />
<title type="html">How to migrate Oracle Cloud wallet into existing auto_login_local wallet</title>
<summary type="html">One secure wallet for all your connections, no need to provide passwords in SQL*Plus, SQLcl and SQL Developer</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="wallet" label="Wallet" scheme="https://ogobrecht.github.io/tags/" />
<category term="script" label="Script" scheme="https://ogobrecht.github.io/tags/" />
<published>2020-08-03T00:00:00+01:00</published>
<updated>2020-11-28T15:42:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2020-08-03-how-to-migrate-oracle-cloud-wallet-into-existing-auto-login-local-wallet/">
&lt;p&gt;&lt;em&gt;One secure wallet for all your connections, no need to provide passwords in SQL*Plus, SQLcl and SQL Developer&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I started to store user credentials in wallet files for higher security in SQL scripts. If you do so you should also secure the access to your wallet files on the operating system level. This is especially true for auto-login wallets from the Oracle Cloud. To increase the security a bit further you can restrict the auto-login to the local user who created the wallet. To achieve this you need to create an own wallet with &lt;code&gt;orapki&lt;/code&gt; instead of &lt;code&gt;mkstore&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;orapki wallet create -wallet &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;path/to/my/wallet&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -pwd myPassword -auto_login_local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can then add new alias/user/password entries with mkstore (you need to add each alias to your tnsnames.ora):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;mkstore -wrl &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;path/to/my/wallet&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -createCredential myAlias myUser myPassword
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you use only the instant client and cannot find mkstore and orapki, then have a look at my &lt;a href=&#34;/posts/2020-07-29-how-to-use-mkstore-and-orapki-with-oracle-instant-client/&#34;&gt;previous post&lt;/a&gt; on how to simulate these tools.&lt;/p&gt;
&lt;h2 id=&#34;the-migration&#34;&gt;The Migration&lt;/h2&gt;
&lt;p&gt;I assume you have set an environment variable called TNS_ADMIN pointing to your TNS directory. In this directory, you have your wallet files and also your existing tnsnames.ora and sqlnet.ora to successfully connect to your local Oracle instances.&lt;/p&gt;
&lt;p&gt;Now you need to extract the downloaded cloud wallet - for security reasons it makes sense to create a temporary subdirectory in your TNS directory and extract the cloud wallet there. You need to migrate the entries from &lt;code&gt;tnsnames.ora&lt;/code&gt; and &lt;code&gt;sqlnet.ora&lt;/code&gt; into your own TNS files and align the path to your wallet directory. Additionally, you should also copy over the file &lt;code&gt;ojdbc.properties&lt;/code&gt; if you do not have it already and you plan to use SQLcl or SQL Developer with your wallet.&lt;/p&gt;
&lt;p&gt;My resulting sqlnet.ora:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WALLET_LOCATION = (SOURCE = (METHOD = file) (METHOD_DATA = (DIRECTORY = &amp;quot;C:\\path\\to\\my\\wallet&amp;quot;)))
SSL_SERVER_DN_MATCH = yes
sqlnet.wallet_override = true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My resulting tnsnames.ora:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;myCloudDbName_high, myAlias = (description = (...
myCloudDbName_medium        = (description = (...
myCloudDbName_low           = (description = (...
myCloudDbName_tp            = (description = (...
myCloudDbName_tpurgent      = (description = (...

myLocalDbName, myOtherAlias = (description = (...
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That was the easy part, but how you migrate the needed private key and all certificates?&lt;/p&gt;
&lt;p&gt;It took me some time to figure this out because most people seem to use the cloud wallet as it is. This is understandable since SQL Developer can direct use the zipped version of the wallet. But my target is not to manage the passwords in multiple places - the databases, multiple wallets, SQL Developer and possibly other tools. I want to manage the passwords only in the databases and in one wallet and use this wallet with all the tools - in my case SQL*Plus, SQLcl and SQL Developer.&lt;/p&gt;
&lt;p&gt;First I tried to export the private key and all certificates from the cloud wallet and then import it into my wallet. I was not successful with this mostly because of the private key and unknown alias names - maybe I was too tired from all the try and error things on how to achieve this. I came finally up with the idea to use the cloud wallet Java KeyStore files and convert them into my wallet with the orapki method &lt;code&gt;jks_to_pkcs12&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Migrate private key and certificate from cloud wallet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;orapki wallet jks_to_pkcs12 -wallet &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;path/to/my/wallet&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -pwd myPassword -keystore &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;path/to/cloud/wallet/keystore.jks&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -jkspwd myCloudWalletPassword
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Migrate trusted certificates from cloud wallet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;orapki wallet jks_to_pkcs12 -wallet &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;path/to/my/wallet&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -pwd myPassword -keystore &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;path/to/cloud/wallet/truststore.jks&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -jkspwd myCloudWalletPassword
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, list the wallet content to see the migrated entries:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;orapki wallet display -wallet . -pwd myPassword
  or
orapki wallet display -wallet . -pwd myPassword -complete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final file list in my TNS directory (without the Java KeyStore files from the cloud wallet):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cwallet.sso
cwallet.sso.lck
ewallet.p12
ewallet.p12.lck
ojdbc.properties
sqlnet.ora
tnsnames.ora
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I am now able to connect to my cloud database with the desired tools without providing user/password details (tested version):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL*Plus (19.6): &lt;code&gt;sqlplus /@myAlias&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SQLcl (20.2): &lt;code&gt;sql /@myAlias&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SQL Developer (20.2): authentication type &amp;ldquo;OS&amp;rdquo;, connection type &amp;ldquo;Custom JDBC&amp;rdquo; with URL &lt;code&gt;jdbc:oracle:thin:/@myAlias&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you forgot which aliases you have configured in your wallet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;mkstore -wrl &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;path/to/my/wallet&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -listCredential
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hope this helps someone else.&lt;/p&gt;
&lt;p&gt;Happy developing and scripting&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2020-07-29-how-to-use-mkstore-and-orapki-with-oracle-instant-client/</id>
<link href="https://ogobrecht.github.io/posts/2020-07-29-how-to-use-mkstore-and-orapki-with-oracle-instant-client/" rel="alternate" type="text/html" title="How to use mkstore and orapki with Oracle Instant Client" />
<title type="html">How to use mkstore and orapki with Oracle Instant Client</title>
<summary type="html">Create and manage wallets without full client installation</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="wallet" label="Wallet" scheme="https://ogobrecht.github.io/tags/" />
<category term="script" label="Script" scheme="https://ogobrecht.github.io/tags/" />
<published>2020-07-29T00:00:00+01:00</published>
<updated>2020-07-29T20:15:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2020-07-29-how-to-use-mkstore-and-orapki-with-oracle-instant-client/">
&lt;p&gt;&lt;em&gt;Create and manage wallets without full client installation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For some years I use only the &lt;a href=&#34;https://www.oracle.com/database/technologies/instant-client.html&#34;&gt;Oracle Instant Client&lt;/a&gt;. I had too often trouble with the full client installation on my corporate PCs under Windows, especially in the old Windows 32/64 bit times. The instant client can be used by download and extract one basic zip file and adding an entry to your path environment variable. If you want to use SQL*Plus and other tools you need to download two additional files - no drama, also without admin rights.&lt;/p&gt;
&lt;p&gt;When I started to store the user details in wallet files I was wondering why Oracle does not deliver the mkstore and orapki tools with the instant client. I searched for a workaround and found some posts about it - including installing the full client or other software to get the tools. But I do not want to install additional software only for two small command-line tools. I found the final hint in an &lt;a href=&#34;https://andriydmytrenko.wordpress.com/2013/07/01/using-the-secure-external-password-store-with-instant-client/&#34;&gt;old post from Andriy Dmytrenko&lt;/a&gt;. Seems that the two utilities are only shell scripts that are calling some Java libraries. The question was from which location I should take the needed libraries. Since I also have &lt;a href=&#34;https://www.oracle.com/database/technologies/appdev/sqlcl.html&#34;&gt;SQLcl&lt;/a&gt; on my PC I found the libs there. Below my final shell scripts for Windows - put them somewhere and have the path pointing to the directory where they are stored. If you need them for Linux you will find a way to do it by yourself:&lt;/p&gt;
&lt;p&gt;mkstore.bat:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@echo off
rem inspiration: https://andriydmytrenko.wordpress.com/2013/07/01/using-the-secure-external-password-store-with-instant-client/

setlocal

rem get the command line arguments
set args=
:loop
  if !%1==! goto :done
  set args=%args% %1
  shift
  goto :loop
:done

rem set classpath for mkstore - align this to your local SQLcl installation
set sqlcl=c:\path\to\sqlcl\lib
set classpath=%sqlcl%\oraclepki.jar
set classpath=%classpath%;%sqlcl%\osdt_core.jar
set classpath=%classpath%;%sqlcl%\osdt_cert.jar

rem simulate mkstore command
java -classpath %classpath% oracle.security.pki.OracleSecretStoreTextUI %args%

endlocal
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;orapki.bat:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@echo off
rem inspiration: https://andriydmytrenko.wordpress.com/2013/07/01/using-the-secure-external-password-store-with-instant-client/

setlocal

rem get the command line arguments
set args=
:loop
  if !%1==! goto :done
  set args=%args% %1
  shift
  goto :loop
:done

rem set classpath for orapki - align this to your local SQLcl installation
set sqlcl=c:\path\to\sqlcl\lib
set classpath=%sqlcl%\oraclepki.jar
set classpath=%classpath%;%sqlcl%\osdt_core.jar
set classpath=%classpath%;%sqlcl%\osdt_cert.jar

rem simulate orapki command
java -classpath %classpath% oracle.security.pki.textui.OraclePKITextUI %args%

endlocal
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you need a starter on using mkstore and orapki then Tim Hall from Oracle Base has covered you with an &lt;a href=&#34;https://oracle-base.com/articles/10g/secure-external-password-store-10gr2&#34;&gt;article about the secure external password store&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy password storing&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2020-05-25-sample-data-sets-for-oracle/</id>
<link href="https://ogobrecht.github.io/posts/2020-05-25-sample-data-sets-for-oracle/" rel="alternate" type="text/html" title="Sample Data Sets for Oracle" />
<title type="html">Sample Data Sets for Oracle</title>
<summary type="html">A collection of common data sets for testing purposes</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="script" label="Script" scheme="https://ogobrecht.github.io/tags/" />
<published>2020-05-25T00:00:00+01:00</published>
<updated>2020-05-25T14:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2020-05-25-sample-data-sets-for-oracle/">
&lt;p&gt;&lt;em&gt;A collection of common data sets for testing purposes&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sometimes you need only some small tables and some rows of data to play around with, to test things out. I think most of you immediately would say EMP, DEPT&amp;hellip;&lt;/p&gt;
&lt;p&gt;Sure, but a bit more data would be nice. Ok, OE and HR schema&amp;hellip;&lt;/p&gt;
&lt;p&gt;Sure, but I have no SYS rights on the database in my current project to install the schemas, can I have it in my current dev schema?&amp;hellip;&lt;/p&gt;
&lt;p&gt;Sure, but then I have to fiddle a bit with the scripts to make it run in my dev schema, I need it fast, no time at all&amp;hellip;&lt;/p&gt;
&lt;p&gt;Mmhhh, sounds this familiar to you? Maybe I can help&amp;hellip;&lt;/p&gt;
&lt;p&gt;The sample data sets from Oracle were normally created for a dedicated schema. I changed that and omitted all the schema creation parts of the scripts. Instead, all objects from a data set get a prefix - an example: All objects from the customer orders schema (one of the newer data sets from Oracle) are prefixed with CO_. This allows me to use all data sets in parallel in a single schema and easily identify the data set the object belongs to.&lt;/p&gt;
&lt;p&gt;All table scripts are created with identity columns and the simplest possible options for easy readability - no fancy constraint and index names. Constraints and indexes will be renamed with global helper scripts after the table creation. Only real indexes are coded - foreign key indexes are generated with a global helper script too.&lt;/p&gt;
&lt;p&gt;For each data set, you have always the same three scripts to handle the installation/data refresh/uninstallation.&lt;/p&gt;
&lt;h2 id=&#34;list-of-data-sets-copyrights&#34;&gt;List of Data Sets, Copyrights&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;EMP &amp;amp; DEPT (2 tabs, 18 rows), &lt;a href=&#34;https://github.com/oracle/dotnet-db-samples/blob/master/schemas/scott.sql&#34;&gt;source&lt;/a&gt;, Copyright Oracle (&lt;a href=&#34;https://github.com/oracle/dotnet-db-samples/blob/master/LICENSE&#34;&gt;MIT license&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Order Entry &amp;amp; Human Resources (15 tabs, 3.002 rows), &lt;a href=&#34;https://github.com/oracle/db-sample-schemas/tree/master/order_entry&#34;&gt;source oe&lt;/a&gt;, &lt;a href=&#34;https://github.com/oracle/db-sample-schemas/tree/master/human_resources&#34;&gt;source hr&lt;/a&gt;, Copyright Oracle (&lt;a href=&#34;https://github.com/oracle/db-sample-schemas/blob/master/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Customer Orders (5 tabs, 6.325 rows), &lt;a href=&#34;https://github.com/oracle/db-sample-schemas/tree/master/customer_orders&#34;&gt;source&lt;/a&gt;, Copyright Oracle (&lt;a href=&#34;https://github.com/oracle/db-sample-schemas/blob/master/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sakila DVD Rental Store (16 tabs, 46.273 rows), &lt;a href=&#34;https://github.com/jOOQ/jOOQ/tree/master/jOOQ-examples/Sakila&#34;&gt;source&lt;/a&gt;, &lt;a href=&#34;https://code.google.com/archive/p/sakila-sample-database-ports/&#34;&gt;original source&lt;/a&gt;, Copyright MySQL AB documentation team, DB Software Laboratory, Lukas Eder (&lt;a href=&#34;http://opensource.org/licenses/BSD-3-Clause&#34;&gt;BSD-3-Clause license&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more info about the Oracle sample schemas see the &lt;a href=&#34;https://docs.oracle.com/database/121/COMSC/overview.htm#COMSC002&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;list-of-global-helper-scripts&#34;&gt;List of Global Helper Scripts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disable/enable all foreign key constraints&lt;/li&gt;
&lt;li&gt;Create missing foreign key indexes&lt;/li&gt;
&lt;li&gt;Unify constraint names&lt;/li&gt;
&lt;li&gt;Unify index names&lt;/li&gt;
&lt;li&gt;Sync sequence values to data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find the project on &lt;a href=&#34;https://github.com/ogobrecht/sample-data-sets-for-oracle&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hope this helps someone else&amp;hellip;&lt;/p&gt;
&lt;p&gt;Happy data modeling and testing&lt;br&gt;
Ottmar&lt;/p&gt;
&lt;p&gt;P.S. For those of you who are working with Oracle APEX: Have a look under SQL Workshop &amp;gt; Utilities &amp;gt; Sample Datasets&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2020-01-02-why-i-like-sqlplus-for-deployment-scripts/</id>
<link href="https://ogobrecht.github.io/posts/2020-01-02-why-i-like-sqlplus-for-deployment-scripts/" rel="alternate" type="text/html" title="Why I Like SQL*Plus for Deployment Scripts" />
<title type="html">Why I Like SQL*Plus for Deployment Scripts</title>
<summary type="html">SQLcl is eating my error messages</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="script" label="Script" scheme="https://ogobrecht.github.io/tags/" />
<category term="sqlplus" label="SQL*Plus" scheme="https://ogobrecht.github.io/tags/" />
<published>2020-01-02T00:00:00+01:00</published>
<updated>2020-01-03T19:40:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2020-01-02-why-i-like-sqlplus-for-deployment-scripts/">
&lt;p&gt;&lt;em&gt;SQLcl is eating my error messages&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The following simplified example deployment master script is given:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verify&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feedback&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;whenever&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sqlerror&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sqlcode&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rollback&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deployment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Example&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Deployment&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Master&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Script&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Step&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Dummy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;demonstration&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- normally we call here some other scripts like
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- @other-script.sql
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Step&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;anonymous&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;begin&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;raise_application_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Error test for SQL*Plus &amp;lt;&amp;gt; SQLcl comparison&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Deployment&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Done&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When we call this in SQL*Plus (version 19.5), we get the following output (in the console and also in deployment.log) with an indication of what went wrong with our deployment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Example Deployment Master Script
========================================
Step 1: Dummy for demonstration
Step 2: Error test in anonymous block
begin
*
ERROR at line 1:
ORA-20000: Error test for SQL*Plus &amp;lt;&amp;gt; SQLcl comparison 
ORA-06512: at line 2 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ok, this error message is stupid, but usually, I get some useful information here to fix my problem in the deployment script - especially when the problematic script is a bit longer&amp;hellip;&lt;/p&gt;
&lt;p&gt;When we call this in SQLcl (latest version 19.4 on Windows) we get the following output (in the console and also the deployment.log):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Example Deployment Master Script
========================================
Step 1: Dummy for demonstration
Step 2: Error test in anonymous block
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mhhh&amp;hellip; What was going on here? Why was my script terminating in step 2?&lt;/p&gt;
&lt;p&gt;That&#39;s one reason why I like SQL*Plus a bit more than SQLcl for deployment scripts. The fast start time of SQL*Plus is another reason. Nevertheless, SQLcl is a cool command-line tool.&lt;/p&gt;
&lt;p&gt;Happy scripting :-)&lt;br&gt;
Ottmar&lt;/p&gt;
&lt;p&gt;P.S.: There is a small &lt;a href=&#34;https://twitter.com/ogobrecht/status/1212646721127366656&#34;&gt;Twitter discussion&lt;/a&gt; around this&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;update-january-3-2020&#34;&gt;UPDATE January 3, 2020&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/thatjeffsmith/status/1213102639497515009&#34;&gt;Jeff Smith has confirmed that this bug was fixed in SQLcl version 19.4&lt;/a&gt;. I was using 19.4 - but on Windows. It turns out that the bug is still there - only on Windows, not Mac, not Linux&amp;hellip;&lt;/p&gt;
&lt;p&gt;So, if you are facing this problem on Windows then you have to wait for a future release or set as a workaround the feedback on:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verify&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feedback&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;snip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here the output on my Windows 10 laptop:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Demo Deployment Master Script
========================================
Step 1: Dummy for demonstration
Step 2: Begin error test in anonymous block
Rollback

Error starting at line : 10 File @ C:\temp\deployment.sql
In Command -
begin
  raise_application_error(-20000, &#39;error test for SQL*Plus &amp;lt;&amp;gt; SQLcl comparison&#39;);
end;
Error report -
ORA-20000: error test for SQL*Plus &amp;lt;&amp;gt; SQLcl comparison
ORA-06512: at line 2
20000. 00000 -  &amp;quot;%s&amp;quot;
*Cause:    The stored procedure &#39;raise_application_error&#39;
           was called which causes this error to be generated.
*Action:   Correct the problem as described in the error message or contact
           the application administrator or DBA for more information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are on Mac OS or Linux then you have to update to the latest SQLcl version 19.4 or use also the described workaround.&lt;/p&gt;
&lt;h2 id=&#34;update-july-20-2020&#34;&gt;UPDATE July 20, 2020&lt;/h2&gt;
&lt;p&gt;The bug still exists in SQLcl 20.2 and SQL Developer 20.2 under Windows - we have to wait a bit longer&amp;hellip;&lt;/p&gt;
&lt;p&gt;Again: happy scripting :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2020-01-01-download-blobs-with-sqlplus/</id>
<link href="https://ogobrecht.github.io/posts/2020-01-01-download-blobs-with-sqlplus/" rel="alternate" type="text/html" title="Download BLOBs with SQL*Plus" />
<title type="html">Download BLOBs with SQL*Plus</title>
<summary type="html">New version of PL/SQL Export Utilities available</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="script" label="Script" scheme="https://ogobrecht.github.io/tags/" />
<category term="sqlplus" label="SQL*Plus" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<published>2020-01-01T00:00:00+01:00</published>
<updated>2020-10-26T16:43:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2020-01-01-download-blobs-with-sqlplus/">
&lt;p&gt;&lt;em&gt;New version of PL/SQL Export Utilities available&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Have you ever tried to spool/download BLOBS with SQL*Plus? Some months ago I tried to find a way to download a collection of CLOBs or even better a zipped version of the collection as BLOB. I learned that BLOBs are not a valid datatype in SQL*Plus when it comes to the spool command. I found a way by putting the CLOBs into a global temporary table, creating an intermediate SQL script with tons of select and spool commands, and finally spooling the CLOBs one by one by calling the intermediate SQL script. It was working, but far from elegant. Also, when I was in the home office with a less powerful connection, it was slowing down the whole export process significantly.&lt;/p&gt;
&lt;p&gt;If you are using PLEX (PL/SQL Export Utilities) and this sounds familiar to you - the described method was the default for exporting an APEX app or your schema DDL with the delivered export script templates.&lt;/p&gt;
&lt;p&gt;If you have no idea what I am talking about: PLEX is a PL/SQL package that is able to export an Oracle APEX app, ORDS modules, all schema objects and table data into a nice directory structure in one go ready to use for version control. Check out the &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;project on GitHub&lt;/a&gt; and this &lt;a href=&#34;/posts/2018-08-26-plex-plsql-export-utilities&#34;&gt;blog post on how to get started&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But there is a better way: Simply convert the BLOB into a base64 encoded CLOB. I have no idea why this was not my first solution for the PLEX export templates. In the new version 2.1.0 of PLEX the templates are using this approach. Here is a simplified example.&lt;/p&gt;
&lt;p&gt;File export.sql:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verify&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feedback&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;heading&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trimout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trimspool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pagesize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linesize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100000000&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;longchunksize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32767&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;whenever&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sqlerror&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sqlcode&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rollback&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;variable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;clob&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_base64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_include_ords_modules&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_include_object_ddl&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_include_data&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_include_templates&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;app_100.zip.base64&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Congratulations - You are the owner of a base64 encoded CLOB on your client disk. And now? Before you can unzip the file you need to decode it - depending on your operating system you can do this with your OS tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows: &lt;code&gt;certutil -decode app_100.zip.base64 app_100.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Mac: &lt;code&gt;base64 -D -i app_100.zip.base64 -o app_100.zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Linux: &lt;code&gt;base64 -d app_100.zip.base64 &amp;gt; app_100.zip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here a simple Windows batch file, which calls the SQL script above, decodes the file and deletes the base64 version.&lt;/p&gt;
&lt;p&gt;File export.bat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; exit &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sqlplus -S demo/oracle@localhost:1521/xepdb1 @export.sql
certutil -decode app_100.zip.base64 app_100.zip
&lt;span class=&#34;k&#34;&gt;del&lt;/span&gt; app_100.zip.base64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The described method to download a BLOB is independent of the package PLEX - you only need a small helper function to encode the BLOB. I found an example provided by Tim Hall on his &lt;a href=&#34;https://oracle-base.com/dba/script?category=miscellaneous&amp;amp;file=base64encode.sql&#34;&gt;Oracle Base site&lt;/a&gt;. Thanks for sharing Tim!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;REPLACE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base64encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_blob&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;BLOB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CLOB&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- -----------------------------------------------------------------------------------
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- File Name    : https://oracle-base.com/dba/miscellaneous/base64encode.sql
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- Author       : Tim Hall
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- Description  : Encodes a BLOB into a Base64 CLOB.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- Last Modified: 09/11/2011
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- -----------------------------------------------------------------------------------
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_clob&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;CLOB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_step&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PLS_INTEGER&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- make sure you set a multiple of 3 not higher than 24573
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TRUNC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DBMS_LOB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getlength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_blob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;l_clob&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_clob&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UTL_RAW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cast_to_varchar2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UTL_ENCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base64_encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DBMS_LOB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_blob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_step&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_step&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_clob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function is included in the newest version of PLEX (named to_base64) - you can download PLEX &lt;a href=&#34;https://github.com/ogobrecht/plex/releases/latest&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy scripting, exporting and version controlling :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2019-11-19-doag-konferenz/</id>
<link href="https://ogobrecht.github.io/posts/2019-11-19-doag-konferenz/" rel="alternate" type="text/html" title="DOAG Konferenz 2019" />
<title type="html">DOAG Konferenz 2019</title>
<summary type="html">Vortrag: Schnellstart - Versionskontrolle für existierende Oracle Projekte</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<category term="slides" label="Slides" scheme="https://ogobrecht.github.io/tags/" />
<category term="doag" label="DOAG" scheme="https://ogobrecht.github.io/tags/" />
<published>2019-11-19T00:00:00+01:00</published>
<updated>2019-12-01T16:06:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2019-11-19-doag-konferenz/">
&lt;p&gt;&lt;em&gt;Vortrag: Schnellstart - Versionskontrolle für existierende Oracle Projekte&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/slides/2019-11-19-schnellstart-versionskontrolle-fuer-existierende-projekte/assets/teaser.jpg&#34; alt=&#34;Mein DOAG Konferenz Vortrag&#34;&gt;&lt;/p&gt;
&lt;p&gt;Leider konnte ich meinen Vortrag im PDF-Format zuerst nicht auf die DOAG-Webseite hochladen, da dort eine Größenbeschränkung von 10 MB gilt. Letztendlich habe ich dann eine Version ohne Hintergrundbilder hochgeladen. Aber Ihr habt ja hier die Möglichkeit die Original-HTML-Version anzuschauen, die auf der Konferenz gezeigt wurde. Viel Spaß damit.&lt;/p&gt;
&lt;p&gt;Wer noch im Nachgang Fragen zum Thema hat, kann mich gern direkt kontaktieren (für Kontaktmöglichkeiten einfach in der Navigation schauen). Für Fragen zum vorgestellten Tool „PLEX“ nutzt bitte die &lt;a href=&#34;https://github.com/ogobrecht/plex/issues&#34;&gt;Feedbackfunktion auf GitHub&lt;/a&gt; innerhalb der &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;Projektseite&lt;/a&gt;, damit alle Nutzer etwas davon haben.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/slides/2019-11-19-schnellstart-versionskontrolle-fuer-existierende-projekte/&#34; target=&#34;_blank&#34;&gt;Open HTML presentation in a new window/tab&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&#34;item-meta&#34;&gt;
  &lt;p&gt;You need a modern browser with activated JavaScript. Navigation tips:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;N&lt;/code&gt;, &lt;code&gt;Space&lt;/code&gt; = Next slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;P&lt;/code&gt; = Previous slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;O&lt;/code&gt;, &lt;code&gt;Esc&lt;/code&gt; = Overview all slides&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;?&lt;/code&gt; = Show all keyboard shortcuts&lt;/li&gt;
    &lt;li&gt;All links are opened in a new window/tab&lt;/li&gt;
    
    
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Happy coding and version controlling :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2019-07-20-schnellstart-versionskontrolle-fuer-oracle-projekte/</id>
<link href="https://ogobrecht.github.io/posts/2019-07-20-schnellstart-versionskontrolle-fuer-oracle-projekte/" rel="alternate" type="text/html" title="Schnellstart - Versionskontrolle für existierende Oracle-Projekte" />
<title type="html">Schnellstart - Versionskontrolle für existierende Oracle-Projekte</title>
<summary type="html">DOAG Red Stack Magazin 03-2019</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<category term="doag" label="DOAG" scheme="https://ogobrecht.github.io/tags/" />
<published>2019-07-20T00:00:00+01:00</published>
<updated>2019-08-15T21:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2019-07-20-schnellstart-versionskontrolle-fuer-oracle-projekte/">
&lt;p&gt;&lt;em&gt;DOAG Red Stack Magazin 03-2019&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Viele Oracle-Projekte setzen bis heute keine Versionskontrolle ein. Die Gründe dafür sind vielfältig. Meist geht man wohl davon aus, dass die Datenbank ein sicherer Ort für den Quellcode ist. Mit einem funktionierenden Backup ist das auch richtig, man verliert aber auf jeden Fall die komplette Historie der Änderungen. Oft fehlt in laufenden Projekten auch einfach die Zeit, sich zusätzlich noch mit der Einführung einer Quellcodeversionierung zu beschäftigen, weil auf den ersten Blick kein direkter Nutzen zu sehen ist. Wer wagt unter Zeitdruck da den zweiten Blick? Dieser Artikel will die Hürde für die Einführung einer Versionsverwaltung ein wenig tiefer legen.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Inhaltsverzeichnis&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#hinweis-doag&#34;&gt;Hinweis DOAG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#einleitung&#34;&gt;Einleitung&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#workflownderung-dateibasiertes-arbeiten&#34;&gt;Workflowänderung: Dateibasiertes Arbeiten&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#toolvergleich-ddl-export&#34;&gt;Toolvergleich: DDL-Export&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#schnellstart-package-plex&#34;&gt;Schnellstart: Package PLEX&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#geschwindigkeit-immer-skripte&#34;&gt;Geschwindigkeit: Immer Skripte&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#berlegung-verzeichnisstruktur-im-repository&#34;&gt;Überlegung: Verzeichnisstruktur im Repository&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ausblick-cicd--schema-migration&#34;&gt;Ausblick: CI/CD &amp; Schema-Migration&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;hinweis-doag&#34;&gt;Hinweis DOAG&lt;/h2&gt;
&lt;p&gt;Dieser Artikel erschien im DOAG Red Stack Magazin 03-2019 und steht auch im &lt;a href=&#34;https://www.doag.org/formes/pubfiles/11388332/03_2019-Red_Stack_Magazin-Ottmar_Gobrecht-Schnellstart_Versionskontrolle_fur_existierende_Oracle_(APEX)Projekte.pdf&#34;&gt;Original&lt;/a&gt; zur Verfügung. Im Gegensatz zum Original kann es hier auf meinem Blog zu Aktualisierungen kommen, falls sich relevante Dinge ändern. Zum Beispiel ist seit der Version zwei des erwähnten Projektes PLEX (PL/SQL Export Utilities) eine APEX-Installation keine Voraussetzung mehr. Damit können auch reine Oracle-Datenbank-Projekte PLEX nutzen - mehr dazu in &lt;a href=&#34;/posts/2019-06-26-new-major-version-of-plex-available/&#34;&gt;diesem Blog-Eintrag&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;einleitung&#34;&gt;Einleitung&lt;/h2&gt;
&lt;p&gt;Der erste Schritt ist der wichtigste, das wissen alle, die sich schon einmal nach langem Zögern endlich auf den Weg gemacht haben - worum auch immer es ging. Das gleiche gilt für die Quellcodeversionierung. Wenn man erst einmal auf dem Weg ist fragt man sich, wie man so lange ohne auskommen konnte. Eine versionierte Quellcodebasis vergrößert die Komfortzone bei der Entwicklung und die investierte Zeit zahlt sich mehrfach wieder aus. Doch wie geht man möglichst einfach und schnell den ersten Schritt? Wie gestaltet man die Struktur eines Repositories?&lt;/p&gt;
&lt;h2 id=&#34;workflownderung-dateibasiertes-arbeiten&#34;&gt;Workflowänderung: Dateibasiertes Arbeiten&lt;/h2&gt;
&lt;p&gt;Eine der wichtigsten Fragen lautet: Kann ich weiterarbeiten wie bisher? Die Antwort hängt ganz davon ab, wie man bisher gearbeitet hat. Grundsätzlich bedeutet das Arbeiten mit einer Quellcodeversionierung auch einen Wechsel weg vom Entwickeln in der Datenbank. Das direkte Ändern und Kompilieren von Code in der Datenbank oder das Ändern von Tabellen mit dem Tool seiner Wahl muss sich hin zu einem dateibasierten Arbeiten entwickeln. Das bedeutet, mit einer Datei im lokalem Quellcoderepository mit dem Tool der Wahl zu arbeiten. Die Veränderungen werden dann aus der Datei heraus kompiliert. Für Schema-Änderungen müssen Skripte den notwendigen DDL Code enthalten. Je nach bisher verwendeten Tools ist das beim Bearbeiten von Logik eher nur ein subtiler, beim Verändern von Datenbankobjekten wie Tabellen dann doch schon ein großer Unterschied. Wurde bisher ein Schema-Diff-Tool verwendet, um Änderungen der Entwicklungsumgebung in die Produktion zu transportieren, dann sieht das vielleicht auf den ersten Blick sogar wie ein Rückschritt aus.&lt;/p&gt;
&lt;p&gt;Der Punkt ist hier, dass man nur dann eine verwertbare Quellcodehistorie bekommt, wenn man konsequent auf das dateibasierte Arbeiten setzt. Es kann auch einen Zwischenschritt hin zu diesem Ansatz geben. Man arbeitet weiter wie bisher und exportiert regelmäßig alle Objekte des Schemas in die Quellcodeverwaltung. Auf diesem Weg erhält man wenigstens eine gewisse geordnete Transparenz der Änderungen. Werden dann im Laufe des Projektes die Vorteile dieses Vorgehens ersichtlich, fehlt einem meist noch die Info, wer denn die jeweiligen Änderungen ausgeführt hat. Außerdem werden durch die gewonnene Transparenz schnell Wünsche geweckt wie &amp;ldquo;Wenn ich den alten Code im Repository habe, dann darf ich ja mal etwas probieren, ich kann ja notfalls zurück&amp;rdquo;. Schon ist die erste Hürde genommen und die Offenheit, vielleicht doch einmal richtig damit loszulegen, da.&lt;/p&gt;
&lt;p&gt;Dass so etwas noch viel besser funktionieren kann, darauf kommen die meisten Entwickler dann selbst. Zum Beispiel das Anlegen einen Branchs (Entwicklungszweig) im lokalen Repository. Damit kann man etwas auszuprobieren ohne Gefahr zu laufen, aufgrund eines unerwartet zu lösenden Bugs die gemachten Änderungen wieder verwerfen zu müssen. Man wechselt bequem in den (parallelen) Hauptzweig, arbeitet am Bugfix, aktualisiert seinen Branch danach auf den geänderten Hauptzweig und kann dann einfach weiter ausprobieren. Das alles ohne die Gefahr Dinge zu verlieren oder andere Kollegen zu beeinflussen. Habe ich jetzt irgendjemanden abgehängt? Kein Problem, einfach loslegen - hier hilft nur Praxis.&lt;/p&gt;
&lt;h2 id=&#34;toolvergleich-ddl-export&#34;&gt;Toolvergleich: DDL-Export&lt;/h2&gt;
&lt;p&gt;Wie bewerkstelligt man den ersten Schritt? Wie exportiert man die Schema-Objekte seiner Anwendung in eine wohlsortierte Verzeichnisstruktur? Die meisten der verwendeten grafischen Entwicklungstools bringen dafür eine Export-Funktion mit. Diese ist je nach Tool mehr oder weniger gut dafür geeignet, ein Quellcoderepository aufzubauen. Deshalb schauen wir uns an, wie die am häufigsten verwendeten Tools SQL-Developer, PL/SQL Developer und Toad das können. Ein Wort vorweg: Die Intention des Schema-Exports dieser Tools ist eigentlich, die Objekte in ein anderes Schema, vielleicht sogar in eine andere Datenbank zu bringen und nicht, ein Quellcoderepository zu erstellen. Folgende Fragen bewegen uns, wenn es darum geht ein solches aufzubauen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ist eine Skript-Datei pro Objekt möglich?&lt;/li&gt;
&lt;li&gt;Sind Unterverzeichnisse pro Objekttyp möglich?&lt;/li&gt;
&lt;li&gt;Sind eigene Dateien für Fremdschlüssel möglich? (Nützlich für einfachere Masterskripte)&lt;/li&gt;
&lt;li&gt;Können &amp;ldquo;Object already exist&amp;rdquo;-Fehler verhindert werden? (Oder anders gefragt: sind die Skripte wiederanlauffähig?)&lt;/li&gt;
&lt;li&gt;Können Daten exportiert werden? (Möglichst im CSV-Format zur Verfolgung von Stammdatenänderungen)&lt;/li&gt;
&lt;li&gt;Ist eine APEX App exportierbar? (Womöglich auch zerlegt in die Einzelteile wie Pages, Shared Components usw.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Abbildung 1 zeigt das Ergebnis bezogen auf die Fragestellung.&lt;/p&gt;
&lt;figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Kriterium&lt;/th&gt;
&lt;th&gt;SQL Dev.&lt;/th&gt;
&lt;th&gt;PL/SQL Dev.&lt;/th&gt;
&lt;th&gt;Toad&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Datei pro Objekt&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unterverz. pro Typ&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FK Constr. extra&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Verhi. &amp;ldquo;object exist&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Export Daten&lt;/td&gt;
&lt;td&gt;Ja&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Jein&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Export APEX App&lt;/td&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Jein&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;td&gt;Nein&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Abbildung 1: Toolvergleich DDL-Export&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Anmerkungen zum SQL Developer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ist am übersichtlichsten&lt;/li&gt;
&lt;li&gt;Viele Formate für Datenexport (auch CSV)&lt;/li&gt;
&lt;li&gt;Umfangreich konfigurierbar&lt;/li&gt;
&lt;li&gt;Export APEX App nur mit Commandline-Version SQLcl&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anmerkungen zum PL/SQL Developer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wenig konfigurierbar&lt;/li&gt;
&lt;li&gt;Enttäuscht für den Aufbau eines Quellcode-Repository&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anmerkungen zu Toad:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zwei Exportmöglichkeiten (mindestens)
&lt;ul&gt;
&lt;li&gt;Entweder Unterverzeichnisse pro Objekttyp&amp;hellip;&lt;/li&gt;
&lt;li&gt;&amp;hellip; oder Daten&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Daten nur als Insert Statements&lt;/li&gt;
&lt;li&gt;Umfangreich konfigurierbar, relativ unübersichtlich&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keines der Tools liefert uns ein fertiges, gut strukturiertes Quellcoderepository. Man muss mehr oder weniger viel nacharbeiten. Das heißt nicht, dass es nicht gehen würde, zumal das Einsortieren der Objekte in eine vernünftige Struktur eine einmalige Arbeit sein sollte. Lediglich bei dem Export der APEX-Anwendung wünscht man sich eine automatische Lösung, weil dieser Export in Zukunft häufiger gemacht werden muss. Das liegt in der Natur von APEX als deklarativem &amp;ldquo;Low Code Framework&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Wir entwickeln die APEX-Anwendung im Browser und die Meta-Daten der Anwendung liegen im APEX-Repository der Datenbank. Ein Export der Anwendung kann auch mit dem Browser gemacht werden, dabei erhält man aber nur eine einzige große SQL-Datei mit der gesamten Applikation. Wünschenswert für ein Quellcode-Repository wäre ein Export der Einzelteile wie z.B. Pages, Shared Components, Plugins usw. Damit lässt sich dann für die Anwendung verfolgen, wie sie sich entwickelt hat und auch eine Suche im Repository nach z.B. einem bestimmten Package-Aufruf macht bei einer zerlegten APEX-Anwendung wesentlich mehr Sinn. In der Vergangenheit konnte man dafür den APEX Export-Splitter verwenden, im Grunde eine Java-Klasse, die im Lieferumfang jeder APEX-Version bis heute enthalten ist. Der Nachteil ist, dass man die so erstellte Verzeichnisstruktur nehmen muss, wie sie vom Splitter erstellt wurde, oder man verändert sie im Nachgang mit lokalen Skripten auf dem PC. Schöner wäre allerdings, die Verzeichnisstruktur schon während des Exports anpassen zu können, um alle Master-Skripte in einem zentralen Ordner des Repositories speichern zu können.&lt;/p&gt;
&lt;p&gt;Seit APEX Version 5.1.4 gibt es zu diesem Zweck das APEX_EXPORT Package. Mit diesem kann man entweder das große Gesamtskript oder eben die zerlegte Variante exportieren. Das Rückgabeformat ist in beiden Fällen eine Collection - jede Zeile der Collection beinhaltet eine Pfadangabe für die jeweilige Exportdatei und ein CLOB-Feld mit dem Inhalt. Man könnte also in einem Export-Skript diese Collection bearbeiten und die Pfadangaben an die eigenen Bedürfnisse anpassen. Genau das macht das vom Autor des Artikels als Open Source veröffentliche Tool-Package PLEX - der Name steht für &lt;span style=&#34;color:red;&#34;&gt;PL&lt;/span&gt;/SQL &lt;span style=&#34;color:red;&#34;&gt;Ex&lt;/span&gt;port Utilities. Des Weiteren kann PLEX jede der genannten Fragestellungen zum DDL-Export mit ja beantworten - kein Wunder, es ist dafür entwickelt worden.&lt;/p&gt;
&lt;h2 id=&#34;schnellstart-package-plex&#34;&gt;Schnellstart: Package PLEX&lt;/h2&gt;
&lt;p&gt;PLEX hat zum Ziel, die erste Version des Repositories mit einer einfachen Query als BLOB selektieren zu können. Nach Speichern des BLOBs in das lokale Verzeichnissystem auf dem PC mit der Endung .zip kann man es entpacken und findet in der generierten Verzeichnisstruktur dann auch Skript-Beispiele für zukünftige halb- oder vollautomatische Exporte und Deployments per Shell-Befehl bzw. SQL*Plus. Ein möglicher Erstexport könnte so aussehen wie in Listing 1 dargestellt.&lt;/p&gt;
&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;BLOB&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; If null, we simply skip the APEX app export. 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        Parameter only available if APEX installed. &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_include_object_ddl&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; If true, include DDL of current user&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;schema and 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        all its objects. &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_include_templates&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; If true, include templates for README.md, export 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        and install scripts. &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_include_runtime_log&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; If true, generate file plex_backapp_log.md with 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        runtime statistics. &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_include_data&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; If true, include CSV data of each table. &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_data_max_rows&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; Maximum number of rows per table. &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_data_table_name_like&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;DEMO_PRODUCT_INFO,DEMO_STATES&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; 
        &lt;span class=&#34;cm&#34;&gt;/*&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; A comma separated list of like expressions to filter 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        the tables. Example: &amp;#39;EMP%,DEPT%&amp;#39; will be translated to 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        &amp;#34;where ... and (table_name like &amp;#39;EMP%&amp;#39; escape &amp;#39;\&amp;#39; or
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        table_name like &amp;#39;DEPT%&amp;#39; escape &amp;#39;\&amp;#39;)&amp;#34;. &lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 1: Möglicher Erstexport&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Da PLEX boolesche Parameter besitzt, benutzen wir eine Inline-Funktion in der With-Klausel. Wer eine Datenbankversion kleiner als 12c verwendet erstellt sich eine Hilfsfunktion analog dem Beispiel. PLEX hat noch einige Parameter mehr um z.B. den APEX App Export zu konfigurieren. Weitere Details sind auf der offiziellen Projektseite unter &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;github.com/ogobrecht/plex&lt;/a&gt; zu finden. Je nach Größe des Schemas und der APEX App kann dieser erste Aufruf zwischen wenigen Sekunden und mehreren Minuten dauern. Das liegt daran, dass im Hintergund für jedes Objekt das Package DBMS_METADATA bemüht wird, um das DDL des Objektes zu generieren. Wer an Laufzeitinfos interessiert ist, findet im Hauptverzeichnis des Exportes eine Logdatei mit Infos, was PLEX so alles gemacht hat und wie lange die jeweiligen Schritte gedauert haben. PLEX selbst existiert jetzt in einer ersten Version - Verbesserungsvorschläge oder Fehlermeldungen sind willkommen und können über die Projektseite als Issue gemeldet werden.&lt;/p&gt;
&lt;p&gt;Ab hier hängt es stark von den Bedürfnissen des jeweiligen Projektes ab, ob und wie häufig man einen DDL-Export ausführt. Der Normalweg sollte ein regelmäßiges Exportieren der APEX Anwendung sein. Alles andere sollte ab jetzt lokal bearbeitet werden und es infolge dessen kein Bedürfniss für einen Export geben. Wie schon eingangs erwähnt, mag es aber auch Situationen geben, in denen man regelmäßig alle Schema-Objekte exportiert, um die Anwendung zu dokumentieren. Dies sollte aber nur als Zwischenschritt hin zu einer dateibasierten Arbeitsweise verstanden werden.&lt;/p&gt;
&lt;p&gt;Ein Sonderfall stellt generierter Code dar: Also zum Beispiel das Nutzen von Quick-SQL in APEX oder das Generieren von Tabellen-APIs. Hier kann man überlegen, den generierten Code mit entsprechend konfigurierten Objekt-Filtern zu exportieren. Bei APIs sollte man überlegen, ob man nicht lieber den Generator versioniert anstelle des generierten Codes - das hängt aber ganz davon ab, ob der generierte Code noch manuell verändert wird oder nicht. Jeder manuell erstellte Code sollte versioniert werden.&lt;/p&gt;
&lt;h2 id=&#34;geschwindigkeit-immer-skripte&#34;&gt;Geschwindigkeit: Immer Skripte&lt;/h2&gt;
&lt;p&gt;Wie man schon an den von PLEX mitgelieferten Skript-Beispielen erkennen kann, sollte es das Ziel sein, jedwedes Deployment per Skript auszuführen. Dazu gehört dann auch wieder die Überlegung, das Objekt-DDL nur beim allerersten Mal zu exportieren - denn was passiert z.B. beim Export von Tabellen-DDL? Hat man eine weitere Spalte per Alter Table Anweisung in das Tabellenskript geschrieben und dafür gesorgt, dass es wiederanlauffähig ist (siehe Listing 2), dann überschreibt ein weiterer DDL-Export die Alter Anweisung und unser Tabellenskript enthält einfach die neue Spalte gelistet in der Create Table Anweisung. Diese wird aber aufgrund der Wiederanlauffähigkeit niemals mehr ausgeführt, da unsere Tabelle ja schon existiert.&lt;/p&gt;
&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;DEMO_STATES&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object_name&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt; 
     &lt;span class=&#34;n&#34;&gt;MINUS&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object_name&lt;/span&gt; 
      &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_objects&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IMMEDIATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;[
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;----------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;CREATE TABLE &amp;#34;DEMO_STATES&amp;#34; (
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  &amp;#34;ST&amp;#34;         VARCHAR2(30), 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  &amp;#34;STATE_NAME&amp;#34; VARCHAR2(30)
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;) 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;----------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    ]&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;STATE_DESCRIPTION&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column_name&lt;/span&gt; 
      &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt; 
     &lt;span class=&#34;n&#34;&gt;MINUS&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column_name&lt;/span&gt; 
      &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_tab_columns&lt;/span&gt;
     &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table_name&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;DEMO_STATES&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
       &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;STATE_DESCRIPTION&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IMMEDIATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;[
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;----------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;ALTER TABLE demo_states ADD (
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  state_description VARCHAR2(255)
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;)
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;----------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    ]&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 2: Wiederanlauffähiges Skript&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Somit haben wir jetzt eine Quellcodedatei, die für das Deployment nicht mehr geeignet ist. Schade eigentlich, denn bis eben hätten wir mit unserem Master-Skript einfach immer alle Objekt-Skripte aufrufen können und nur die Änderungen (wie z.B. unsere neue Spalte) wären wirklich ausgeführt worden - ein einfaches Deployment und eine übersichtliche Historie im Repository. Dem gegenüber steht das automatische Erstellen von Diff-Skripten, die mitunter nicht wiederanlauffähig sind und auch bei etwas komplizierteren Schema-Änderungen die Gefahr eines Datenverlustes beinhalten. Man kommt auch bei sehr teuren Tools dieser Klasse nicht umhin, die generierten Skripte auf Richtigkeit zu überprüfen und manuelle Anpassungen für etwaige Datenmigrationen auszuführen. Die Entscheidung, welchen Weg man geht, nimmt einem niemand ab. Jetzt sind wir mittendrin in der Diskussion wie man ein Deployment in das Zielsystem durchführt. Da kann dann auch PLEX nicht weiterhelfen - außer, dass das Package per se versucht, alle notwenigen Objekt-DDLs wiederanlauffähig zu extrahieren. Hier sind wir im weiten Feld der individuellen Bedürfnisse eines Projektes angekommen. Die von PLEX gelieferten Skriptbeispiele müssen auf jeden Fall an die Bedürfnisse des jeweiligen Projektes angepasst werden. Der Autor z.B. unterscheidet fast immer zwischen Skripten für das Backend und das Frontend - sowohl für den Export als auch das Deployment.&lt;/p&gt;
&lt;h2 id=&#34;berlegung-verzeichnisstruktur-im-repository&#34;&gt;Überlegung: Verzeichnisstruktur im Repository&lt;/h2&gt;
&lt;p&gt;Wie soll man sein Repository strukturieren? Hier ein Vorschlag, der sich im Laufe der Zeit für mich persönlich als vorteilhaft herausgestellt hat. Jedes Projekt mag da andere Vorstellungen haben. Ich verwende hier eine einfache Auflistung - die ersten Wörter jedes Listenpunktes stellen den Verzeichnisnamen dar und etwaige Erklärungen finden sich in Klammern dahinter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;app_backend (unser Schema DDL)
&lt;ul&gt;
&lt;li&gt;constraints (ein Ordner pro Objekttyp)&lt;/li&gt;
&lt;li&gt;package_bodies&lt;/li&gt;
&lt;li&gt;packages&lt;/li&gt;
&lt;li&gt;ref_constraints&lt;/li&gt;
&lt;li&gt;sequences&lt;/li&gt;
&lt;li&gt;tables&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;app_data (Verfolgung von Masterdaten, optional)&lt;/li&gt;
&lt;li&gt;app_frontend (unsere APEX app)
&lt;ul&gt;
&lt;li&gt;pages&lt;/li&gt;
&lt;li&gt;shared_components&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;docs (die Dokumentation)&lt;/li&gt;
&lt;li&gt;reports&lt;/li&gt;
&lt;li&gt;scripts (alle Masterskripte vereint)
&lt;ul&gt;
&lt;li&gt;logs (Export- und Installations-Logs)
&lt;ul&gt;
&lt;li&gt;export_app_100_from_MYSCHEMA_at_DEV_20190315_132542&lt;/li&gt;
&lt;li&gt;install_app_100_into_MYSCHEMA_at_TEST_20190318_083756&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;misc (häufig genutzte Skripte wie z.B. Schema rekompilieren)&lt;/li&gt;
&lt;li&gt;1_export_app_from_DEV.bat (Shellskript mit Parametern für das eigenliche SQL Exportskript)&lt;/li&gt;
&lt;li&gt;2_install_app_into_TEST.bat (Shellskript mit Parametern für das eigenliche SQL Deploymentskript)&lt;/li&gt;
&lt;li&gt;3_install_app_into_PROD.bat&lt;/li&gt;
&lt;li&gt;export_app_custom_code.sql (Export Master Script mit individuellen Anpassungen)&lt;/li&gt;
&lt;li&gt;install_app_custom_code.sql (Deployment Master Script mit individuellen Anpassungen je Release)&lt;/li&gt;
&lt;li&gt;install_backend_generated_by_plex.sql (wird aufgerufen vom Masterskript)&lt;/li&gt;
&lt;li&gt;install_frontend_generated_by_apex.sql (wird aufgerufen vom Masterskript)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tests (Unit und Frontend-Tests)&lt;/li&gt;
&lt;li&gt;README.md (generelle Informationen zum Projekt und Links in die Dokumentation)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Das Repository sollte logisch aufgebaut sein und keine extrem tiefen Verzeichnisstrukturen beinhalten, um den Umgang damit zu erleichtern. Alle Master-Skripte sind vereint in einem Skript-Ordner, auch das von APEX generierte Installationsskript für das Frontend. Alle Master-Skripte sollten während der Verwendung die jeweiligen Rückmeldungen in entsprechende Log-Dateien im Unterordner logs ablegen - damit sind Exporte von Quellcode und Deployments in Zielsysteme nachvollziehbar.&lt;/p&gt;
&lt;h2 id=&#34;ausblick-cicd--schema-migration&#34;&gt;Ausblick: CI/CD &amp;amp; Schema-Migration&lt;/h2&gt;
&lt;p&gt;Die skizzierte Diskussion um das Deployment lässt es schon erahnen: Einfach ein Quellcoderepository aufsetzen und man ist fertig ist nicht die Lösung. Das war nur erste Schritt zum Aufwärmen. Denn hat man erst einmal alles wohl strukturiert und per Skript lauffähig gemacht, dann kann man das Deployment auch im zweiten Schritt automatisieren. Der Inhalt dieser Diskussion sprengt aber bei weitem den Rahmen dieses Artikels, welcher ja den ersten Schritt im Fokus hat. Daher legt der Autor jedem nahe, nach diesem ersten Schritt nicht stehen zu bleiben und weitere Schritte ins Auge zu fassen. Einen sehr guten Grundlagenartikel hat z.B. Martin Fowler zum Thema verfasst - er betrachtet jede Änderung an der Datenbank als eine Migration. Zum weiteren Studium seien daher folgende Einstiegspunkte genannt:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Antti Kirmanen: &lt;a href=&#34;https://entwickler.de/online/development/git-subversion-svn-versionskontrollsystem-579792227.html&#34;&gt;Git vs. Subversion (SVN): Welches Versionskontrollsystem sollten Sie nutzen?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Martin Fowler: &lt;a href=&#34;https://www.martinfowler.com/articles/evodb.html&#34;&gt;Evolutionary Database Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Samuel Nitsche:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cleandatabase.wordpress.com/2017/09/22/there-is-no-clean-database-development-without-version-control/&#34;&gt;There is no clean (database) development without Version Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cleandatabase.wordpress.com/2017/11/28/one-does-not-simply-update-a-database-migration-based-database-development/&#34;&gt;“One does not simply update a database” – migration based database development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Blain Carter:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learncodeshare.net/2018/04/30/tips-to-help-pl-sql-developers-get-started-with-ci-cd/&#34;&gt;Tips to help PL/SQL developers get started with CI/CD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learncodeshare.net/2018/07/16/ci-cd-for-database-developers-export-database-objects-into-version-control/&#34;&gt;CI/CD for Database Developers – Export Database Objects into Version Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Jeff Smith: &lt;a href=&#34;https://www.thatjeffsmith.com/archive/2019/01/19-x-sqlcl-teaser-liquibase/&#34;&gt;19.X SQLcl Teaser: LIQUIBASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy version controlling :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2019-06-26-new-major-version-of-plex-available/</id>
<link href="https://ogobrecht.github.io/posts/2019-06-26-new-major-version-of-plex-available/" rel="alternate" type="text/html" title="New Major Version of PL/SQL Export Utilities Available" />
<title type="html">New Major Version of PL/SQL Export Utilities Available</title>
<summary type="html">PLEX is now independent from an APEX installation</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<published>2019-06-26T00:00:00+01:00</published>
<updated>2019-06-26T21:49:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2019-06-26-new-major-version-of-plex-available/">
&lt;p&gt;&lt;em&gt;PLEX is now independent from an APEX installation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;PLEX is a PL/SQL package with export utilities - see &lt;a href=&#34;https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/&#34;&gt;this post&lt;/a&gt; what it can do for you. In the past it was dependent on APEX for two reasons: The APEX_EXPORT package to allow exporting an APEX app and the APEX_ZIP package for compressing the resulting file collection to a zip file.&lt;/p&gt;
&lt;p&gt;After the first public release of PLEX, I got a comment like &amp;ldquo;Nice tool, but I don&#39;t use APEX&amp;rdquo;. I thought I should make PLEX independent from APEX to allow at least the export of all the schema DDL and also the table data. Some weeks ago Jürgen Schuster contacted me to try out PLEX for an switch from Subversion to Git for one of his customer projects. It turns out that PLEX was not able to export the schema DDL because of errors from DBMS_METADATA regarding many Java classes. And the second issue was that one of their machines had no APEX installed. This was the final trigger for me to rework the implementation of PLEX.&lt;/p&gt;
&lt;p&gt;PLEX is now independent from an APEX installation. Thanks to Anton Scheffer for his &lt;a href=&#34;https://technology.amis.nl/2010/03/13/utl_compress-gzip-and-zlib/&#34;&gt;as_zip package&lt;/a&gt;. PLEX reuses the methods for compressing files and uses conditional compilation to include/exclude functionality depending on APEX. Because PLEX cannot rely on APEX anymore, the return type for the methods &lt;strong&gt;backapp&lt;/strong&gt; and &lt;strong&gt;queries_to_csv&lt;/strong&gt; has changed from &lt;code&gt;apex_t_export_files&lt;/code&gt; to &lt;code&gt;plex.tab_export_files&lt;/code&gt;. This was unavoidable and if you have existing scripts and you want to update to the new PLEX version, you have to change the variables based on that return type. A simple search and replace will normally do the trick. This breaking change in the PLEX API is also the reason for a new major version.&lt;/p&gt;
&lt;p&gt;The other improvement is better error handling and logging. Per default you will find two files in an export collection: plex_runtime_log and plex_error_log. The former is for an overview what happened and how long it took and the latter is for detailed error messages. If you encounter errors and you think that should not happen and is a problem of PLEX, then please open an &lt;a href=&#34;https://github.com/ogobrecht/plex/issues/new&#34;&gt;issue on GitHub&lt;/a&gt;. I was able to export the schema APEX_19_0100 with around 5000 objects on my dev machine&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;Project on Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ogobrecht/plex/releases/latest&#34;&gt;Download latest version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy exporting :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2019-06-09-new-version-of-d3-force-network-chart-available/</id>
<link href="https://ogobrecht.github.io/posts/2019-06-09-new-version-of-d3-force-network-chart-available/" rel="alternate" type="text/html" title="New Version of D3 Force Network Chart Available" />
<title type="html">New Version of D3 Force Network Chart Available</title>
<summary type="html">Links can now have a label</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="chart" label="Chart" scheme="https://ogobrecht.github.io/tags/" />
<category term="svg" label="SVG" scheme="https://ogobrecht.github.io/tags/" />
<published>2019-06-09T00:00:00+01:00</published>
<updated>2019-06-09T16:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2019-06-09-new-version-of-d3-force-network-chart-available/">
&lt;p&gt;&lt;em&gt;Links can now have a label&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;link-label.png&#34; alt=&#34;Link label example&#34;&gt;&lt;/p&gt;
&lt;p&gt;First of all: Thanks to the community!&lt;/p&gt;
&lt;p&gt;From time to time someone has new ideas or questions about the D3 network chart. Some time ago I thought my D3 implementation is more or less feature complete. But in the last weeks I worked again on the code to bring in new feature wishes from the community.&lt;/p&gt;
&lt;p&gt;The most visible one in the new version 3.1 is the ability to add labels to links - see the links between Allen, Blake and Ward in the screenshot above. The labels are positioned in a way that they are always readable - this is the reason why they appear sometimes above and sometimes below a link line (they are rotated, if needed). The nice thing is that you can also read both labels when you have links in both directions between two nodes. The other benefit of having labels on links is that they extend the area for the link click and hover events. This improves the usabiltiy in cases where the links should show a tooltip when they are hovered or some action should be executed when they are clicked. This is normally not so easy because the links are so narrow.&lt;/p&gt;
&lt;p&gt;There are also new helper methods and one new option - for the full change log see the project on &lt;a href=&#34;https://github.com/ogobrecht/d3-force-apex-plugin#changelog&#34;&gt;GitHub&lt;/a&gt; and for online demos either the &lt;a href=&#34;https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html&#34;&gt;standalone version in the docs&lt;/a&gt; or the APEX plug-in version on &lt;a href=&#34;https://apex.oracle.com/pls/apex/f?p=18290:1&#34;&gt;apex.oracle.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy networking :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2019-03-11-doag-regionaltreffen-muenchen/</id>
<link href="https://ogobrecht.github.io/posts/2019-03-11-doag-regionaltreffen-muenchen/" rel="alternate" type="text/html" title="DOAG Regionaltreffen 11. März 2019, München" />
<title type="html">DOAG Regionaltreffen 11. März 2019, München</title>
<summary type="html">Vortrag: Schnellstart - Versionskontrolle für existierende (APEX-)Projekte</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<category term="slides" label="Slides" scheme="https://ogobrecht.github.io/tags/" />
<category term="doag" label="DOAG" scheme="https://ogobrecht.github.io/tags/" />
<published>2019-03-11T00:00:00+01:00</published>
<updated>2019-03-16T13:06:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2019-03-11-doag-regionaltreffen-muenchen/">
&lt;p&gt;&lt;em&gt;Vortrag: Schnellstart - Versionskontrolle für existierende (APEX-)Projekte&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ich hatte die Ehre an einer gemeinsamen Veranstaltung der DOAG Regionalgruppe München und der Oracle APEX Meetup-Gruppe München einen Vortrag halten zu dürfen zu dem im Untertitel genannten Thema.&lt;/p&gt;
&lt;p&gt;Danke an Alle, die an dem Abend da waren. Der Raum war voll - wohl wegen Carsten Czarski und den von ihm vorgestellten APEX 19.1 Data Loading Features. Mit so vielen Teilnehmern macht das gleich doppelt Spaß.&lt;/p&gt;
&lt;p&gt;Für die Teilnehmer hier die Folien:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/slides/2019-03-11-schnellstart-versionskontrolle-oracle-apex-projekte/&#34; target=&#34;_blank&#34;&gt;Open HTML presentation in a new window/tab&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&#34;item-meta&#34;&gt;
  &lt;p&gt;You need a modern browser with activated JavaScript. Navigation tips:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;N&lt;/code&gt;, &lt;code&gt;Space&lt;/code&gt; = Next slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;P&lt;/code&gt; = Previous slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;O&lt;/code&gt;, &lt;code&gt;Esc&lt;/code&gt; = Overview all slides&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;?&lt;/code&gt; = Show all keyboard shortcuts&lt;/li&gt;
    &lt;li&gt;All links are opened in a new window/tab&lt;/li&gt;
    
    
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Für das im Vortrag genannte Package PLEX siehe auch das &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;Projekt auf GitHub&lt;/a&gt; und diesen &lt;a href=&#34;https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/&#34;&gt;Blog Post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Weiterführende Links zum Thema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Antti Kirmanen: &lt;a href=&#34;https://entwickler.de/online/development/git-subversion-svn-versionskontrollsystem-579792227.html&#34;&gt;Git vs. Subversion (SVN): Welches Versionskontrollsystem sollten Sie nutzen?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wikipedia: &lt;a href=&#34;https://en.wikipedia.org/wiki/Schema_migration&#34;&gt;Schema migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Martin Fowler: &lt;a href=&#34;https://www.martinfowler.com/articles/evodb.html&#34;&gt;Evolutionary Database Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Samuel Nitsche:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cleandatabase.wordpress.com/2017/09/22/there-is-no-clean-database-development-without-version-control/&#34;&gt;There is no clean (database) development without Version Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cleandatabase.wordpress.com/2017/11/28/one-does-not-simply-update-a-database-migration-based-database-development/&#34;&gt;“One does not simply update a database” – migration based database development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Blain Carter:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learncodeshare.net/2018/04/30/tips-to-help-pl-sql-developers-get-started-with-ci-cd/&#34;&gt;Tips to help PL/SQL developers get started with CI/CD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learncodeshare.net/2018/07/16/ci-cd-for-database-developers-export-database-objects-into-version-control/&#34;&gt;CI/CD for Database Developers – Export Database Objects into Version Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Jeff Smith: &lt;a href=&#34;https://www.thatjeffsmith.com/archive/2019/01/19-x-sqlcl-teaser-liquibase/&#34;&gt;19.X SQLcl Teaser: LIQUIBASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vorgestellte Tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Die Hintergrundfotos der Folien stammen von unsplash.com - hier der Link zur vollständigen &lt;a href=&#34;https://unsplash.com/collections/4373998/quickstart-version-control-for-oracle-apex-projects&#34;&gt;Foto-Kollektion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy coding and version controlling :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2019-01-10-ploc-plsql-code-to-doc-converter/</id>
<link href="https://ogobrecht.github.io/posts/2019-01-10-ploc-plsql-code-to-doc-converter/" rel="alternate" type="text/html" title="PLOC - Convert PL/SQL Code into Markdown Docs" />
<title type="html">PLOC - Convert PL/SQL Code into Markdown Docs</title>
<summary type="html">Another way to document PL/SQL business logic</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<category term="converter" label="Converter" scheme="https://ogobrecht.github.io/tags/" />
<category term="docs" label="Docs" scheme="https://ogobrecht.github.io/tags/" />
<category term="npm" label="npm" scheme="https://ogobrecht.github.io/tags/" />
<published>2019-01-10T00:00:00+01:00</published>
<updated>2019-01-11T20:02:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2019-01-10-ploc-plsql-code-to-doc-converter/">
&lt;p&gt;&lt;em&gt;Another way to document PL/SQL business logic&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some months ago I had to write a README file with Markdown syntax for a PL/SQL open source project. I changed function and procedure parameters of the package often during the implementation. Therefore, maintaining the documentation was no fun in the beginning. Maybe you know this from your own (payed) projects ;-)&lt;/p&gt;
&lt;p&gt;Normally in the business world I see minimalistic comments in the code and a dedicated documentation independent of the code. As you can imagine, the latter is sometimes - let&#39;s say &amp;ldquo;out of date&amp;rdquo;, if it exists at all &amp;hellip;&lt;/p&gt;
&lt;p&gt;I don&#39;t want to discuss the reasons for this here - you all know several ones. And I also do not have a general solution for code documentation. But I have some ideas what is important for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The base of a good PL/SQL code documentation is a good code structure
&lt;ul&gt;
&lt;li&gt;No single functions and procedures - packages with meaningful names are the way to go&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;As I have the source code under version control in local files on my computer I need a command line tool for the doc generation - there is no need for a database connection
&lt;ul&gt;
&lt;li&gt;The CLI should be able to process multiple files (packages)&lt;/li&gt;
&lt;li&gt;For my small open source project I have only one package and I want to define a document name different then the package name, so I need a CLI parameter for that&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Comments should be written directly after the package/function/procedure signature (in the package spec, optionally it should also work for triggers and types)
&lt;ul&gt;
&lt;li&gt;I want to use Markdown for the comments - this allows me to write also bigger text parts and code examples&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I don&#39;t want to describe all parameters in a JavaDoc manner
&lt;ul&gt;
&lt;li&gt;PL/SQL is strong typed, everything I need to know is visible in the signature of a function or procedure&lt;/li&gt;
&lt;li&gt;Replicating the parameters for documentation is error prone and does not follow the DRY principles&lt;/li&gt;
&lt;li&gt;With meaningful parameter names you need often no or only short comments - these can be placed directly after the parameters as single line comments&lt;/li&gt;
&lt;li&gt;Long descriptions can be written in the Markdown main comment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The package/function/procedure signature should be automatically included in the output as a code block for reference&lt;/li&gt;
&lt;li&gt;Output should also be Markdown - this can be easily read by humans and further processed by machines
&lt;ul&gt;
&lt;li&gt;Only documented functions/procedures should be included in the output to keep the focus on the important stuff&lt;/li&gt;
&lt;li&gt;I want to have an automatic table of contents in each generated document&lt;/li&gt;
&lt;li&gt;With the help of &lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt; many formats like Word, RTF, PDF or HTML can be generated (for GitHub I only need Markdown)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are already several open source projects available for PL/SQL code documentation generation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pldoc.sourceforge.net/&#34;&gt;PLDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oradoclet.sourceforge.net/&#34;&gt;OraDoclet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://schemaspy.sourceforge.net/&#34;&gt;SchemaSpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.naturaldocs.org/&#34;&gt;Natural Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/OraOpenSource/plsql-md-doc&#34;&gt;PL/SQL to Markdown Documenter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only the last one is able to generate Markdown docs, but the input has to be in JavaDoc. All the others can produce HTML output and often some other formats like RTF, Word or PDF. Natural Docs has a Markdown like simple text syntax, but also no Markdown output. Some of the tools can automatically document a whole schema - that is not the focus of PLOC. Most comparable is the intention of PL/SQL to Markdown  Documenter.&lt;/p&gt;
&lt;p&gt;So I had to do it by myself. I called it PLOC (PLDoc was already used, so I skipped the D&amp;hellip;) and it is implemented in JavaScript as a npm package and currently used by me for the following two projects: &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;PL/SQL Export Utilities&lt;/a&gt; and &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;Oracle Table API Generator&lt;/a&gt;. It is very lightweight - the main code without the CLI has currently less characters as the Markdown source of this blog post. Maybe it is also useful for you. If not, have a look at the other mentioned projects.&lt;/p&gt;
&lt;p&gt;More infos about &lt;a href=&#34;https://github.com/ogobrecht/ploc&#34;&gt;PLOC&lt;/a&gt; itself can be found on the &lt;a href=&#34;https://github.com/ogobrecht/ploc&#34;&gt;project page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy coding and documenting :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-12-26-table-api-generator-v0.5.0-available/</id>
<link href="https://ogobrecht.github.io/posts/2018-12-26-table-api-generator-v0.5.0-available/" rel="alternate" type="text/html" title="Table API Generator v0.5.0 Available" />
<title type="html">Table API Generator v0.5.0 Available</title>
<summary type="html">Long changelog and took a long time</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<category term="oddgen" label="oddgen" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-12-26T00:00:00+01:00</published>
<updated>2018-12-26T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-12-26-table-api-generator-v0.5.0-available/">
&lt;p&gt;&lt;em&gt;Long changelog and took a long time&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Short before Christmas André and I released version 0.5.0 of our &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;PL/SQL table API generator&lt;/a&gt;. It took a long time to come to this point. One of the reasons behind was the fact that we had to rework some internals to support feature wishes from the community. Here the most important features of the new version:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for multicolumn primary keys&lt;/li&gt;
&lt;li&gt;Support for 12c long identifier names&lt;/li&gt;
&lt;li&gt;More control over the API features and name (10 new parameters)&lt;/li&gt;
&lt;li&gt;Insert methods:
&lt;ul&gt;
&lt;li&gt;Can have the dictionary column defaults&lt;/li&gt;
&lt;li&gt;Can return the whole row instead of the primary key&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can exclude columns (e.g. audit columns) for inserts and updates&lt;/li&gt;
&lt;li&gt;Improved template engine:
&lt;ul&gt;
&lt;li&gt;Generated code better readable because of formatted parameter lists&lt;/li&gt;
&lt;li&gt;Tables with many columns no longer breaking character limits&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Special methods for testing and dummy data generation&lt;/li&gt;
&lt;li&gt;Also see the &lt;a href=&#34;https://github.com/OraMUC/table-api-generator/blob/master/docs/changelog.md#050-2018-12-23&#34;&gt;full changelog on the project site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy new year and happy coding :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/</id>
<link href="https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/" rel="alternate" type="text/html" title="New Major Version of D3 Force Network Chart Available" />
<title type="html">New Major Version of D3 Force Network Chart Available</title>
<summary type="html">Better responsiveness by implementing a resize observer</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="chart" label="Chart" scheme="https://ogobrecht.github.io/tags/" />
<category term="svg" label="SVG" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-12-02T00:00:00+01:00</published>
<updated>2018-12-05T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/">
&lt;p&gt;&lt;em&gt;Better responsiveness by implementing a resize observer&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;example&#34;&gt;&lt;/div&gt;&lt;!--the graph container--&gt;
&lt;p&gt;Since APEX version 5 was published with the Universal Theme, I was thinking that I needed something for better responsiveness of the graph. Although it was possible to configure the graph to use the DOM parent width, the responsiveness was not so good because of situations where the window size does not change (we use the window resize event to trigger the change of the width) but the available space for the graph changes. How can the graph react to this?&lt;/p&gt;
&lt;p&gt;The problem is that a network chart is not a simple image which can be resized according to the available space. The graph is an SVG with multiple layers to handle the zoom and pan, the lasso, a legend that needs to be in a fixed size&amp;hellip;   As you can see, there must be a procedural solution. And for this we need a trigger, which always fires when the (possible) size of the graphs parent DOM element changes.&lt;/p&gt;
&lt;p&gt;Fortunately, there is a &lt;a href=&#34;https://wicg.github.io/ResizeObserver/&#34;&gt;W3C draft for a resize observer&lt;/a&gt; and a &lt;a href=&#34;https://github.com/que-etc/resize-observer-polyfill&#34;&gt;polyfill&lt;/a&gt; available.&lt;/p&gt;
&lt;p&gt;To put the things together, I had to make breaking changes on the API (the reason for a new major version):&lt;/p&gt;
&lt;p&gt;I made the API zoom methods independent of the option &lt;code&gt;zoomMode&lt;/code&gt; and set the default to true for the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zoomToFitOnForceEnd&lt;/code&gt; (was false in the past)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zoomToFitOnResize&lt;/code&gt; (new option)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keepAspectRatioOnResize&lt;/code&gt; (new option)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When setting the option &lt;code&gt;useDomParentWidth&lt;/code&gt; to true together with the previous mentioned defaults, you can achieve a responsiveness like with images set to width 100%. Try it out by resizing your browser window.&lt;/p&gt;
&lt;p&gt;For the full change log see the project on &lt;a href=&#34;https://github.com/ogobrecht/d3-force-apex-plugin#changelog&#34;&gt;GitHub&lt;/a&gt; and for a demo the app on &lt;a href=&#34;https://apex.oracle.com/pls/apex/f?p=18290:1&#34;&gt;apex.oracle.com&lt;/a&gt; (which currently does not use the universal theme, new demo app is work in progress&amp;hellip;).&lt;/p&gt;
&lt;p&gt;Happy networking :-)&lt;br&gt;
Ottmar&lt;/p&gt;
&lt;link  href=&#34;/assets/d3.js/d3-force-3.0.0.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;script src=&#34;/assets/d3.js/ResizeObserver-1.5.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-3.5.6.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-force-3.0.0.min.js&#34;&gt;&lt;/script&gt;
&lt;style&gt;.net_gobrechts_d3_force_tooltip { z-index: auto; }&lt;/style&gt;
&lt;script&gt;
window.onload = function() {
    window.example = netGobrechtsD3Force(&#39;example&#39;)
        .height(400)
        .width(800)
        .useDomParentWidth(true) //for responsive layout
        //.zoomMode(true)
        .lassoMode(true)
        .wrapLabels(true)
        .showBorder(false)
        .debug(true) //to enable the customization wizard
        .render(); //sample data is provided when called without data
        //see also https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html
    d3.select(&#39;#example&#39;).select(&#39;svg&#39;).classed(&#39;shadow&#39;, true);
}
&lt;/script&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/</id>
<link href="https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/" rel="alternate" type="text/html" title="PLEX - PL/SQL Export Utilities" />
<title type="html">PLEX - PL/SQL Export Utilities</title>
<summary type="html">Export Oracle APEX app, ORDS modules, all schema objects and table data in one go</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-08-26T00:00:00+01:00</published>
<updated>2020-01-01T20:15:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/">
&lt;p&gt;&lt;em&gt;Export Oracle APEX app, ORDS modules, all schema objects and table data in one go&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UPDATE 2019-06-26 regarding PLEX v2.0.0: PLEX can now be installed and used without an APEX installation. However, to export an APEX app you need APEX 5.1.4 or higher installed on your system. Without APEX your PLEX package has no options for an app export because of conditional compilation. You are still able to export your schema DDL and table data. Hope this helps some folks out there &amp;ndash; Ottmar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PLEX is a standalone PL/SQL package with export utilities. It was created to be able to quickstart version control for existing (APEX) apps. It currently has two main functions called &lt;strong&gt;BackApp&lt;/strong&gt; and &lt;strong&gt;Queries_to_CSV&lt;/strong&gt;. Queries_to_CSV is used by BackApp as a helper function, but its functionality is also useful as a standalone. This post is all about BackApp, which has the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Export the app definition of an APEX app (splitted files and optional single SQL file)&lt;/li&gt;
&lt;li&gt;Export all ORDS modules from the current schema&lt;/li&gt;
&lt;li&gt;Export all object DDL from the current schema&lt;/li&gt;
&lt;li&gt;Export table data into CSV files&lt;/li&gt;
&lt;li&gt;Provide basic script templates for export/import of whole app for DEV, TEST and PROD&lt;/li&gt;
&lt;li&gt;Everything in a (hopefully) nice directory structure ready to use with version control&lt;/li&gt;
&lt;li&gt;Return value is a file collection of type plex.tab_export_files (it was apex_t_export_files before PLEX version 2) for further processing
&lt;ul&gt;
&lt;li&gt;Each file in the collection is represented by a record with two columns
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; of type VARCHAR2(255), which is in fact the file path&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contents&lt;/code&gt; of type CLOB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can optionally zip the file collection with the helper function &lt;code&gt;to_zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Also see the my previous post on &lt;a href=&#34;https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control&#34;&gt;how to handle the apex_t_export_files type returned by the APEX_EXPORT package with SQL*Plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ogobrecht/plex/releases/latest&#34;&gt;Download the latest code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run the provided install script &lt;code&gt;plex_install.sql&lt;/code&gt; (provides compiler flags) in your desired schema - could also be a central tools schema, don&#39;t forget &lt;code&gt;grant execute on plex to xxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Startup your favorite SQL Tool, connect to your app schema and fire up the following query:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;yourAppId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Save the resulting BLOB file under a name with the extension &lt;code&gt;.zip&lt;/code&gt; and extract it to a local directory of your choice. You will find this directory structure and files:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;- app_backend (only, when p_include_object_ddl is set to true, see next example)
  - package_bodies
  - packages
  - tables
  - ref_constraints
  - ...
- app_data (only, when p_include_data is set to true)
- app_frontend (for the apex app files without subfolder fxxx)
  - pages
  - shared_components
  - ...
- app_web_services (only, when p_include_ords_modules is set to true)
- docs
- scripts
  - logs
  - templates
    - 1_export_app_from_DEV.bat
    - 2_install_app_into_TEST.bat
    - 3_install_app_into_PROD.bat
    - export_app_custom_code.sql
    - install_app_custom_code.sql
  - install_backend_generated_by_plex.sql
  - install_frontend_generated_by_apex.sql
  - install_web_services_generated_by_ords.sql
- tests
- plex_README.md
- plex_runtime_log.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you like, you can fully configure your first export into the zip file. The &lt;code&gt;PLEX.BackApp&lt;/code&gt; method has boolean parameters, so you need to use an inline function in a pure SQL context. You can also use an anonymous PL/SQL block or you create a small SQL wrapper for the method like the inline function of the example. All parameters are optional and listed here with their default values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Inline function because of boolean parameters (needs Oracle 12c or higher).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- Alternative create a helper function and call that in a SQL context.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FUNCTION&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;BLOB&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;RETURN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;-- All parameters are optional and shown with their defaults
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-- APEX App (only available, when APEX is installed):
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt;                      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If null, we simply skip the APEX app export.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_date&lt;/span&gt;                    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include export date and time in the result.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_public_reports&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include public reports that a user saved.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_private_reports&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include private reports that a user saved.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_notifications&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include report notifications.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_translations&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include application translation mappings and all text from the translation repository.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_pkg_app_mapping&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, export installed packaged applications with references to the packaged application definition. If FALSE, export them as normal applications.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_original_ids&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, export with the IDs as they were when the application was imported.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_subscriptions&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, components contain subscription references.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_comments&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include developer comments.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_supporting_objects&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If &amp;#39;Y&amp;#39;, export supporting objects. If &amp;#39;I&amp;#39;, automatically install on import. If &amp;#39;N&amp;#39;, do not export supporting objects. If null, the application&amp;#39;s include in export deployment value is used.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_include_single_file&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, the single sql install file is also included beside the splitted files.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_build_status_run_only&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, the build status of the app will be overwritten to RUN_ONLY.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-- ORDS Modules (only available, when ORDS is installed):
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_ords_modules&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include ORDS modules of current user/schema.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-- Schema Objects:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_object_ddl&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include DDL of current user/schema and all its objects.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_object_type_like&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of like expressions to filter the objects - example: &amp;#39;%BODY,JAVA%&amp;#39; will be translated to: ... from user_objects where ... and (object_type like &amp;#39;%BODY&amp;#39; escape &amp;#39;\&amp;#39; or object_type like &amp;#39;JAVA%&amp;#39; escape &amp;#39;\&amp;#39;).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_object_type_not_like&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of not like expressions to filter the objects - example: &amp;#39;%BODY,JAVA%&amp;#39; will be translated to: ... from user_objects where ... and (object_type not like &amp;#39;%BODY&amp;#39; escape &amp;#39;\&amp;#39; and object_type not like &amp;#39;JAVA%&amp;#39; escape &amp;#39;\&amp;#39;).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_object_name_like&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of like expressions to filter the objects - example: &amp;#39;EMP%,DEPT%&amp;#39; will be translated to: ... from user_objects where ... and (object_name like &amp;#39;EMP%&amp;#39; escape &amp;#39;\&amp;#39; or object_name like &amp;#39;DEPT%&amp;#39; escape &amp;#39;\&amp;#39;).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_object_name_not_like&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of not like expressions to filter the objects - example: &amp;#39;EMP%,DEPT%&amp;#39; will be translated to: ... from user_objects where ... and (object_name not like &amp;#39;EMP%&amp;#39; escape &amp;#39;\&amp;#39; and object_name not like &amp;#39;DEPT%&amp;#39; escape &amp;#39;\&amp;#39;).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_object_view_remove_col_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, the outer column list, added by Oracle on views during compilation, is removed
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-- Table Data:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_data&lt;/span&gt;                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include CSV data of each table.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_as_of_minutes_ago&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;-- Read consistent data with the resulting timestamp(SCN).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_max_rows&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- Maximum number of rows per table.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_table_name_like&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of like expressions to filter the tables - example: &amp;#39;EMP%,DEPT%&amp;#39; will be translated to: where ... and (table_name like &amp;#39;EMP%&amp;#39; escape &amp;#39;\&amp;#39; or table_name like &amp;#39;DEPT%&amp;#39; escape &amp;#39;\&amp;#39;).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_table_name_not_like&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of not like expressions to filter the tables - example: &amp;#39;EMP%,DEPT%&amp;#39; will be translated to: where ... and (table_name not like &amp;#39;EMP%&amp;#39; escape &amp;#39;\&amp;#39; and table_name not like &amp;#39;DEPT%&amp;#39; escape &amp;#39;\&amp;#39;).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-- General Options:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_templates&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include templates for README.md, export and install scripts.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_runtime_log&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, generate file plex_runtime_log.md with detailed runtime infos.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_error_log&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, generate file plex_error_log.md with detailed error messages.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_base_path_backend&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;app_backend&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-- The base path in the project root for the Schema objects.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_base_path_frontend&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;app_frontend&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;-- The base path in the project root for the APEX app.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_base_path_web_services&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;app_web_services&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- The base path in the project root for the ORDS modules.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_base_path_data&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;app_data&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;-- The base path in the project root for the table data.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ATTENTION: Exporting all database objects can take some time. I have seen huge runtime differences from 6 seconds for a small app up to several hundred seconds for big apps and/or slow databases. This is normally not the problem of PLEX. If you are interested in runtime statistics of PLEX, you can inspect the delivered &lt;code&gt;plex_runtime_log.md&lt;/code&gt; in the root directory.&lt;br&gt;
Also, the possibility to export the data of your tables into CSV files does not mean that you should do this without thinking about it. The main reason for me to implement this feature was to track changes on catalog tables by regularly calling this export feature with a sensitive table filter and max rows parameter as catalog data is often relevant in business logic.&lt;/p&gt;
&lt;p&gt;If you have organized your app into multiple schemas as described in &lt;a href=&#34;https://www.salvis.com/blog/2018/07/18/the-pink-database-paradigm-pinkdb/&#34;&gt;The Pink Database Paradigm&lt;/a&gt;, you may need to export database objects from more then one schema. This is no problem for PLEX.BackApp as all parameters are optional - you can simply logon to your second or third schema and extract only the DDL for these schemas by omitting the &lt;code&gt;p_app_id&lt;/code&gt; parameter and setting &lt;code&gt;p_include_object_ddl&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Then unload the DDL files into a different directory - for example &lt;code&gt;app_backend_schemaName&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A last word: you should inspect all the exported files and scripts and check if this solution can work for you. If not, please let me know what is missing or what should be done in a different way &amp;hellip;&lt;/p&gt;
&lt;p&gt;Feedback is welcome - simply create a &lt;a href=&#34;https://github.com/ogobrecht/plex/issues/new&#34;&gt;new issue&lt;/a&gt; at the &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;GitHub project page&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;It is up to you how you organize the version control repository and how often you export your APEX app or object DDL. I would follow the files first approach and extract the object DDL only ones to have a starting point. The APEX application needs regular exports - if you like, you can automate this.&lt;/p&gt;
&lt;p&gt;Following the files first approach is sometimes not easy when you are using low code tools like &lt;a href=&#34;https://apex.oracle.com/quicksql/&#34;&gt;Quick SQL&lt;/a&gt; and &lt;a href=&#34;https://docs.oracle.com/database/apex-18.1/HTMDB/using-blueprints.htm&#34;&gt;Blueprint&lt;/a&gt; in APEX or code generators like &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;OraMUC&#39;s Table API Generator&lt;/a&gt;. There could be a need to regularly extract (maybe unknown) objects (not created by yourself) into version control to understand and document what you got from others (people or generators)&amp;hellip;&lt;/p&gt;
&lt;p&gt;If the directory structure provided by PLEX does not match your needs - no problem - you can align it. Simply loop over the returned file collection and do your necessary work - here an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tab_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- before PLEX v2 it was apex_t_export_files
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- relocate APEX app files from app_frontend to app_ui
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;app_frontend/%&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;app_frontend/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;app_ui/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --app_frontend/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --app_ui/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- correct file links in install script
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;scripts/install_frontend_generated_by_apex.sql&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;@../app_frontend/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;@../app_ui/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;-- more alignments...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For unloading the resulting file collection with SQL*Plus, please have a look in the &lt;code&gt;scripts/templates&lt;/code&gt; folder of your export - there are examples to do this. See also my previous post on &lt;a href=&#34;https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control&#34;&gt;how to handle the apex_t_export_files type returned by the APEX_EXPORT package with SQL*Plus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some people prefer to devide their DDL scripts into the two categories &lt;strong&gt;restartable&lt;/strong&gt; (like packages) and &lt;strong&gt;run once&lt;/strong&gt; (like tables). Others like to have their scripts in a way that they are always restartable and the DDL script itself takes care about doing the work only once when needed. The advantage of the second way is that your backend install/deployment script is always the same and it simply calls all objects DDL scripts.&lt;/p&gt;
&lt;p&gt;There is no right or wrong in doing it this or that way - each project/team has its specific requirements and history. The important thing is, that you start to use a version control system to be able to log your changes and document your code.&lt;/p&gt;
&lt;p&gt;By the way - PLEX provides script templates and object DDL that follows the second approach: You can always have the same install/deployment script and the DDL scripts are restartable - check it out by looking in one of your exported table DDL scripts.&lt;/p&gt;
&lt;p&gt;You are now at the point where PLEX can&#39;t do anything more for you. If you like to export your object DDL scripts more often, you have to find a way to be able to protect some of your scripts against overwriting. Imagine you had to add two columns to a table and you provided a restartable alter statement for this in the existing DDL script. If you export this table script the next time with PLEX (or with dbms_metadata.get_ddl, which is used in the background), your alter statements are gone and the new columns are simply listed in the create table statement. With this script you are not be able to deploy your changes to TEST or PROD.&lt;br&gt;
One solution is to copy the original table script and name it e.g. &lt;code&gt;EMPLOYEES.dev.sql&lt;/code&gt;. In this script you maintain the restartable alter statements. If you run PLEX.BackApp again you are overwrite save. The script &lt;code&gt;EMPLOYEES.sql&lt;/code&gt; reflects your current table definition and can still be executed - it does nothing because the table is already existing. The script &lt;code&gt;EMPLOYEES.dev.sql&lt;/code&gt; reflects your development history and need to be added to your custom install/deployment script.&lt;/p&gt;
&lt;p&gt;As you can see, PLEX can do only the basics for you. It is up to the developers how they manage their version control repository and how they do their deployments - there are thousends of ways to do it &amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;inspirations--further-reading&#34;&gt;Inspirations / Further Reading&lt;/h2&gt;
&lt;p&gt;Thanks are going to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;André Borngräber for his ability to think and discuss database topics in deep details&lt;/li&gt;
&lt;li&gt;Blain Carter for his thoughts on &lt;a href=&#34;https://learncodeshare.net/2018/07/16/ci-cd-for-database-developers-export-database-objects-into-version-control/&#34;&gt;CI/CD for Database Developers – Export Database Objects into Version Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Markus Dötsch for the first BackApp tests and cross-reading the first version of this post&lt;/li&gt;
&lt;li&gt;Martin D&#39;Souza for his time and the interesting discussion about code generation and version control at the APEX Connect 2018 in Düsseldorf, Germany and his blog post &lt;a href=&#34;https://www.talkapex.com/2018/07/exporting-apex-application-in-sqlcl-with-build-status-override/&#34;&gt;Exporting APEX Application in SQLcl with Build Status Override&lt;/a&gt; - PLEX.BackApp has now a parameter for this ;-)&lt;/li&gt;
&lt;li&gt;Philipp Salvisberg for his thoughts on &lt;a href=&#34;https://www.salvis.com/blog/2018/07/18/the-pink-database-paradigm-pinkdb/&#34;&gt;The Pink Database Paradigm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Samuel Nitsche for his thoughts on &lt;a href=&#34;https://cleandatabase.wordpress.com/2017/09/22/there-is-no-clean-database-development-without-version-control/&#34;&gt;There is no clean (database) development without Version Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tim Hall for his article about &lt;a href=&#34;https://oracle-base.com/articles/9i/generating-csv-files&#34;&gt;Generating CSV Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;thats-it&#34;&gt;Thats It&lt;/h2&gt;
&lt;p&gt;Hope PLEX.BackApp helps someone else.&lt;/p&gt;
&lt;p&gt;Happy coding, apexing, version controlling :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control/</id>
<link href="https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control/" rel="alternate" type="text/html" title="APEX_EXPORT and Version Control" />
<title type="html">APEX_EXPORT and Version Control</title>
<summary type="html">How to export the splitted APEX app definition with SQL*Plus</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<category term="sqlplus" label="SQL*Plus" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-07-25T00:00:00+01:00</published>
<updated>2018-07-25T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control/">
&lt;p&gt;&lt;em&gt;How to export the splitted APEX app definition with SQL*Plus&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Since years it has been possible to export an APEX app definition with the help of APEXExport, a Java utility delivered within the APEX install zip file. There is also the possibility to split the file into its components like pages, plugins and so on. There are some blog postings available how to do this - simply &lt;a href=&#34;https://www.google.de/search?q=oracle+apex+export+split&#34;&gt;ask Google&lt;/a&gt;. Also the Java based SQLcl has the capability to do the export of an APEX app directly.&lt;/p&gt;
&lt;p&gt;So why bother with a different way to export and split an APEX application?&lt;/p&gt;
&lt;p&gt;Since APEX 5.1.4 there is a new PL/SQL package APEX_EXPORT, which can be used to get a file collection of the application - one big file or the splitted ones. Unfortunately in the &lt;a href=&#34;https://docs.oracle.com/database/apex-18.1/AEAPI/GET_APPLICATION_Function.htm#AEAPI-GUID-A8E626D6-D7DE-4E59-8F90-3666A7A41A87&#34;&gt;API docs&lt;/a&gt; there is (as of this writing) only one example available how to export the single file within SQL*Plus - no example to handle the splitted files.&lt;/p&gt;
&lt;p&gt;But again, why discuss this if there are already options to do it?&lt;/p&gt;
&lt;p&gt;Because of the possibility to modifiy the APEX_EXPORT file collection before fetching it into the file system. Imagine you have a different repository structure and the delivered file structure of the splitted files does not match your needs or you want to have all install files in one scripts directory of your repo and therefore need a relocation of the app install script. Another use case is to enrich the file collection with additional data or objects. This was possible in the past also with some postprocessing outside the database, but now we are able to do this within our DB session and PL/SQL. I have already started an open source project to leaverage these possibilities - more about this in my next post&amp;hellip;&lt;/p&gt;
&lt;p&gt;So how to do it?&lt;/p&gt;
&lt;p&gt;First, I have to describe what the sctructure of each file in the collection is. Dead simple: a record type with two columns: &lt;code&gt;name&lt;/code&gt; of type VARCHAR2(255) which is in fact the file path and &lt;code&gt;contents&lt;/code&gt; of type CLOB.&lt;/p&gt;
&lt;p&gt;The desired file structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- app_backend
- app_frontend (for the splitted files without subfolder fxxx)
  - pages
  - shared_components
  - ...
- docs
- scripts
  - logs
    - temp_export_files.sql (our intermediate script file)
    - export_frontend_from_DEV_20180722_2045.log (one of our export logs)
    - ...
  - export_frontend.bat (our OS shell script to start the export)
  - export_frontend.sql (our export script)
  - install_frontend.sql (the generated install file from apex_export)
- tests
- README.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here comes the idea:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We create a script file to get the file collection, iterate over the collection and modify the content regarding our needs&lt;/li&gt;
&lt;li&gt;To unload the files with the spool command in SQL*Plus we need it accessible via SQL - therefore we put the files into a global temporary table&lt;/li&gt;
&lt;li&gt;We need to create an intermediate script file to unload the files (select the clob content)&lt;/li&gt;
&lt;li&gt;We also need to create host commands for the needed directories because the spool command does NOT create missing directories&lt;/li&gt;
&lt;li&gt;We spool our progress to a log file for later reference&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- file: export_frontend.sql
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verify&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feedback&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;heading&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trimout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trimspool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pagesize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linesize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100000000&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;longchunksize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32767&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;whenever&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sqlerror&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sqlcode&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rollback&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;-- https://blogs.oracle.com/opal/sqlplus-101-substitution-variables
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;logs/export_frontend_from_&amp;amp;2._&amp;amp;3._&amp;amp;4..log&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;amp;logfile.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Start&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontend&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;temporary&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exist&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;TEMP_EXPORT_FILES&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object_name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt; 
            &lt;span class=&#34;n&#34;&gt;MINUS&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object_name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IMMEDIATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;[
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;--------------------------------------------------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;CREATE GLOBAL TEMPORARY TABLE temp_export_files (
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  name       VARCHAR2(255),
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  contents   CLOB
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;) ON COMMIT DELETE ROWS
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;--------------------------------------------------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    ]&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Do&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontend&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;relocate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;temporary&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;pls_integer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;apex_t_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apex_export&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_application&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_application_id&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_split&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_date&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_ir_public_reports&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_ir_private_reports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_ir_notifications&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_translations&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_pkg_app_mapping&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_original_ids&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_no_subscriptions&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_comments&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_supporting_objects&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- relocate files to own project structure
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;/application/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;../app_frontend/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- correct prompts for relocation
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --application/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --app_frontend/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- special handling for install file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;/install.sql&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;install_frontend.sql&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;@application/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;@../app_frontend/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --install&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --install_frontend&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;FORALL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intermediate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unload&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serveroutput&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;logs/temp_export_files.sql&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;-- create host commands for the needed directories (spool does NOT create missing directories)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regexp_substr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;^((\w|\.)+\/)+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DISTINCT&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;-- This is for Windows to create a directory and suppress warning if it exist.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;-- Align the command to your operating system:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;host mkdir &amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#34; 2&amp;gt;NUL&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;set termout on&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;spool &amp;#34;&amp;amp;logfile.&amp;#34; append&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --create directory if not exist: &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;spool off&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;set termout off&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;-----&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;-- create the spool calls for unload the files
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;set termout on&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;spool &amp;#34;&amp;amp;logfile.&amp;#34; append&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;prompt --&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;spool off&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;set termout off&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;spool &amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;select contents from temp_export_files where name = &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;spool off&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;-----&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serveroutput&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;amp;logfile.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intermediate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serveroutput&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;amp;logfile.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;temporary&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;COMMIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Export&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DONE&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To run this script file on your operating system, you need a shell script to call it. Here is an example for Windows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;c1&#34;&gt;rem file: export_frontend.bat&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;setlocal&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;systemrole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;DEV
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;localhost:1521/orcl
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;HR
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;app_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;100
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;areyousure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;N

&lt;span class=&#34;c1&#34;&gt;rem align delimiters to your os locale&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/f&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;tokens=1-3 delims=. &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date /t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mydate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;c&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;b&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/f&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;tokens=1-2 delims=:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;time /t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mytime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;b&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;PROMPT&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt;.
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt;. 
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/p&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;areyousure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;Export &lt;span class=&#34;nv&#34;&gt;%schema%&lt;/span&gt; app &lt;span class=&#34;nv&#34;&gt;%app_id%&lt;/span&gt; from &lt;span class=&#34;nv&#34;&gt;%systemrole%&lt;/span&gt; (Y/N)?

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%areyousure%&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;neq&lt;/span&gt; y &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NLS_LANG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;AMERICAN_AMERICA.AL32UTF8
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/p&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;Please enter password for &lt;span class=&#34;nv&#34;&gt;%schema%&lt;/span&gt; on &lt;span class=&#34;nv&#34;&gt;%systemrole%&lt;/span&gt;:
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; exit &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sqlplus -S &lt;span class=&#34;nv&#34;&gt;%schema%&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;%password%&lt;/span&gt;@&lt;span class=&#34;nv&#34;&gt;%connection%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;export_frontend.sql &lt;span class=&#34;se&#34;&gt;^&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;%app_id%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;%systemrole%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;%mydate%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;%mytime%&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;pause&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are better ways then to ask for a password at runtime - but that is not the focus of this post. Also, you may not want to keep the command line open until the user presses a key in a fully automated setup. This is only to be able to see any errors before the shell window closes when opened via double click on the file.&lt;/p&gt;
&lt;p&gt;Hope this helps someone.&lt;/p&gt;
&lt;p&gt;Happy exporting :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-07-22-today-button-in-apex-datepicker/</id>
<link href="https://ogobrecht.github.io/posts/2018-07-22-today-button-in-apex-datepicker/" rel="alternate" type="text/html" title="Show Today Button in APEX Datepicker" />
<title type="html">Show Today Button in APEX Datepicker</title>
<summary type="html">A short note on how to customize the jQuery UI datepicker</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="jquery" label="jQuery" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-07-22T00:00:00+01:00</published>
<updated>2018-07-22T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-07-22-today-button-in-apex-datepicker/">
&lt;p&gt;&lt;em&gt;A short note on how to customize the jQuery UI datepicker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Maxime Tremblay has already described &lt;a href=&#34;http://max-tremblay.blogspot.com/2018/03/datepicker-customization.html&#34;&gt;here&lt;/a&gt; how to customize the datepicker.&lt;/p&gt;
&lt;p&gt;He had to deal with missing classes after changing options. I found this week a different way to customize the datepicker without loosing classes added by APEX: Simply by setting datepicker defaults on page load before any datepicker is initialized.&lt;/p&gt;
&lt;p&gt;In my case I wanted to enable the button panel which shows two buttons - one to go to the current month which is called &lt;code&gt;Today&lt;/code&gt; and a second one to close the datepicker which is called &lt;code&gt;Done&lt;/code&gt; I only wanted the today button, so I had to provide beside the JavaScript or dynamic action some CSS to hide the second one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;apex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;datepicker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setDefaults&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;showButtonPanel&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ui-datepicker-close&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;none&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;!important&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;jquery-datepicker-today-button.png&#34; alt=&#34;jQuery datepicker today button&#34;&gt;&lt;/p&gt;
&lt;p&gt;Just for reference: The jQuery UI datepicker widget can be tested &lt;a href=&#34;https://jqueryui.com/datepicker/#buttonbar&#34;&gt;here&lt;/a&gt;. Be careful to pick the correct version of the jQuery UI API docs for your specific APEX version.&lt;/p&gt;
&lt;p&gt;Happy coding :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-12-27-first-postcard-comment/</id>
<link href="https://ogobrecht.github.io/posts/2017-12-27-first-postcard-comment/" rel="alternate" type="text/html" title="Postcard Comment" />
<title type="html">Postcard Comment</title>
<summary type="html">Finally it happend - Oliver Gorwits has sent me the first postcard comment</summary>
<category term="postcard" label="Postcard" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-12-27T00:00:00+01:00</published>
<updated>2017-12-27T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-12-27-first-postcard-comment/">
&lt;p&gt;&lt;em&gt;Finally it happend - Oliver Gorwits has sent me the first postcard comment&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Maybe you already saw my footer and were wondering about the postcard comments. I love postcards and thought it would be nice to get postcards from people who enjoyed some of my posts or open source projects.&lt;/p&gt;
&lt;p&gt;After a while I thought no one would do this these days - it is easier to send an email than a postcard.&lt;/p&gt;
&lt;p&gt;But just before Christmas the first postcard arrived. &lt;a href=&#34;https://github.com/ollyg&#34;&gt;Oliver Gorwits&lt;/a&gt; from the United Kingdom is using my &lt;a href=&#34;/posts/2015-02-20-d3js-force-directed-network-chart&#34;&gt;D3 force-directed network chart&lt;/a&gt; in one of &lt;a href=&#34;http://netdisco.org/&#34;&gt;his own projects&lt;/a&gt; and has sent me a nice postcard. THANK YOU Oliver, this sort of feedback keeps me motivated :-)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2017-12-19-oliver-gorwits.jpg&#34; alt=&#34;Postcard Oliver Gorwits&#34;&gt;&lt;/p&gt;
&lt;p&gt;I asked him if I am allowed to publish a picture of his postcard - for Oliver it is ok. I can only show you the back side because of copyright reasons - if you are interested in how the front side looks like, do a short internet search for &lt;code&gt;&#39;Queen Elizabeth II of the United Kingdom&#39;, Andy Warhol, 1985&lt;/code&gt; or use this &lt;a href=&#34;https://goo.gl/images/Y6qutK&#34;&gt;Google image link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy new year to all :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-11-29-hydebar/</id>
<link href="https://ogobrecht.github.io/posts/2017-11-29-hydebar/" rel="alternate" type="text/html" title="HydeBar" />
<title type="html">HydeBar</title>
<summary type="html">A Jekyll Sidebar Template</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<category term="html" label="HTML" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-11-29T00:00:00+01:00</published>
<updated>2017-12-01T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-11-29-hydebar/">
&lt;p&gt;&lt;em&gt;A Jekyll Sidebar Template&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Earlier this year I wrote at the end of &lt;a href=&#34;/posts/2017-03-05-dokuwiki-plugin-revealjs&#34;&gt;this post&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;P.S.: In the meantime I switched complete to Markdown and &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;, a static site generator - but this is another story for another post &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As always - it took a bit longer then expected. In the meantime I was fiddling around with Jekyll and modifying the default theme Minima to my needs. Then I stumbled over the &lt;a href=&#34;https://github.com/nijikokun/minami&#34;&gt;JSDoc theme Minami&lt;/a&gt; and the &lt;a href=&#34;https://shopify.github.io/liquid/&#34;&gt;Liquid docs site&lt;/a&gt; - both with nice sidebars. I wanted to have such a nice sidebar for my dev blog and began to look deeper how it was implemented. To my surprise the sidebar from the JSDoc theme Minami was complete CSS driven - cool.&lt;/p&gt;
&lt;p&gt;It took me a while to full understand how it was working. With this knowledge and the design inspirations I was able to improve the Jekyll default theme to a sidebar template. As a bonus I integrated the HTML based slideshow library Reveal.js - you can write now your blog posts and slides with markdown.&lt;/p&gt;
&lt;p&gt;The nice thing about blogging with markdown is, that you don&#39;t need to switch your tools - you use the usual ones from the daily programming job. It goes even better when you use GitHub: You commit your changes and GitHub takes care about generating your blog content from your sources. And the result is a fast and secure static site.&lt;/p&gt;
&lt;p&gt;I had a accepted talk at the &lt;a href=&#34;https://2017.doag.org/en/home/&#34;&gt;DOAG Conference + Exhibition 2017&lt;/a&gt; in the stream &amp;ldquo;Strategy &amp;amp; Business Practices&amp;rdquo; about blogging for developers with Jekyll. Unfortunately short before I had an accident and broke my right upper arm :-(&lt;/p&gt;
&lt;p&gt;My colleague Markus Dötsch was taking over the presentation and I concentrated on delivering the free time project &amp;ldquo;Jekyll sidebar template&amp;rdquo;. This was the working title before I renamed it to &amp;ldquo;HydeBar&amp;rdquo; - a play with &amp;ldquo;Dr. Jekyll and Mr. Hyde&amp;rdquo; and the fact, that it is a sidebar template.&lt;/p&gt;
&lt;p&gt;Yesterday I released version 1.0.0. You can start blogging for free in five minutes with this &lt;a href=&#34;https://ogobrecht.github.io/hydebar/features#quickstart-online-in-5-minutes&#34;&gt;quick start guide&lt;/a&gt;. The &lt;a href=&#34;https://ogobrecht.github.io/hydebar&#34;&gt;online demo&lt;/a&gt; is serving as template, documentation and showcase. The mentioned slides from the &lt;a href=&#34;https://2017.doag.org/en/home/&#34;&gt;DOAG Conference&lt;/a&gt; are included in this demo (in German, sorry&amp;hellip;).&lt;/p&gt;
&lt;p&gt;Happy blogging :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-09-26-why-forms-with-single-input-are-submitted-by-the-enter-key/</id>
<link href="https://ogobrecht.github.io/posts/2017-09-26-why-forms-with-single-input-are-submitted-by-the-enter-key/" rel="alternate" type="text/html" title="Form Behaviour - Bug or Feature?" />
<title type="html">Form Behaviour - Bug or Feature?</title>
<summary type="html">Why forms with a single input field are submitted by the enter key</summary>
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="html" label="HTML" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-09-26T00:00:00+01:00</published>
<updated>2017-10-01T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-09-26-why-forms-with-single-input-are-submitted-by-the-enter-key/">
&lt;p&gt;&lt;em&gt;Why forms with a single input field are submitted by the enter key&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Today I stumbled over this strange behaviour of an APEX page: The page was always submitted when I pressed the enter key in a search field to force an AJAX refresh on a report.&lt;/p&gt;
&lt;p&gt;The item property to submit the page on pressing enter was switched off. I asked my collegue Markus, who had this error also some time ago (I could not remember the solution, although he told me about this issue). The reason was that the search field was the only input item on that page.&lt;/p&gt;
&lt;p&gt;After a short Google search I found the &amp;ldquo;root cause&amp;rdquo; for this &amp;ldquo;bug&amp;rdquo;, or should I say &amp;ldquo;feature&amp;rdquo;? This behaviour is described in the &lt;a href=&#34;http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2&#34;&gt;HTML 2.0 specification (section 8.2)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To workaround this you can simply create a second input item and hide it by setting the &amp;ldquo;HTML Form Element Attributes&amp;rdquo; to &lt;code&gt;style=&amp;quot;display:none;&amp;quot;&lt;/code&gt;. This was also posted by &lt;a href=&#34;http://deneskubicek.blogspot.de/2008/06/textfield-item-submiting-page.html&#34;&gt;Denes Kubicek&lt;/a&gt; back in 2008.&lt;/p&gt;
&lt;p&gt;I like the idea of one of the &lt;a href=&#34;https://stackoverflow.com/questions/1370021/why-does-forms-with-single-input-field-submit-upon-pressing-enter-key-in-input&#34;&gt;Stack Overflow comments&lt;/a&gt; to put anywhere into the form (in APEX in fact the whole page, e.g. the header or footer of a region) this HTML snippet and not to create an &amp;ldquo;useless&amp;rdquo; page item:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;StackOverflow1370021&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;display:none;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is worth to mention that I run the newest Chrome browser and this &amp;ldquo;feature&amp;rdquo; is still available&amp;hellip;&lt;/p&gt;
&lt;p&gt;Happy coding :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/</id>
<link href="https://ogobrecht.github.io/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/" rel="alternate" type="text/html" title="Oracle DB 11gXE Install File Swap Check Disabler" />
<title type="html">Oracle DB 11gXE Install File Swap Check Disabler</title>
<summary type="html">A Docker file to prepare the 11gXE install file for use in a container environment</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="docker" label="Docker" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-06-13T00:00:00+01:00</published>
<updated>2017-08-12T20:11:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/">
&lt;p&gt;&lt;em&gt;A Docker file to prepare the 11gXE install file for use in a container environment&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Many people have problems to install Oracle 11XE in a Docker environment because the install file checks the available swap space in the container. In a container environment this fails often - see &lt;a href=&#34;https://github.com/oracle/docker-images/issues/294#issuecomment-301465754&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://www.elastichosts.com/blog/oracle-database-installation-on-a-container-running-centos/&#34;&gt;here&lt;/a&gt;, because the swap space is optimized for the entire stack and not controlled from within the operating system of the container.&lt;/p&gt;
&lt;p&gt;We have to disable the swap space check in the installation file. I wrote another &lt;a href=&#34;/posts/2017-03-21-pitfalls-with-oracle-11g-xe-and-docker-on-mac-os&#34;&gt;blog post about this&lt;/a&gt;. The problem is here, that you need a Linux based system to do the necessary steps. Under Windows you have no chance and you have to do it by yourself because for license reasons everyone has to download his/her own copy of the install file from &lt;a href=&#34;http://www.oracle.com/technetwork/database/database-technologies/express-edition/downloads/index.html&#34;&gt;Oracle OTN&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I came up with the idea to do simply all the steps in a Docker container under the same Linux (oraclelinux:7-slim) which is later on needed with the &lt;a href=&#34;https://github.com/oracle/docker-images/blob/master/OracleDatabase/dockerfiles/11.2.0.2/Dockerfile.xe&#34;&gt;official Oracle Docker file&lt;/a&gt; for an XE instance. With this solution you are able to prepare the install file more or less automatically under every operating system, which can run Docker - also under Windows. For more Details see the &lt;a href=&#34;https://github.com/ogobrecht/docker-ora11xe-swap-check-disabler&#34;&gt;project on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy installing :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>


</feed>