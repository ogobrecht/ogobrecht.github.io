<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="html">Ottmar’s Notes</title>
<subtitle>Mainly about Oracle APEX and PL/SQL</subtitle>
<author>
  <name>Ottmar Gobrecht</name>
  <email>ottmar.gobrecht@gmail.com</email>
  <uri>https://ogobrecht.github.io/about/</uri>
</author>
<id>https://ogobrecht.github.io/index.xml</id>
<link href="https://ogobrecht.github.io/index.xml" rel="self" type="application/atom+xml" />
<link href="https://ogobrecht.github.io/" rel="alternate" type="text/html" hreflang="en" />
<generator uri="https://gohugo.io/" version="0.53">Hugo</generator>
<updated>2019-01-20T10:46:39+01:00</updated>


<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2019-01-10-ploc-plsql-code-to-doc-converter/</id>
<link href="https://ogobrecht.github.io/posts/2019-01-10-ploc-plsql-code-to-doc-converter/" rel="alternate" type="text/html" title="PLOC - Convert PL/SQL Code into Markdown Docs" />
<title type="html">PLOC - Convert PL/SQL Code into Markdown Docs</title>
<summary type="html">Another way to document PL/SQL business logic</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<category term="converter" label="Converter" scheme="https://ogobrecht.github.io/tags/" />
<category term="docs" label="Docs" scheme="https://ogobrecht.github.io/tags/" />
<category term="npm" label="npm" scheme="https://ogobrecht.github.io/tags/" />
<published>2019-01-10T00:00:00+01:00</published>
<updated>2019-01-11T20:02:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2019-01-10-ploc-plsql-code-to-doc-converter/">
&lt;p&gt;&lt;em&gt;Another way to document PL/SQL business logic&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some months ago I had to write a README file with Markdown syntax for a PL/SQL open source project. I changed function and procedure parameters of the package often during the implementation. Therefore, maintaining the documentation was no fun in the beginning. Maybe you know this from your own (payed) projects ;-)&lt;/p&gt;

&lt;p&gt;Normally in the business world I see minimalistic comments in the code and a dedicated documentation independent of the code. As you can imagine, the latter is sometimes - let&amp;rsquo;s say &amp;ldquo;out of date&amp;rdquo;, if it exists at all &amp;hellip;&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to discuss the reasons for this here - you all know several ones. And I also do not have a general solution for code documentation. But I have some ideas what is important for me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The base of a good PL/SQL code documentation is a good code structure

&lt;ul&gt;
&lt;li&gt;No single functions and procedures - packages with meaningful names are the way to go&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;As I have the source code under version control in local files on my computer I need a command line tool for the doc generation - there is no need for a database connection

&lt;ul&gt;
&lt;li&gt;The CLI should be able to process multiple files (packages)&lt;/li&gt;
&lt;li&gt;For my small open source project I have only one package and I want to define a document name different then the package name, so I need a CLI parameter for that&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Comments should be written directly after the package/function/procedure signature (in the package spec, optionally it should also work for triggers and types)

&lt;ul&gt;
&lt;li&gt;I want to use Markdown for the comments - this allows me to write also bigger text parts and code examples&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;I don&amp;rsquo;t want to describe all parameters in a JavaDoc manner

&lt;ul&gt;
&lt;li&gt;PL/SQL is strong typed, everything I need to know is visible in the signature of a function or procedure&lt;/li&gt;
&lt;li&gt;Replicating the parameters for documentation is error prone and does not follow the DRY principles&lt;/li&gt;
&lt;li&gt;With meaningful parameter names you need often no or only short comments - these can be placed directly after the parameters as single line comments&lt;/li&gt;
&lt;li&gt;Long descriptions can be written in the Markdown main comment&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The package/function/procedure signature should be automatically included in the output as a code block for reference&lt;/li&gt;
&lt;li&gt;Output should also be Markdown - this can be easily read by humans and further processed by machines

&lt;ul&gt;
&lt;li&gt;Only documented functions/procedures should be included in the output to keep the focus on the important stuff&lt;/li&gt;
&lt;li&gt;I want to have an automatic table of contents in each generated document&lt;/li&gt;
&lt;li&gt;With the help of &lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt; many formats like Word, RTF, PDF or HTML can be generated (for GitHub I only need Markdown)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are already several open source projects available for PL/SQL code documentation generation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pldoc.sourceforge.net/&#34;&gt;PLDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oradoclet.sourceforge.net/&#34;&gt;OraDoclet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://schemaspy.sourceforge.net/&#34;&gt;SchemaSpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.naturaldocs.org/&#34;&gt;Natural Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/OraOpenSource/plsql-md-doc&#34;&gt;PL/SQL to Markdown Documenter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only the last one is able to generate Markdown docs, but the input has to be in JavaDoc. All the others can produce HTML output and often some other formats like RTF, Word or PDF. Natural Docs has a Markdown like simple text syntax, but also no Markdown output. Some of the tools can automatically document a whole schema - that is not the focus of PLOC. Most comparable is the intention of PL/SQL to Markdown  Documenter.&lt;/p&gt;

&lt;p&gt;So I had to do it by myself. I called it PLOC (PLDoc was already used, so I skipped the D&amp;hellip;) and it is implemented in JavaScript as a npm package and currently used by me for the following two projects: &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;PL/SQL Export Utilities&lt;/a&gt; and &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;Oracle Table API Generator&lt;/a&gt;. It is very lightweight - the main code without the CLI has currently less characters as the Markdown source of this blog post. Maybe it is also useful for you. If not, have a look at the other mentioned projects.&lt;/p&gt;

&lt;p&gt;More infos about &lt;a href=&#34;https://github.com/ogobrecht/ploc&#34;&gt;PLOC&lt;/a&gt; itself can be found on the &lt;a href=&#34;https://github.com/ogobrecht/ploc&#34;&gt;project page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy coding and documenting :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-12-26-table-api-generator-v0.5.0-available/</id>
<link href="https://ogobrecht.github.io/posts/2018-12-26-table-api-generator-v0.5.0-available/" rel="alternate" type="text/html" title="Table API Generator v0.5.0 Available" />
<title type="html">Table API Generator v0.5.0 Available</title>
<summary type="html">Long changelog and took a long time</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<category term="oddgen" label="oddgen" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-12-26T00:00:00+01:00</published>
<updated>2018-12-26T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-12-26-table-api-generator-v0.5.0-available/">
&lt;p&gt;&lt;em&gt;Long changelog and took a long time&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Short before Christmas André and I released version 0.5.0 of our &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;PL/SQL table API generator&lt;/a&gt;. It took a long time to come to this point. One of the reasons behind was the fact that we had to rework some internals to support feature wishes from the community. Here the most important features of the new version:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for multicolumn primary keys&lt;/li&gt;
&lt;li&gt;Support for 12c long identifier names&lt;/li&gt;
&lt;li&gt;More control over the API features and name (10 new parameters)&lt;/li&gt;
&lt;li&gt;Insert methods:

&lt;ul&gt;
&lt;li&gt;Can have the dictionary column defaults&lt;/li&gt;
&lt;li&gt;Can return the whole row instead of the primary key&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;You can exclude columns (e.g. audit columns) for inserts and updates&lt;/li&gt;
&lt;li&gt;Improved template engine:

&lt;ul&gt;
&lt;li&gt;Generated code better readable because of formatted parameter lists&lt;/li&gt;
&lt;li&gt;Tables with many columns no longer breaking character limits&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Special methods for testing and dummy data generation&lt;/li&gt;
&lt;li&gt;Also see the &lt;a href=&#34;https://github.com/OraMUC/table-api-generator/blob/master/docs/changelog.md#050-2018-12-23&#34;&gt;full changelog on the project site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy new year and happy coding :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/</id>
<link href="https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/" rel="alternate" type="text/html" title="New Major Version of D3 Force Network Chart Available" />
<title type="html">New Major Version of D3 Force Network Chart Available</title>
<summary type="html">Better responsiveness by implementing a resize observer</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="chart" label="Chart" scheme="https://ogobrecht.github.io/tags/" />
<category term="svg" label="SVG" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-12-02T00:00:00+01:00</published>
<updated>2018-12-05T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/">
&lt;p&gt;&lt;em&gt;Better responsiveness by implementing a resize observer&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;div id=&#34;example&#34;&gt;&lt;/div&gt;&lt;!--the graph container--&gt;&lt;/p&gt;

&lt;p&gt;Since APEX version 5 was published with the Universal Theme, I was thinking that I needed something for better responsiveness of the graph. Although it was possible to configure the graph to use the DOM parent width, the responsiveness was not so good because of situations where the window size does not change (we use the window resize event to trigger the change of the width) but the available space for the graph changes. How can the graph react to this?&lt;/p&gt;

&lt;p&gt;The problem is that a network chart is not a simple image which can be resized according to the available space. The graph is an SVG with multiple layers to handle the zoom and pan, the lasso, a legend that needs to be in a fixed size&amp;hellip;   As you can see, there must be a procedural solution. And for this we need a trigger, which always fires when the (possible) size of the graphs parent DOM element changes.&lt;/p&gt;

&lt;p&gt;Fortunately, there is a &lt;a href=&#34;https://wicg.github.io/ResizeObserver/&#34;&gt;W3C draft for a resize observer&lt;/a&gt; and a &lt;a href=&#34;https://github.com/que-etc/resize-observer-polyfill&#34;&gt;polyfill&lt;/a&gt; available.&lt;/p&gt;

&lt;p&gt;To put the things together, I had to make breaking changes on the API (the reason for a new major version):&lt;/p&gt;

&lt;p&gt;I made the API zoom methods independent of the option &lt;code&gt;zoomMode&lt;/code&gt; and set the default to true for the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zoomToFitOnForceEnd&lt;/code&gt; (was false in the past)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zoomToFitOnResize&lt;/code&gt; (new option)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keepAspectRatioOnResize&lt;/code&gt; (new option)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When setting the option &lt;code&gt;useDomParentWidth&lt;/code&gt; to true together with the previous mentioned defaults, you can achieve a responsiveness like with images set to width 100%. Try it out by resizing your browser window.&lt;/p&gt;

&lt;p&gt;For the full change log see the project on &lt;a href=&#34;https://github.com/ogobrecht/d3-force-apex-plugin#changelog&#34;&gt;GitHub&lt;/a&gt; and for a demo the app on &lt;a href=&#34;https://apex.oracle.com/pls/apex/f?p=18290:1&#34;&gt;apex.oracle.com&lt;/a&gt; (which currently does not use the universal theme, new demo app is work in progress&amp;hellip;).&lt;/p&gt;

&lt;p&gt;Happy networking :-)&lt;br&gt;
Ottmar&lt;/p&gt;

&lt;p&gt;&lt;link  href=&#34;/assets/d3.js/d3-force-3.0.0.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;script src=&#34;/assets/d3.js/ResizeObserver-1.5.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-3.5.6.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-force-3.0.0.min.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;style&gt;.net_gobrechts_d3_force_tooltip { z-index: auto; }&lt;/style&gt;

&lt;script&gt;
window.onload = function() {
    window.example = netGobrechtsD3Force(&#39;example&#39;)
        .height(400)
        .width(800)
        .useDomParentWidth(true) //for responsive layout
        //.zoomMode(true)
        .lassoMode(true)
        .wrapLabels(true)
        .showBorder(false)
        .debug(true) //to enable the customization wizard
        .render(); //sample data is provided when called without data
        //see also https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html
    d3.select(&#39;#example&#39;).select(&#39;svg&#39;).classed(&#39;shadow&#39;, true);
}
&lt;/script&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/</id>
<link href="https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/" rel="alternate" type="text/html" title="PLEX - PL/SQL Export Utilities" />
<title type="html">PLEX - PL/SQL Export Utilities</title>
<summary type="html">Export Oracle APEX app, all schema objects and table data in one go</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-08-26T00:00:00+01:00</published>
<updated>2019-01-11T20:01:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-08-26-plex-plsql-export-utilities/">
&lt;p&gt;&lt;em&gt;Export Oracle APEX app, all schema objects and table data in one go&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;PLEX is a standalone PL/SQL package with export utilities. It was created to be able to quickstart version control for existing (APEX) apps and depends on APEX 5.1.4 or later for APEX_EXPORT and APEX_ZIP. It currently has two main functions called &lt;strong&gt;BackApp&lt;/strong&gt; and &lt;strong&gt;Queries_to_CSV&lt;/strong&gt;. Queries_to_CSV is used by BackApp as a helper function, but its functionality is also useful as a standalone. This post is all about BackApp, which has the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Export the app definition of an APEX app (splitted files and optional single SQL file)&lt;/li&gt;
&lt;li&gt;Export all object DDL from the current schema&lt;/li&gt;
&lt;li&gt;Export table data into CSV files&lt;/li&gt;
&lt;li&gt;Provide basic script templates for export/import of whole app for DEV, TEST and PROD&lt;/li&gt;
&lt;li&gt;Everything in a (hopefully) nice directory structure ready to use with version control&lt;/li&gt;
&lt;li&gt;Return value is a file collection of type apex_t_export_files for further processing

&lt;ul&gt;
&lt;li&gt;Each file in the collection is represented by a record with two columns&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; of type VARCHAR2(255), which is in fact the file path&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contents&lt;/code&gt; of type CLOB&lt;/li&gt;
&lt;li&gt;You can optionally zip the file collection with the helper function &lt;code&gt;to_zip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Also see the &lt;a href=&#34;https://docs.oracle.com/database/apex-18.1/AEAPI/APEX_EXPORT.htm&#34;&gt;APEX_EXPORT&lt;/a&gt; package and my previous post on &lt;a href=&#34;https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control&#34;&gt;how to handle the apex_t_export_files type returned by the APEX_EXPORT package with SQL*Plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ogobrecht/plex/releases/latest&#34;&gt;Download the latest code&lt;/a&gt; - depends on APEX 5.1.4 or later because we use APEX_EXPORT and APEX_ZIP&lt;/li&gt;
&lt;li&gt;Compile these two files in your desired schema - could also be a central tools schema, don&amp;rsquo;t forget &lt;code&gt;grant execute on plex to xxx&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PLEX.pks&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PLEX.pkb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Startup your favorite SQL Tool, connect to your app schema and fire up the following query:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;yourAppId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save the resulting BLOB file under a name with the extension &lt;code&gt;.zip&lt;/code&gt; and extract it to a local directory of your choice. You will find this directory structure and files:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;- app_backend (only, when p_include_object_ddl is set to true, see next example)
  - package_bodies
  - packages
  - tables
  - ref_constraints
  - ...
- app_frontend (for the apex app files without subfolder fxxx)
  - pages
  - shared_components
  - ...
- docs
- scripts
  - logs
  - templates
    - 1_export_app_from_DEV.bat
    - 2_install_app_into_TEST.bat
    - 3_install_app_into_PROD.bat
    - export_app_custom_code.sql
    - install_app_custom_code.sql
  - install_backend_generated_by_plex.sql
  - install_frontend_generated_by_apex.sql
- tests
- plex_README.md
- plex_backapp_log.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you like, you can fully configure your first export into the zip file. The &lt;code&gt;PLEX.BackApp&lt;/code&gt; method has boolean parameters, so you need to use an inline function in a pure SQL context. You can also use an anonymous PL/SQL block or you create a small SQL wrapper for the method like the inline function of the example. All parameters are optional and listed here with their default values:&lt;/p&gt;

&lt;p&gt;UPDATE 2018-09-24 regarding PLEX v1.1.0: &lt;code&gt;p_object_filter_regex&lt;/code&gt; is replaced by &lt;code&gt;p_object_name_like&lt;/code&gt; and &lt;code&gt;p_object_name_not_like&lt;/code&gt;; &lt;code&gt;p_data_table_filter_regex&lt;/code&gt; is replaced by &lt;code&gt;p_data_table_name_like&lt;/code&gt; and &lt;code&gt;p_data_table_name_not_like&lt;/code&gt;. All new parameters expect a comma separated list of (not) like expressions. Please see examples in parameter comments below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Inline function (needs Oracle 12c or higher)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;blob&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; 
  &lt;span class=&#34;k&#34;&gt;begin&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt;                    &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If null, we simply skip the APEX app export.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_date&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include export date and time in the result.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_public_reports&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include public reports that a user saved.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_private_reports&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include private reports that a user saved.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_notifications&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include report notifications.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_translations&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include application translation mappings and all text from the translation repository.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_pkg_app_mapping&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, export installed packaged applications with references to the packaged application definition. If FALSE, export them as normal applications.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_original_ids&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, export with the IDs as they were when the application was imported.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_subscriptions&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, components contain subscription references.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_comments&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include developer comments.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_supporting_objects&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If &amp;#39;Y&amp;#39;, export supporting objects. If &amp;#39;I&amp;#39;, automatically install on import. If &amp;#39;N&amp;#39;, do not export supporting objects. If null, the application&amp;#39;s include in export deployment value is used.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_include_single_file&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, the single sql install file is also included beside the splitted files.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_app_build_status_run_only&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, the build status of the app will be overwritten to RUN_ONLY.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-----
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_object_ddl&lt;/span&gt;        &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include DDL of current user/schema and all its objects.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_object_name_like&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of like expressions to filter the objects - example: `EMP%,DEPT%` will be translated to: `where ... and (object_name like &amp;#39;EMP%&amp;#39; or object_name like &amp;#39;DEPT%&amp;#39;)`.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_object_name_not_like&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of not like expressions to filter the objects - example: `EMP%,DEPT%` will be translated to: `where ... and (object_name not like &amp;#39;EMP%&amp;#39; and object_name not like &amp;#39;DEPT%&amp;#39;)`.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-----
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_data&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- If true, include CSV data of each table.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_as_of_minutes_ago&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;-- Read consistent data with the resulting timestamp(SCN).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_max_rows&lt;/span&gt;             &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- Maximum number of rows per table.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_table_name_like&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of like expressions to filter the tables - example: `EMP%,DEPT%` will be translated to: `where ... and (table_name like &amp;#39;EMP%&amp;#39; or table_name like &amp;#39;DEPT%&amp;#39;)`.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_data_table_name_not_like&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- A comma separated list of not like expressions to filter the tables - example: `EMP%,DEPT%` will be translated to: `where ... and (table_name not like &amp;#39;EMP%&amp;#39; and table_name not like &amp;#39;DEPT%&amp;#39;)`.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;-----
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_templates&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;-- If true, include templates for README.md, export and install scripts.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;p_include_runtime_log&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;-- If true, generate file plex_backapp_log.md with runtime statistics.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ATTENTION: Exporting all database objects can take some time. I have seen huge runtime differences from 6 seconds for a small app up to several hundred seconds for big apps and/or slow databases. This is normally not the problem of PLEX. If you are interested in runtime statistics of PLEX, you can inspect the delivered &lt;code&gt;plex_backapp_log.md&lt;/code&gt; in the directory root.&lt;br&gt;
Also, the possibility to export the data of your tables into CSV files does not mean that you should do this without thinking about it. The main reason for me to implement this feature was to track changes on catalog tables by regularly calling this export feature with a sensitive table filter and max rows parameter as catalog data is often relevant in business logic.&lt;/p&gt;

&lt;p&gt;If you have organized your app into multiple schemas as described in &lt;a href=&#34;https://www.salvis.com/blog/2018/07/18/the-pink-database-paradigm-pinkdb/&#34;&gt;The Pink Database Paradigm&lt;/a&gt;, you may need to export database objects from more then one schema. This is no problem for PLEX.BackApp as all parameters are optional - you can simply logon to your second or third schema and extract only the DDL for these schemas by omitting the &lt;code&gt;p_app_id&lt;/code&gt; parameter and setting &lt;code&gt;p_include_object_ddl&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Then unload the DDL files into a different directory - for example &lt;code&gt;app_backend_schemaName&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A last word: you should inspect all the exported files and scripts and check if this solution can work for you. If not, please let me know what is missing or what should be done in a different way &amp;hellip;&lt;/p&gt;

&lt;p&gt;Feedback is welcome - simply create a &lt;a href=&#34;https://github.com/ogobrecht/plex/issues/new&#34;&gt;new issue&lt;/a&gt; at the &lt;a href=&#34;https://github.com/ogobrecht/plex&#34;&gt;GitHub project page&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;It is up to you how you organize the version control repository and how often you export your APEX app or object DDL. I would follow the files first approach and extract the object DDL only ones to have a starting point. The APEX application needs regular exports - if you like, you can automate this.&lt;/p&gt;

&lt;p&gt;Following the files first approach is sometimes not easy when you are using low code tools like &lt;a href=&#34;https://apex.oracle.com/quicksql/&#34;&gt;Quick SQL&lt;/a&gt; and &lt;a href=&#34;https://docs.oracle.com/database/apex-18.1/HTMDB/using-blueprints.htm&#34;&gt;Blueprint&lt;/a&gt; in APEX or code generators like &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;OraMUC&amp;rsquo;s Table API Generator&lt;/a&gt;. There could be a need to regularly extract (maybe unknown) objects (not created by yourself) into version control to understand and document what you got from others (people or generators)&amp;hellip;&lt;/p&gt;

&lt;p&gt;If the directory structure provided by PLEX does not match your needs - no problem - you can align it. Simply loop over the returned file collection and do your necessary work - here comes an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apex_t_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- relocate APEX app files from app_frontend to app_ui
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;app_frontend/%&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;app_frontend/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;app_ui/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --app_frontend/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --app_ui/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- correct file links in install script
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;scripts/install_frontend_generated_by_apex.sql&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@../app_frontend/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@../app_ui/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;-- more alignments...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For unloading the resulting file collection with SQL*Plus, please have a look in the &lt;code&gt;scripts/templates&lt;/code&gt; folder of your export - there are examples to do this. See also my previous post on &lt;a href=&#34;https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control&#34;&gt;how to handle the apex_t_export_files type returned by the APEX_EXPORT package with SQL*Plus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some people prefer to devide their DDL scripts into the two categories &lt;strong&gt;restartable&lt;/strong&gt; (like packages) and &lt;strong&gt;run once&lt;/strong&gt; (like tables). Others like to have their scripts in a way that they are always restartable and the DDL script itself takes care about doing the work only once when needed. The advantage of the second way is that your backend install/deployment script is always the same and it simply calls all objects DDL scripts.&lt;/p&gt;

&lt;p&gt;There is no right or wrong in doing it this or that way - each project/team has its specific requirements and history. The important thing is, that you start to use a version control system to be able to log your changes and document your code.&lt;/p&gt;

&lt;p&gt;By the way - PLEX provides script templates and object DDL that follows the second approach: You can always have the same install/deployment script and the DDL scripts are restartable - check it out by looking in one of your exported table DDL scripts.&lt;/p&gt;

&lt;p&gt;You are now at the point where PLEX can&amp;rsquo;t do anything more for you. If you like to export your object DDL scripts more often, you have to find a way to be able to protect some of your scripts against overwriting. Imagine you had to add two columns to a table and you provided a restartable alter statement for this in the existing DDL script. If you export this table script the next time with PLEX (or with dbms_metadata.get_ddl, which is used in the background), your alter statements are gone and the new columns are simply listed in the create table statement. With this script you are not be able to deploy your changes to TEST or PROD.&lt;br&gt;
One solution is to copy the original table script and name it e.g. &lt;code&gt;EMPLOYEES.dev.sql&lt;/code&gt;. In this script you maintain the restartable alter statements. If you run PLEX.BackApp again you are overwrite save. The script &lt;code&gt;EMPLOYEES.sql&lt;/code&gt; reflects your current table definition and can still be executed - it does nothing because the table is already existing. The script &lt;code&gt;EMPLOYEES.dev.sql&lt;/code&gt; reflects your development history and need to be added to your custom install/deployment script.&lt;/p&gt;

&lt;p&gt;As you can see, PLEX can do only the basics for you. It is up to the developers how they manage their version control repository and how they do their deployments - there are thousends of ways to do it &amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;inspirations-further-reading&#34;&gt;Inspirations / Further Reading&lt;/h2&gt;

&lt;p&gt;Thanks are going to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;André Borngräber for his ability to think and discuss database topics in deep details&lt;/li&gt;
&lt;li&gt;Blain Carter for his thoughts on &lt;a href=&#34;https://learncodeshare.net/2018/07/16/ci-cd-for-database-developers-export-database-objects-into-version-control/&#34;&gt;CI/CD for Database Developers – Export Database Objects into Version Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Markus Dötsch for the first BackApp tests and cross-reading the first version of this post&lt;/li&gt;
&lt;li&gt;Martin D&amp;rsquo;Souza for his time and the interesting discussion about code generation and version control at the APEX Connect 2018 in Düsseldorf, Germany and his blog post &lt;a href=&#34;https://www.talkapex.com/2018/07/exporting-apex-application-in-sqlcl-with-build-status-override/&#34;&gt;Exporting APEX Application in SQLcl with Build Status Override&lt;/a&gt; - PLEX.BackApp has now a parameter for this ;-)&lt;/li&gt;
&lt;li&gt;Philipp Salvisberg for his thoughts on &lt;a href=&#34;https://www.salvis.com/blog/2018/07/18/the-pink-database-paradigm-pinkdb/&#34;&gt;The Pink Database Paradigm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Samuel Nitsche for his thoughts on &lt;a href=&#34;https://cleandatabase.wordpress.com/2017/09/22/there-is-no-clean-database-development-without-version-control/&#34;&gt;There is no clean (database) development without Version Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tim Hall for his article about &lt;a href=&#34;https://oracle-base.com/articles/9i/generating-csv-files&#34;&gt;Generating CSV Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;thats-it&#34;&gt;Thats It&lt;/h2&gt;

&lt;p&gt;Hope PLEX.BackApp helps someone else.&lt;/p&gt;

&lt;p&gt;Happy coding, apexing, version controlling :-)&lt;br&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control/</id>
<link href="https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control/" rel="alternate" type="text/html" title="APEX_EXPORT and Version Control" />
<title type="html">APEX_EXPORT and Version Control</title>
<summary type="html">How to export the splitted APEX app definition with SQL*Plus</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="version-control" label="Version Control" scheme="https://ogobrecht.github.io/tags/" />
<category term="sqlplus" label="SQL*Plus" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-07-25T00:00:00+01:00</published>
<updated>2018-07-25T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control/">
&lt;p&gt;&lt;em&gt;How to export the splitted APEX app definition with SQL*Plus&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Since years it has been possible to export an APEX app definition with the help of APEXExport, a Java utility delivered within the APEX install zip file. There is also the possibility to split the file into its components like pages, plugins and so on. There are some blog postings available how to do this - simply &lt;a href=&#34;https://www.google.de/search?q=oracle+apex+export+split&#34;&gt;ask Google&lt;/a&gt;. Also the Java based SQLcl has the capability to do the export of an APEX app directly.&lt;/p&gt;

&lt;p&gt;So why bother with a different way to export and split an APEX application?&lt;/p&gt;

&lt;p&gt;Since APEX 5.1.4 there is a new PL/SQL package APEX_EXPORT, which can be used to get a file collection of the application - one big file or the splitted ones. Unfortunately in the &lt;a href=&#34;https://docs.oracle.com/database/apex-18.1/AEAPI/GET_APPLICATION_Function.htm#AEAPI-GUID-A8E626D6-D7DE-4E59-8F90-3666A7A41A87&#34;&gt;API docs&lt;/a&gt; there is (as of this writing) only one example available how to export the single file within SQL*Plus - no example to handle the splitted files.&lt;/p&gt;

&lt;p&gt;But again, why discuss this if there are already options to do it?&lt;/p&gt;

&lt;p&gt;Because of the possibility to modifiy the APEX_EXPORT file collection before fetching it into the file system. Imagine you have a different repository structure and the delivered file structure of the splitted files does not match your needs or you want to have all install files in one scripts directory of your repo and therefore need a relocation of the app install script. Another use case is to enrich the file collection with additional data or objects. This was possible in the past also with some postprocessing outside the database, but now we are able to do this within our DB session and PL/SQL. I have already started an open source project to leaverage these possibilities - more about this in my next post&amp;hellip;&lt;/p&gt;

&lt;p&gt;So how to do it?&lt;/p&gt;

&lt;p&gt;First, I have to describe what the sctructure of each file in the collection is. Dead simple: a record type with two columns: &lt;code&gt;name&lt;/code&gt; of type VARCHAR2(255) which is in fact the file path and &lt;code&gt;contents&lt;/code&gt; of type CLOB.&lt;/p&gt;

&lt;p&gt;The desired file structure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- app_backend
- app_frontend (for the splitted files without subfolder fxxx)
  - pages
  - shared_components
  - ...
- docs
- scripts
  - logs
    - temp_export_files.sql (our intermediate script file)
    - export_frontend_from_DEV_20180722_2045.log (one of our export logs)
    - ...
  - export_frontend.bat (our OS shell script to start the export)
  - export_frontend.sql (our export script)
  - install_frontend.sql (the generated install file from apex_export)
- tests
- README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here comes the idea:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We create a script file to get the file collection, iterate over the collection and modify the content regarding our needs&lt;/li&gt;
&lt;li&gt;To unload the files with the spool command in SQL*Plus we need it accessible via SQL - therefore we put the files into a global temporary table&lt;/li&gt;
&lt;li&gt;We need to create an intermediate script file to unload the files (select the clob content)&lt;/li&gt;
&lt;li&gt;We also need to create host commands for the needed directories because the spool command does NOT create missing directories&lt;/li&gt;
&lt;li&gt;We spool our progress to a log file for later reference&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- file: export_frontend.sql
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verify&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feedback&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;heading&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trimout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trimspool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pagesize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linesize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100000000&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;longchunksize&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32767&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;whenever&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sqlerror&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sqlcode&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;rollback&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;-- https://blogs.oracle.com/opal/sqlplus-101-substitution-variables
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;logs/export_frontend_from_&amp;amp;2._&amp;amp;3._&amp;amp;4..log&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;amp;logfile.&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Start&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontend&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==================================================&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;temporary&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exist&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;TEMP_EXPORT_FILES&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object_name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt; 
            &lt;span class=&#34;n&#34;&gt;MINUS&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object_name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;EXECUTE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IMMEDIATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;--------------------------------------------------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;CREATE GLOBAL TEMPORARY TABLE temp_export_files (
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  name       VARCHAR2(255),
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  contents   CLOB
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;) ON COMMIT DELETE ROWS
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;--------------------------------------------------------------------------------
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    ]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Do&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frontend&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;relocate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;temporary&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;pls_integer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;apex_t_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apex_export&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_application&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_application_id&lt;/span&gt;          &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_split&lt;/span&gt;                   &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_date&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_ir_public_reports&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_ir_private_reports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_ir_notifications&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_translations&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_pkg_app_mapping&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_original_ids&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_no_subscriptions&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_comments&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_with_supporting_objects&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- relocate files to own project structure
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/application/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;../app_frontend/&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- correct prompts for relocation
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --application/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --app_frontend/&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;-- special handling for install file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_app_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/install.sql&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;install_frontend.sql&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;s1&#34;&gt;&amp;#39;@application/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;s1&#34;&gt;&amp;#39;@../app_frontend/&amp;#39;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --install&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --install_frontend&amp;#39;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;FORALL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;l_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contents&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Create&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intermediate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unload&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serveroutput&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;logs/temp_export_files.sql&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;-- create host commands for the needed directories (spool does NOT create missing directories)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regexp_substr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;^((\w|\.)+\/)+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DISTINCT&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;-- This is for Windows to create a directory and suppress warning if it exist.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;-- Align the command to your operating system:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;host mkdir &amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34; 2&amp;gt;NUL&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t1&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IS&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;set termout on&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spool &amp;#34;&amp;amp;logfile.&amp;#34; append&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --create directory if not exist: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spool off&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;set termout off&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-----&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;-- create the spool calls for unload the files
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;set termout on&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spool &amp;#34;&amp;amp;logfile.&amp;#34; append&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;prompt --&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spool off&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;set termout off&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spool &amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;select contents from temp_export_files where name = &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;spool off&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dbms_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;put_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-----&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LOOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serveroutput&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;amp;logfile.&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intermediate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp_export_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;termout&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serveroutput&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;off&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;spool&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;amp;logfile.&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;Delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;temporary&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;COMMIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==================================================&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Export&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DONE&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run this script file on your operating system, you need a shell script to call it. Here is an example for Windows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;c1&#34;&gt;rem file: export_frontend.bat&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;setlocal&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;systemrole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;DEV
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;localhost:1521/orcl
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;HR
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;app_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;100
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;areyousure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;N

&lt;span class=&#34;c1&#34;&gt;rem align delimiters to your os locale&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/f&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;tokens=1-3 delims=. &amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date /t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;mydate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;c&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;b&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/f&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;tokens=1-2 delims=:&amp;#34;&lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;time /t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;mytime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;a&lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;b&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;PROMPT&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt;.
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt;. 
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/p&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;areyousure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;Export &lt;span class=&#34;nv&#34;&gt;%schema%&lt;/span&gt; app &lt;span class=&#34;nv&#34;&gt;%app_id%&lt;/span&gt; from &lt;span class=&#34;nv&#34;&gt;%systemrole%&lt;/span&gt; (Y/N)?

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/i&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%areyousure%&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;neq&lt;/span&gt; y &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;END&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;NLS_LANG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;AMERICAN_AMERICA.AL32UTF8
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/p&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;Please enter password for &lt;span class=&#34;nv&#34;&gt;%schema%&lt;/span&gt; on &lt;span class=&#34;nv&#34;&gt;%systemrole%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; exit &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sqlplus -S &lt;span class=&#34;nv&#34;&gt;%schema%&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;%password%&lt;/span&gt;@&lt;span class=&#34;nv&#34;&gt;%connection%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt; &lt;/span&gt; @export_frontend.sql &lt;span class=&#34;se&#34;&gt;^
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt; &lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%app_id%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt; &lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%systemrole%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt; &lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%mydate%&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;^
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt; &lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%mytime%&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;END&lt;/span&gt;
pause&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are better ways then to ask for a password at runtime - but that is not the focus of this post. Also, you may not want to keep the command line open until the user presses a key in a fully automated setup. This is only to be able to see any errors before the shell window closes when opened via double click on the file.&lt;/p&gt;

&lt;p&gt;Hope this helps someone.&lt;/p&gt;

&lt;p&gt;Happy exporting :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2018-07-22-today-button-in-apex-datepicker/</id>
<link href="https://ogobrecht.github.io/posts/2018-07-22-today-button-in-apex-datepicker/" rel="alternate" type="text/html" title="Show Today Button in APEX Datepicker" />
<title type="html">Show Today Button in APEX Datepicker</title>
<summary type="html">A short note on how to customize the jQuery UI datepicker</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="jquery" label="jQuery" scheme="https://ogobrecht.github.io/tags/" />
<published>2018-07-22T00:00:00+01:00</published>
<updated>2018-07-22T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2018-07-22-today-button-in-apex-datepicker/">
&lt;p&gt;&lt;em&gt;A short note on how to customize the jQuery UI datepicker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Maxime Tremblay has already described &lt;a href=&#34;http://max-tremblay.blogspot.com/2018/03/datepicker-customization.html&#34;&gt;here&lt;/a&gt; how to customize the datepicker.&lt;/p&gt;

&lt;p&gt;He had to deal with missing classes after changing options. I found this week a different way to customize the datepicker without loosing classes added by APEX: Simply by setting datepicker defaults on page load before any datepicker is initialized.&lt;/p&gt;

&lt;p&gt;In my case I wanted to enable the button panel which shows two buttons - one to go to the current month which is called &lt;code&gt;Today&lt;/code&gt; and a second one to close the datepicker which is called &lt;code&gt;Done&lt;/code&gt; I only wanted the today button, so I had to provide beside the JavaScript or dynamic action some CSS to hide the second one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;apex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;datepicker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setDefaults&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;showButtonPanel&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;ui-datepicker-close&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;none&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;!important&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;jquery-datepicker-today-button.png&#34; alt=&#34;jQuery datepicker today button&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Just for reference: The jQuery UI datepicker widget can be tested &lt;a href=&#34;https://jqueryui.com/datepicker/#buttonbar&#34;&gt;here&lt;/a&gt;. Be careful to pick the correct version of the jQuery UI API docs for your specific APEX version.&lt;/p&gt;

&lt;p&gt;Happy coding :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-12-27-first-postcard-comment/</id>
<link href="https://ogobrecht.github.io/posts/2017-12-27-first-postcard-comment/" rel="alternate" type="text/html" title="Postcard Comment" />
<title type="html">Postcard Comment</title>
<summary type="html">Finally it happend - Oliver Gorwits has sent me the first postcard comment</summary>
<category term="postcard" label="Postcard" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-12-27T00:00:00+01:00</published>
<updated>2017-12-27T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-12-27-first-postcard-comment/">
&lt;p&gt;&lt;em&gt;Finally it happend - Oliver Gorwits has sent me the first postcard comment&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Maybe you already saw my footer and were wondering about the postcard comments. I love postcards and thought it would be nice to get postcards from people who enjoyed some of my posts or open source projects.&lt;/p&gt;

&lt;p&gt;After a while I thought no one would do this these days - it is easier to send an email than a postcard.&lt;/p&gt;

&lt;p&gt;But just before Christmas the first postcard arrived. &lt;a href=&#34;https://github.com/ollyg&#34;&gt;Oliver Gorwits&lt;/a&gt; from the United Kingdom is using my &lt;a href=&#34;/posts/2015-02-20-d3js-force-directed-network-chart&#34;&gt;D3 force-directed network chart&lt;/a&gt; in one of &lt;a href=&#34;http://netdisco.org/&#34;&gt;his own projects&lt;/a&gt; and has sent me a nice postcard. THANK YOU Oliver, this sort of feedback keeps me motivated :-)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;2017-12-19-oliver-gorwits.jpg&#34; alt=&#34;Postcard Oliver Gorwits&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I asked him if I am allowed to publish a picture of his postcard - for Oliver it is ok. I can only show you the back side because of copyright reasons - if you are interested in how the front side looks like, do a short internet search for &lt;code&gt;&#39;Queen Elizabeth II of the United Kingdom&#39;, Andy Warhol, 1985&lt;/code&gt; or use this &lt;a href=&#34;https://goo.gl/images/Y6qutK&#34;&gt;Google image link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy new year to all :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-11-29-hydebar/</id>
<link href="https://ogobrecht.github.io/posts/2017-11-29-hydebar/" rel="alternate" type="text/html" title="HydeBar" />
<title type="html">HydeBar</title>
<summary type="html">A Jekyll Sidebar Template</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<category term="html" label="HTML" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-11-29T00:00:00+01:00</published>
<updated>2017-12-01T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-11-29-hydebar/">
&lt;p&gt;&lt;em&gt;A Jekyll Sidebar Template&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Earlier this year I wrote at the end of &lt;a href=&#34;/posts/2017-03-05-dokuwiki-plugin-revealjs&#34;&gt;this post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P.S.: In the meantime I switched complete to Markdown and &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;, a static site generator - but this is another story for another post &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As always - it took a bit longer then expected. In the meantime I was fiddling around with Jekyll and modifying the default theme Minima to my needs. Then I stumbled over the &lt;a href=&#34;https://github.com/nijikokun/minami&#34;&gt;JSDoc theme Minami&lt;/a&gt; and the &lt;a href=&#34;https://shopify.github.io/liquid/&#34;&gt;Liquid docs site&lt;/a&gt; - both with nice sidebars. I wanted to have such a nice sidebar for my dev blog and began to look deeper how it was implemented. To my surprise the sidebar from the JSDoc theme Minami was complete CSS driven - cool.&lt;/p&gt;

&lt;p&gt;It took me a while to full understand how it was working. With this knowledge and the design inspirations I was able to improve the Jekyll default theme to a sidebar template. As a bonus I integrated the HTML based slideshow library Reveal.js - you can write now your blog posts and slides with markdown.&lt;/p&gt;

&lt;p&gt;The nice thing about blogging with markdown is, that you don&amp;rsquo;t need to switch your tools - you use the usual ones from the daily programming job. It goes even better when you use GitHub: You commit your changes and GitHub takes care about generating your blog content from your sources. And the result is a fast and secure static site.&lt;/p&gt;

&lt;p&gt;I had a accepted talk at the &lt;a href=&#34;https://2017.doag.org/en/home/&#34;&gt;DOAG Conference + Exhibition 2017&lt;/a&gt; in the stream &amp;ldquo;Strategy &amp;amp; Business Practices&amp;rdquo; about blogging for developers with Jekyll. Unfortunately short before I had an accident and broke my right upper arm :-(&lt;/p&gt;

&lt;p&gt;My colleague Markus Dötsch was taking over the presentation and I concentrated on delivering the free time project &amp;ldquo;Jekyll sidebar template&amp;rdquo;. This was the working title before I renamed it to &amp;ldquo;HydeBar&amp;rdquo; - a play with &amp;ldquo;Dr. Jekyll and Mr. Hyde&amp;rdquo; and the fact, that it is a sidebar template.&lt;/p&gt;

&lt;p&gt;Yesterday I released version 1.0.0. You can start blogging for free in five minutes with this &lt;a href=&#34;https://ogobrecht.github.io/hydebar/features#quickstart-online-in-5-minutes&#34;&gt;quick start guide&lt;/a&gt;. The &lt;a href=&#34;https://ogobrecht.github.io/hydebar&#34;&gt;online demo&lt;/a&gt; is serving as template, documentation and showcase. The mentioned slides from the &lt;a href=&#34;https://2017.doag.org/en/home/&#34;&gt;DOAG Conference&lt;/a&gt; are included in this demo (in German, sorry&amp;hellip;).&lt;/p&gt;

&lt;p&gt;Happy blogging :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-09-26-why-forms-with-single-input-are-submitted-by-the-enter-key/</id>
<link href="https://ogobrecht.github.io/posts/2017-09-26-why-forms-with-single-input-are-submitted-by-the-enter-key/" rel="alternate" type="text/html" title="Form Behaviour - Bug or Feature?" />
<title type="html">Form Behaviour - Bug or Feature?</title>
<summary type="html">Why forms with a single input field are submitted by the enter key</summary>
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="html" label="HTML" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-09-26T00:00:00+01:00</published>
<updated>2017-10-01T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-09-26-why-forms-with-single-input-are-submitted-by-the-enter-key/">
&lt;p&gt;&lt;em&gt;Why forms with a single input field are submitted by the enter key&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Today I stumbled over this strange behaviour of an APEX page: The page was always submitted when I pressed the enter key in a search field to force an AJAX refresh on a report.&lt;/p&gt;

&lt;p&gt;The item property to submit the page on pressing enter was switched off. I asked my collegue Markus, who had this error also some time ago (I could not remember the solution, although he told me about this issue). The reason was that the search field was the only input item on that page.&lt;/p&gt;

&lt;p&gt;After a short Google search I found the &amp;ldquo;root cause&amp;rdquo; for this &amp;ldquo;bug&amp;rdquo;, or should I say &amp;ldquo;feature&amp;rdquo;? This behaviour is described in the &lt;a href=&#34;http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2&#34;&gt;HTML 2.0 specification (section 8.2)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To workaround this you can simply create a second input item and hide it by setting the &amp;ldquo;HTML Form Element Attributes&amp;rdquo; to &lt;code&gt;style=&amp;quot;display:none;&amp;quot;&lt;/code&gt;. This was also posted by &lt;a href=&#34;http://deneskubicek.blogspot.de/2008/06/textfield-item-submiting-page.html&#34;&gt;Denes Kubicek&lt;/a&gt; back in 2008.&lt;/p&gt;

&lt;p&gt;I like the idea of one of the &lt;a href=&#34;https://stackoverflow.com/questions/1370021/why-does-forms-with-single-input-field-submit-upon-pressing-enter-key-in-input&#34;&gt;Stack Overflow comments&lt;/a&gt; to put anywhere into the form (in APEX in fact the whole page, e.g. the header or footer of a region) this HTML snippet and not to create an &amp;ldquo;useless&amp;rdquo; page item:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;StackOverflow1370021&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;display:none;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is worth to mention that I run the newest Chrome browser and this &amp;ldquo;feature&amp;rdquo; is still available&amp;hellip;&lt;/p&gt;

&lt;p&gt;Happy coding :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/</id>
<link href="https://ogobrecht.github.io/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/" rel="alternate" type="text/html" title="Oracle DB 11gXE Install File Swap Check Disabler" />
<title type="html">Oracle DB 11gXE Install File Swap Check Disabler</title>
<summary type="html">A Docker file to prepare the 11gXE install file for use in a container environment</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="docker" label="Docker" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-06-13T00:00:00+01:00</published>
<updated>2017-08-12T20:11:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/">
&lt;p&gt;&lt;em&gt;A Docker file to prepare the 11gXE install file for use in a container environment&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Many people have problems to install Oracle 11XE in a Docker environment because the install file checks the available swap space in the container. In a container environment this fails often - see &lt;a href=&#34;https://github.com/oracle/docker-images/issues/294#issuecomment-301465754&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://www.elastichosts.com/blog/oracle-database-installation-on-a-container-running-centos/&#34;&gt;here&lt;/a&gt;, because the swap space is optimized for the entire stack and not controlled from within the operating system of the container.&lt;/p&gt;

&lt;p&gt;We have to disable the swap space check in the installation file. I wrote another &lt;a href=&#34;/posts/2017-03-21-pitfalls-with-oracle-11g-xe-and-docker-on-mac-os&#34;&gt;blog post about this&lt;/a&gt;. The problem is here, that you need a Linux based system to do the necessary steps. Under Windows you have no chance and you have to do it by yourself because for license reasons everyone has to download his/her own copy of the install file from &lt;a href=&#34;http://www.oracle.com/technetwork/database/database-technologies/express-edition/downloads/index.html&#34;&gt;Oracle OTN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I came up with the idea to do simply all the steps in a Docker container under the same Linux (oraclelinux:7-slim) which is later on needed with the &lt;a href=&#34;https://github.com/oracle/docker-images/blob/master/OracleDatabase/dockerfiles/11.2.0.2/Dockerfile.xe&#34;&gt;official Oracle Docker file&lt;/a&gt; for an XE instance. With this solution you are able to prepare the install file more or less automatically under every operating system, which can run Docker - also under Windows. For more Details see the &lt;a href=&#34;https://github.com/ogobrecht/docker-ora11xe-swap-check-disabler&#34;&gt;project on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy installing :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-04-03-jquery-plugin-svg2img/</id>
<link href="https://ogobrecht.github.io/posts/2017-04-03-jquery-plugin-svg2img/" rel="alternate" type="text/html" title="jQuery Plugin svg2img" />
<title type="html">jQuery Plugin svg2img</title>
<summary type="html">Convert inline SVGs to standalone image files without loosing styles</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="jquery" label="jQuery" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="svg" label="SVG" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-04-03T00:00:00+01:00</published>
<updated>2018-12-02T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-04-03-jquery-plugin-svg2img/">
&lt;p&gt;&lt;em&gt;Convert inline SVGs to standalone image files without loosing styles&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SVG based charts and visualizations are often used these days. But what if you want to use your browser inline SVGs, generated with some sort of JavaScript and fancy styled with CSS, offline - maybe in a presentation, send by email or printed out large scaled?&lt;/p&gt;

&lt;p&gt;You can create a screenshot, of course. But does this look nice when it comes to scaling? You can try to copy the HTML code of the SVG and wrap it into a correct SVG container, but then you will loose in the most cases the stylings, as normally not all CSS definitions are directly attached to the SVG elements. You can also use a browser extension like &lt;a href=&#34;https://chrome.google.com/webstore/detail/export-svg-with-style/dkjdcaddoplepioppogpckelchefhddi&#34;&gt;this one for Google Chrome&lt;/a&gt;, but then you depend on the browser and the extension.&lt;/p&gt;

&lt;p&gt;There is now a declarative way with the help of a jQuery plugin, which is 100% client based:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#example-graph&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg2img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is one default option - you can redeclare it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg2img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;defaults&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// write debug information to console
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also set the debug option at runtime - try it out in your browser console directly here on the page:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#example-graph&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg2img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternative you can use the link under the network chart.&lt;/p&gt;

&lt;p&gt;The plugin checks if your selector is a SVG element. If this is not the case, it searches under each selector element for all SVGs and exports it. The name(s) of the file(s) are automatically derived from the element ID (or parent element ID) or set to &lt;code&gt;export&lt;/code&gt;. The current date and time is appended to the file name. For our example graph on this page the name will be something like &lt;code&gt;example-graph-20170403-154653.svg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can download all SVGs from one page by setting the selector to the document, body or svg - as you like it. There is no need for a &lt;code&gt;each()&lt;/code&gt; call, &lt;code&gt;svg2img&lt;/code&gt; works on the whole selection and is chainable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;svg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg2img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;css&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;border&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1px solid red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to use anchors to provide export links then it is recommended to prevent the default action like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;event.preventDefault(); $(&amp;#39;#example-graph&amp;#39;).svg2img();&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;SVG&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Otherwise Firefox and IE failing to save. One last thing: Safari has currently (as of this writing) problems with the underlaying &lt;code&gt;savAs()&lt;/code&gt; implementation and tries to open the images in a new tab with or without success. See also this &lt;a href=&#34;https://github.com/eligrey/FileSaver.js/issues/267&#34;&gt;issue on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;UPDATE 2017-04-14: After update to macOS Sierra 10.12.4 Safari 10.1 works also - but is as slow as before - collecting CSS styles runs on my MacBook 2800ms in Safari, 20ms in Google Chrome :-(&lt;br /&gt;
I stopped to support other image formats then SVG since the canvas export behind the scenes was not really working in too many browsers and the core feature was and is to convert inline SVGs to standalone SVG images.&lt;/p&gt;

&lt;p&gt;The project is hosted on &lt;a href=&#34;https://github.com/ogobrecht/jquery-plugin-svg2img&#34;&gt;GitHub&lt;/a&gt; and MIT licensed.&lt;/p&gt;

&lt;p&gt;Happy SVG exporting :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;example-graph&#34;&gt;&lt;/div&gt;&lt;!--the graph container--&gt;
Download
&lt;a href=&#34;&#34; onclick=&#34;event.preventDefault(); $(&#39;#example-graph&#39;).svg2img();&#34;&gt;SVG image&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;link  href=&#34;/assets/d3.js/d3-force-3.0.0.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;script src=&#34;/assets/d3.js/ResizeObserver-1.5.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-3.5.6.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-force-3.0.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-1.12.4.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/svg2img/svg2img.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
window.onload = function() {
    window.example = netGobrechtsD3Force(&amp;lsquo;example-graph&amp;rsquo;)
        .width(600)
        .height(400)
        .useDomParentWidth(true) //for responsive layout
        //.zoomMode(true)
        .lassoMode(true)
        .wrapLabels(true)
        .debug(true) //to enable the customization wizard
        .render(); //sample data is provided when called without data
        //see also &lt;a href=&#34;https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html&#34;&gt;https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html&lt;/a&gt;
}
&lt;/script&gt;&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-03-21-pitfalls-with-oracle-11g-xe-and-docker-on-mac-os/</id>
<link href="https://ogobrecht.github.io/posts/2017-03-21-pitfalls-with-oracle-11g-xe-and-docker-on-mac-os/" rel="alternate" type="text/html" title="Pitfalls with Oracle 11g XE and Docker on Mac OS" />
<title type="html">Pitfalls with Oracle 11g XE and Docker on Mac OS</title>
<summary type="html">The swap space problem and how to fix it</summary>
<category term="docker" label="Docker" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="mac" label="Mac" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-03-21T00:00:00+01:00</published>
<updated>2017-08-12T20:12:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-03-21-pitfalls-with-oracle-11g-xe-and-docker-on-mac-os/">
&lt;p&gt;&lt;em&gt;The swap space problem and how to fix it&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Recently I tried to install Oracle XE into a docker container on Mac OS Sierra using the &lt;a href=&#34;https://github.com/oracle/docker-images/blob/master/OracleDatabase/dockerfiles/11.2.0.2/Dockerfile.xe&#34;&gt;official docker file&lt;/a&gt; from Oracle. I had no luck, because the installation failed with this error message:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This system does not meet the minimum requirements for swap space. Based on the amount of physical memory available on the system, Oracle Database 11g Express Edition requires 2048 MB of swap space. This system has 0 MB of swap space. Configure more swap space on the system and retry the installation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The problem is, that you can&amp;rsquo;t do anything for this on a Mac - the system manages the swap files by itself and if you need for an example 64 GB you will get it. My new standard MacBook has 8 GB RAM and there is currently no reason for a swap file.&lt;/p&gt;

&lt;p&gt;So, what can we do? After a short search I found &lt;a href=&#34;https://www.elastichosts.com/blog/oracle-database-installation-on-a-container-running-centos/&#34;&gt;this blog post&lt;/a&gt;, which describes how to alter the pre-installation script of the RPM installation file with the help of the &lt;code&gt;repmrebuild&lt;/code&gt; command. Unfortunately this command is not available on Mac OS. I found only rpmbuild as part of the rpm installation with &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Luckily I found another way to modify a rpm package under Mac OS: There is a Ruby based tool to build packages for multiple platforms called &lt;a href=&#34;https://github.com/jordansissel/fpm&#34;&gt;fpm&lt;/a&gt;. So, lets start:&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t have &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; on your Mac, install this first:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/usr/bin/ruby -e &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install rpm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install tar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install gnu-tar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install fpm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gem install --no-ri --no-rdoc fpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unzip the downloaded Linux XE installation archive and go into the directory Disk1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;unzip oracle-xe-11.2.0-1.0.x86_64.rpm.zip &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Disk1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Write rpm scripts to text file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rpm &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --scripts &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -qp oracle-xe-11.2.0-1.0.x86_64.rpm &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  &amp;gt; scripts.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find this loop (from line 197 until line 212 as of this writing) and comment out or delete it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# check and disallow install, if swap space is less than Min( 2047, 2 * RAM)`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$swapspace&lt;/span&gt; -lt &lt;span class=&#34;nv&#34;&gt;$requiredswapspace&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$requiredswapspace&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2047&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;requiredswapspace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;This system does not meet the minimum requirements for swap space.  Based on
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;the amount of physical memory available on the system, Oracle Database 11g
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Express Edition requires &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$requiredswapspace&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; MB of swap space. This system has &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$swapspace&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; MB
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;of swap space.  Configure more swap space on the system and retry the
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;installation.&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find this line (starting on line 328 as of this writing) and delete the line and everything behind until the file end:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;postinstall scriptlet &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;using /bin/sh&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete the very first line containing this code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;preinstall scriptlet &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;using /bin/sh&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save the file and bring it back into the rpm with this command (will take some time):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;fpm &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -s rpm &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -t rpm &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -f --before-install scripts.txt &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  ./oracle-xe-11.2.0-1.0.x86_64.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go out of Disk1 and update the zip archive, because the Oracle provided build script needs it compressed (will take some time):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; .. &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;zip -r oracle-xe-11.2.0-1.0.x86_64.rpm.zip Disk1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you now do the Docker build you will face another error message:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;package oracle-xe-11.2.0-1.0.x86_64 is intended for a different operating system&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To fix this is fairly easy. Open the Dockerfile.xe, go to line 61 (as of this writing) and change this code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rpm -i Disk1/*.rpm &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;    &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to this one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rpm -i --ignoreos Disk1/*.rpm &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you now start the docker build you should be successful (will take some time):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ./buildDockerImage.sh -v &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;.2.0.2 -x -i&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last step is to run the container - on the first startup the database is created (will take some time, align the name to your needs):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --name orclapex51 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --shm-size&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1g &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -p &lt;span class=&#34;m&#34;&gt;1521&lt;/span&gt;:1521 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -p &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;:8080 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  oracle/database:11.2.0.2-xe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you plan to use APEX without any dedicated webserver (maybe because you are the only user and it is only a small dev instance) you should pimp the EPG a little bit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shared_servers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;both&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_shared_servers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;both&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dispatchers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;(PROTOCOL=TCP) (SERVICE=xeXDB) (DISPATCHERS=2)&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;both&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I use currently a Node.js based proxy server running directly on my Mac OS, because I need a webserver there anyway. The nice thing is, that the EPG don&amp;rsquo;t need to serve the images and I also don&amp;rsquo;t need to install the images into the EPG, when I upgrade to a newer APEX version. This saves me time and the EPG runs faster because of less number of requests. I will cover this topic in the next post.&lt;/p&gt;

&lt;p&gt;Happy installing :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-03-14-apex-plugin-dhtmlx-gantt/</id>
<link href="https://ogobrecht.github.io/posts/2017-03-14-apex-plugin-dhtmlx-gantt/" rel="alternate" type="text/html" title="APEX Plugin dhtmlxGantt" />
<title type="html">APEX Plugin dhtmlxGantt</title>
<summary type="html">HTML5 Gantt chart based on dhtmlx.com library</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="chart" label="Chart" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-03-14T00:00:00+01:00</published>
<updated>2017-08-12T20:08:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-03-14-apex-plugin-dhtmlx-gantt/">
&lt;p&gt;&lt;em&gt;HTML5 Gantt chart based on dhtmlx.com library&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ogobrecht/apex-plugin-dhtmlx-gantt/master/preview.png&#34; alt=&#34;Preview&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Some weeks ago I was asked, if I can create a plugin for the &lt;a href=&#34;https://dhtmlx.com/docs/products/dhtmlxGantt/&#34;&gt;Gantt chart library from dhtmlx.com&lt;/a&gt;. I had a look at the library and I thought that it should be possible.&lt;/p&gt;

&lt;p&gt;Because all my plugin developments are free time projects it took a while. Now the first public version is available. It is based on the GPLv2 version of the library, which has a reduced set of functionality. If you need advanced features like milestones, auto scheduling or calculating the critical path you can buy a Pro version of the library. I have no relation to the company behind dhtmlx.com, so please do not complain. As I told before I was asked for this plugin (which will be used in a Pro version there&amp;hellip;) and I like the visualization from DHTMLX.&lt;/p&gt;

&lt;p&gt;You can find the sources and more informations on &lt;a href=&#34;https://github.com/ogobrecht/apex-plugin-dhtmlx-gantt&#34;&gt;GitHub&lt;/a&gt; and a online demo on &lt;a href=&#34;https://apex.oracle.com/pls/apex/f?p=116612:1&#34;&gt;apex.oracle.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Maybe the plugin is helpful for someone else&amp;hellip;&lt;/p&gt;

&lt;p&gt;Happy project planning :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-03-05-dokuwiki-plugin-revealjs/</id>
<link href="https://ogobrecht.github.io/posts/2017-03-05-dokuwiki-plugin-revealjs/" rel="alternate" type="text/html" title="DokuWiki Plugin Reveal.js" />
<title type="html">DokuWiki Plugin Reveal.js</title>
<summary type="html">My contributions to an existing DokuWiki slideshow plugin</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="dokuwiki" label="DokuWiki" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="revealjs" label="Reveal.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="php" label="PHP" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-03-05T00:00:00+01:00</published>
<updated>2017-08-12T20:09:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-03-05-dokuwiki-plugin-revealjs/">
&lt;p&gt;&lt;em&gt;My contributions to an existing DokuWiki slideshow plugin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.dokuwiki.org&#34;&gt;DokuWiki&lt;/a&gt; is very good for creating documentation in a team. It is PHP based, needs less resources and is running without a database only on files on nearly every webserver. If your infrastructure is crashed for whatever reason and you have at least access to the files (on the webserver or in a backup) you can read your documentation with a simple text editor, because DokuWiki&amp;rsquo;s syntax is designed to be readable as possible without any rendering to HTML.&lt;/p&gt;

&lt;p&gt;For the APEX connect 2015 I started to use Markdown and &lt;a href=&#34;http://pandoc.org&#34;&gt;Pandoc&lt;/a&gt; to create HTML based slides. Pandoc supports different HTML slideshow tools - two of them are also available as plugins in DokuWiki: S5 and &lt;a href=&#34;http://lab.hakim.se/reveal-js&#34;&gt;Reveal.js&lt;/a&gt;. Reveal.js is the more modern library and I used this one together with Pandoc.&lt;/p&gt;

&lt;p&gt;For the DOAG conference last year I tried to use Reveals.js as a DokuWiki Plugin - I wanted to have at the same time a normal wiki page and the possibility to render this page as a slideshow. Unfortunately the existing plugin was only a base implementation and many features from Reveal.js were not available. I decided to contribute to the existing plugin. The list of my improvements is long - I had fun and learned a lot. The plugin can be found &lt;a href=&#34;https://www.dokuwiki.org/plugin:revealjs&#34;&gt;here on the DokuWiki homepage&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy presenting :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

&lt;p&gt;P.S.: In the meantime I switched complete to Markdown and &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;, a static site generator - but this is another story for another post &amp;hellip;&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2017-01-23-markdown-reporter/</id>
<link href="https://ogobrecht.github.io/posts/2017-01-23-markdown-reporter/" rel="alternate" type="text/html" title="Markdown Reporter" />
<title type="html">Markdown Reporter</title>
<summary type="html">Write your reports with Markdown, get HTML or LaTeX PDFs</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="nodejs" label="Node.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="pandoc" label="Pandoc" scheme="https://ogobrecht.github.io/tags/" />
<category term="python" label="Python" scheme="https://ogobrecht.github.io/tags/" />
<category term="matplotlib" label="Matplotlib" scheme="https://ogobrecht.github.io/tags/" />
<published>2017-01-23T00:00:00+01:00</published>
<updated>2017-08-12T20:10:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2017-01-23-markdown-reporter/">
&lt;p&gt;&lt;em&gt;Write your reports with Markdown, get HTML or LaTeX PDFs&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On the APEX connect 2016 in Berlin I talked about my APEX Markdown plugin and fine art printing with the help of Pandoc and LaTeX. When I was preparing my slides and documenting a SQL query in a Markdown code block I asked myself:&lt;/p&gt;

&lt;p&gt;What, if the database is taking this Markdown code block and runs the query inside to convert it into data?&lt;/p&gt;

&lt;p&gt;And what, if I take this Markdown text with the data in the code blocks and post it to a small webservice which converts the data blocks into charts and the whole document into HTML or a LaTeX based PDF?&lt;/p&gt;

&lt;p&gt;The idea to Markdown Reporter was born.&lt;/p&gt;

&lt;p&gt;I talked about this project on the DOAG conference in Nuremberg last November. Here are the &lt;a href=&#34;/posts/2016-11-17-reporting-mal-anders-markdown-sei-dank&#34;&gt;slides&lt;/a&gt; (in german, sorry).&lt;/p&gt;

&lt;p&gt;If you want to know how it looks like - here is a &lt;a href=&#34;/slides/2016-11-17-reporting-mal-anders-markdown-sei-dank/assets/demo-report.pdf&#34;&gt;PDF demo report&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The implementation has three main components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An Oracle PL/SQL Package for preprocessing your data and communicating with the printserver&lt;/li&gt;
&lt;li&gt;A Node.js based printserver, which is in fact a web based remote shell for the format converter &lt;a href=&#34;http://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A Pandoc filter written in Python, which intercepts the converting process and generates the charts based on the preprocessed CSV data with the help of Pythons &lt;a href=&#34;http://matplotlib.org/&#34;&gt;matplotlib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The HTML and PDF output is complete vector based and all used tools are open source.&lt;/p&gt;

&lt;p&gt;You can find the sources and more informations on &lt;a href=&#34;https://github.com/ogobrecht/markdown-reporter&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy reporting :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2016-11-17-reporting-mal-anders-markdown-sei-dank/</id>
<link href="https://ogobrecht.github.io/posts/2016-11-17-reporting-mal-anders-markdown-sei-dank/" rel="alternate" type="text/html" title="Reporting mal anders, Markdown sei Dank" />
<title type="html">Reporting mal anders, Markdown sei Dank</title>
<summary type="html">DOAG Konferenz 2016, Nürnberg</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="doag" label="DOAG" scheme="https://ogobrecht.github.io/tags/" />
<category term="slides" label="Slides" scheme="https://ogobrecht.github.io/tags/" />
<category term="markdown" label="Markdown" scheme="https://ogobrecht.github.io/tags/" />
<category term="chart" label="Chart" scheme="https://ogobrecht.github.io/tags/" />
<published>2016-11-17T00:00:00+01:00</published>
<updated>2017-08-12T20:06:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2016-11-17-reporting-mal-anders-markdown-sei-dank/">
&lt;p&gt;&lt;em&gt;DOAG Konferenz 2016, Nürnberg&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Folien zu meinem Vortrag:&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;/slides/2016-11-17-reporting-mal-anders-markdown-sei-dank/&#34; target=&#34;_blank&#34;&gt;Open HTML presentation in a new window/tab&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&#34;item-meta&#34;&gt;
  &lt;p&gt;You need a modern browser with activated JavaScript. Navigation tips:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;Space&lt;/code&gt; = Next slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Space&lt;/code&gt; = Previous slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Esc&lt;/code&gt; = Overview all slides&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;?&lt;/code&gt; = Overview all keyboard shortcuts&lt;/li&gt;
    &lt;li&gt;All links are opened in a new window/tab&lt;/li&gt;
    
    
  &lt;/ul&gt;
&lt;/blockquote&gt;


&lt;p&gt;Kurzdarstellung:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Markdown hat sich in den letzten Jahren als vereinfachte Auszeichnungssprache zur HTML-Erstellung durchgesetzt. Es genügt ein einfacher Texteditor und wenige, allgemein gebräuchliche Konventionen, um z.B. eine Aufzählung in reinem Text auszuzeichnen, die jeder als solche erkennt. Dieser Vortrag erklärt anhand einer Beispiel-Implementierung, wie wir mit Hilfe von Markdown, dem Formatkonverter Pandoc, dem Textsatzsystem LaTeX, der Python Matplotlib und Node.js eine auf Open Source Tools basierende Reporting-Engine erstellen können, die per PL/SQL ansprechbar ist. Das Ergebnis sind hochwertige PDF-Dokumente in Buchdruckqualität, in denen Charts rein vektorbasiert eingebettet sind. Auch bei einer Konvertierung in HTML sind alle Charts vektorbasiert direkt in einer einzelnen HTML-Datei enthalten, wodurch die Weiterverarbeitung erleichtert wird. Was diese Reporting-Engine von anderen unterscheidet ist die Herangehensweise: Es werden keine pixelgenauen Templates erstellt, stattdessen überläßt man es LaTeX, wie der Text gesetzt und die Tabellen und Charts eingebettet werden. Und das ganze eben, ohne sich mit LaTeX-Quellcode auseinandersetzen zu müssen. Zur Auszeichnung wird Markdown verwendet und zur Definition von Tabellen und Charts verwenden wir trickreich die in Markdown vorhandene Möglichkeit, Codeblöcke zu hinterlegen, in die wir einfach unsere SQL-Abfragen eintragen.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Weitere Infos zu dem im Vortrag vorgestellten Projekt &lt;a href=&#34;https://github.com/ogobrecht/markdown-reporter&#34;&gt;Markdown Reporter auf GitHub&lt;/a&gt;.&lt;/p&gt;

</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2016-06-17-apex-meetup-frankfurt/</id>
<link href="https://ogobrecht.github.io/posts/2016-06-17-apex-meetup-frankfurt/" rel="alternate" type="text/html" title="APEX Meetup 17.06.2016, Frankfurt" />
<title type="html">APEX Meetup 17.06.2016, Frankfurt</title>
<summary type="html">Markdown und Table API Generator</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="slides" label="Slides" scheme="https://ogobrecht.github.io/tags/" />
<category term="markdown" label="Markdown" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<published>2016-06-17T00:00:00+01:00</published>
<updated>2017-08-12T20:04:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2016-06-17-apex-meetup-frankfurt/">
&lt;p&gt;&lt;em&gt;Markdown und Table API Generator&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Heute bin ich früh morgens mit dem Zug nach Frankfurt gefahren. Ich bin von Moritz Klein und Sabine Heimsath eingeladen worden - das Motto: &amp;ldquo;Ein ganz generisches APEX Meetup&amp;rdquo;. Passend zum Motto hatte ich einen Vortrag zum &lt;a href=&#34;/posts/2016-06-10-table-api-generator/&#34;&gt;Table API Generator&lt;/a&gt; dabei, meinem neuesten Open Source Projekt zusammen mit André Borngräber. Daneben habe ich noch einmal meinen APEX connect Vortrag zum Thema &lt;a href=&#34;/posts/2016-04-26-apex-fine-art-printing-markdown-ueberall/&#34;&gt;APEX Fine Art Printing, Markdown Überall&lt;/a&gt; gezeigt.&lt;/p&gt;

&lt;p&gt;Moritz hat mir dankenswerterweise für tagsüber Arbeitsasyl in seinem Office gewährt. Mittags waren wir lecker essen zusammen mit Sabine. Die zwei haben dann das Meetup für abends noch einmal besprochen.&lt;/p&gt;

&lt;p&gt;Der Tag war sehr kurzweilig und inspirierend - neben meiner Arbeit konnte ich mich noch mit Moritz austauschen und später beim Meetup war der weitere Vortrag zum Thema Datenmodellierung und Codegenerierung mit Power Designer von Matthias Griese auch sehr interessant.&lt;/p&gt;

&lt;p&gt;Leider musste ich dann aber direkt nach dem Meetup wieder zurück zum Bahnhof, um den letzten Zug nach München zu erwischen. Den wohl offensichtlich feuchtfröhlichen Abschluß des Abends konnte ich nur noch über Twitter mitverfolgen.&lt;/p&gt;

&lt;p&gt;Es war ein schöner Tag - Danke Sabine, Moritz und alle Frankfurter APEX Enthusiasten :-)&lt;/p&gt;

&lt;p&gt;Der Vollständigkeit hier noch die Folien - ist zwar nicht viel drauf, aber für die, die dabei waren wird es hoffentlich ok sein:&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;/slides/2016-06-17-rethink-table-apis-fast-development-secure-access/&#34; target=&#34;_blank&#34;&gt;Open HTML presentation in a new window/tab&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&#34;item-meta&#34;&gt;
  &lt;p&gt;You need a modern browser with activated JavaScript. Navigation tips:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;Space&lt;/code&gt; = Next slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Space&lt;/code&gt; = Previous slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Esc&lt;/code&gt; = Overview all slides&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;?&lt;/code&gt; = Overview all keyboard shortcuts&lt;/li&gt;
    &lt;li&gt;All links are opened in a new window/tab&lt;/li&gt;
    
    
  &lt;/ul&gt;
&lt;/blockquote&gt;


&lt;p&gt;Weitere Infos zu dem im Vortrag vorgestellten Projekt Table API Generator in diesem &lt;a href=&#34;/posts/2016-06-10-table-api-generator/&#34;&gt;Blog Eintrag&lt;/a&gt; und auf &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2016-06-10-table-api-generator/</id>
<link href="https://ogobrecht.github.io/posts/2016-06-10-table-api-generator/" rel="alternate" type="text/html" title="Table API Generator" />
<title type="html">Table API Generator</title>
<summary type="html">An Oracle PL/SQL package with SQL Developer integration</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="plsql" label="PL/SQL" scheme="https://ogobrecht.github.io/tags/" />
<category term="generator" label="Generator" scheme="https://ogobrecht.github.io/tags/" />
<category term="oddgen" label="oddgen" scheme="https://ogobrecht.github.io/tags/" />
<published>2016-06-10T00:00:00+01:00</published>
<updated>2017-08-12T20:07:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2016-06-10-table-api-generator/">
&lt;p&gt;&lt;em&gt;An Oracle PL/SQL package with SQL Developer integration&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Last year I needed for a project a simple table API, which is able to generate a generic change log - something like &amp;ldquo;show me for table xyz which column was changed when and what was the old value and what is the new one&amp;rdquo;. Only changed values should be stored and all tables should log into the same generic logging table. Sounds like we need a generator for this.&lt;/p&gt;

&lt;p&gt;Unfortunately there was no time in the project to create such a generator from the ground. Luckily André, a colleague of me, had started to implement such an API generator in his free time and I had only to implement the generic change log functionality - also in my free time. Our API generator open source project was born :-)&lt;/p&gt;

&lt;p&gt;Later on I needed a function to get the id from an record by the unique columns - next feature for the API generator: generate a (overloaded) function for each unique constraint on a table. Now it is a simple function call to get the id:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;your_var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;your_table_name_api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_pk_by_unique_cols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_column_name_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;xyz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p_column_name_2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;...);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The API is also handling the case, when no data is found and everything without the need to look in the dictionary for the unique columns of that table or to write boilerplate code and possibly forget one column.&lt;/p&gt;

&lt;p&gt;The next thing for APEX was &amp;ldquo;For tabular forms you can&amp;rsquo;t use APIs&amp;rdquo;. We came up with the idea to generate a view for each table with an instead of trigger for inserts, updates and deletions. The trigger is simply calling the API. Now you can use APEX own &amp;ldquo;automatic row processing&amp;rdquo; and the generic logging together.&lt;/p&gt;

&lt;p&gt;In my holiday this spring I stumbled over a tweet from Phillip Salvisberg about his &lt;a href=&#34;https://www.oddgen.org&#34;&gt;oddgen project&lt;/a&gt;, a SQL Developer extension to invoke dictionary-driven code generators. I was thrilled, we can have a SQL Developer integration by writing a small PL/SQL wrapper for oddgen. I finished the integration in my holiday, I could not wait.&lt;/p&gt;

&lt;p&gt;Over the time we found out, that the generation of the thin API wrappers for our tables saves us time and makes our code more stable and readable because of the saved boilerplate code.&lt;br /&gt;
Business logic packages becomes invalid after table changes and API regeneration. This is good, because you can see, which API calls are now invalid. If you have simple insert or update statements you might oversee some places, where the statement is still valid for example with an added table column, but in fact does the wrong insert or update.&lt;/p&gt;

&lt;p&gt;And the last thing, what is now possible: Security - separate the data from the user interface. Simply grant execute rights on the API and business logic packages to the UI schema and disable the deletion of rows in your API packages when you don&amp;rsquo;t need it. No user will be able to drop or truncate your tables, because there are no tables in the UI schema.&lt;/p&gt;

&lt;p&gt;The generated API packages are really thin - nothing special at all. Nevertheless they are powerful time savers.&lt;/p&gt;

&lt;p&gt;You can find the sources and more informations on &lt;a href=&#34;https://github.com/OraMUC/table-api-generator&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy coding :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2016-04-26-apex-fine-art-printing-markdown-ueberall/</id>
<link href="https://ogobrecht.github.io/posts/2016-04-26-apex-fine-art-printing-markdown-ueberall/" rel="alternate" type="text/html" title="APEX Fine Art Printing, Markdown Überall" />
<title type="html">APEX Fine Art Printing, Markdown Überall</title>
<summary type="html">DOAG APEX connect 2016, Berlin</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="doag" label="DOAG" scheme="https://ogobrecht.github.io/tags/" />
<category term="slides" label="Slides" scheme="https://ogobrecht.github.io/tags/" />
<category term="markdown" label="Markdown" scheme="https://ogobrecht.github.io/tags/" />
<published>2016-04-26T00:00:00+01:00</published>
<updated>2017-08-12T20:03:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2016-04-26-apex-fine-art-printing-markdown-ueberall/">
&lt;p&gt;&lt;em&gt;DOAG APEX connect 2016, Berlin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Folien zu meinem Vortrag:&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;/slides/2016-04-26-apex-fine-art-printing-markdown-ueberall/&#34; target=&#34;_blank&#34;&gt;Open HTML presentation in a new window/tab&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&#34;item-meta&#34;&gt;
  &lt;p&gt;You need a modern browser with activated JavaScript. Navigation tips:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;Space&lt;/code&gt; = Next slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Space&lt;/code&gt; = Previous slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Esc&lt;/code&gt; = Overview all slides&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;?&lt;/code&gt; = Overview all keyboard shortcuts&lt;/li&gt;
    &lt;li&gt;All links are opened in a new window/tab&lt;/li&gt;
    
    
  &lt;/ul&gt;
&lt;/blockquote&gt;


</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2016-01-01-markdown-for-oracle-apex/</id>
<link href="https://ogobrecht.github.io/posts/2016-01-01-markdown-for-oracle-apex/" rel="alternate" type="text/html" title="Markdown for Oracle APEX" />
<title type="html">Markdown for Oracle APEX</title>
<summary type="html">A dynamic action type plugin</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="markdown" label="Markdown" scheme="https://ogobrecht.github.io/tags/" />
<published>2016-01-01T00:00:00+01:00</published>
<updated>2017-08-12T20:05:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2016-01-01-markdown-for-oracle-apex/">
&lt;p&gt;&lt;em&gt;A dynamic action type plugin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some years ago I implemented a task board in APEX. For commenting I used the &lt;a href=&#34;https://stackexchange.github.io&#34;&gt;stackexchange&lt;/a&gt; &lt;a href=&#34;https://github.com/balpha/pagedown&#34;&gt;markdown implementation&lt;/a&gt; (&lt;a href=&#34;https://code.google.com/archive/p/pagedown/&#34;&gt;old Google code repo&lt;/a&gt;), which is a pure JavaScript converter and editor and based on &lt;a href=&#34;https://github.com/showdownjs/showdown&#34;&gt;showdown.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some months ago I had to implement an application, which should be able to have multiple editors on one page and the editors should be able to support a read only mode. Furthermore there were hard limits for the amount of text for each editor. Both things which are not so easy to implement with the rich text editor in APEX - no really read only mode and the amount of text is also a problem because of the HTML overhead.&lt;/p&gt;

&lt;p&gt;It was time to rethink my old implementation and to build a plugin, which creates for each text area with the class markdown an own editor. All other non input elements with a class markdown should simply rendered to HTML, which is then also the solution for the read only mode of the editors. APEX standard text area items supports a read only mode and the class markdown from the text area is also rendered by the APEX engine for this mode :-)&lt;/p&gt;

&lt;p&gt;The nice side effect is, that I don&amp;rsquo;t had to reinvent the wheel by creating an own item type - I could reuse the standard APEX text area item and things like the character counter working out of the box.&lt;/p&gt;

&lt;p&gt;You can find the sources and more informations on &lt;a href=&#34;https://github.com/ogobrecht/markdown-apex-plugin&#34;&gt;GitHub&lt;/a&gt; and a demo app on &lt;a href=&#34;https://apex.oracle.com/pls/apex/f?p=66154&#34;&gt;apex.oracle.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy coding :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2015-12-12-why-a-subdomain-for-an-apex-development-system-is-a-bad-idea/</id>
<link href="https://ogobrecht.github.io/posts/2015-12-12-why-a-subdomain-for-an-apex-development-system-is-a-bad-idea/" rel="alternate" type="text/html" title="Why a subdomain for an APEX development system is a bad idea" />
<title type="html">Why a subdomain for an APEX development system is a bad idea</title>
<summary type="html">The Internet Explorer cookie desaster</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<published>2015-12-12T00:00:00+01:00</published>
<updated>2017-08-12T20:02:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2015-12-12-why-a-subdomain-for-an-apex-development-system-is-a-bad-idea/">
&lt;p&gt;&lt;em&gt;The Internet Explorer cookie desaster&lt;/em&gt;&lt;/p&gt;


&lt;p&gt;&lt;em&gt;Do you find dev.apex.mycompany.tld a nice, rememberable address? Unfortunately this will not work - at least when you use Internet Explorer (which is the standard browser in most companies) and you use the same cookie name in some or all applications to share the session across multiple applications.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-the-problem-on-a-subdomain&#34;&gt;What is the problem on a subdomain?&lt;/h2&gt;

&lt;p&gt;Internet Explorer including version 11 has a really bad cookie implementation. If you login to your productive APEX instance under apex.mycompany.tld and then to your development instance under dev.apex.mycompany.tld, IE sends the session cookie from your productive instance to your development instance. You will not be able to login - the server is generating a new session each time because of the invalid session cookie.&lt;/p&gt;

&lt;p&gt;It comes to a nightmare if you configured your systems for automatic login with the windows login credentials as described in &lt;a href=&#34;http://de.slideshare.net/nielsdb/mt-ag-howtosingle-signonfuerapexanwendungen-mitkerberos&#34;&gt;this document&lt;/a&gt; from Niels de Bruijn. The automatic login leads to hundreds new sessions in a few seconds - depending on the speed of your development system.&lt;/p&gt;

&lt;p&gt;Not to mention that Chrome and Firefox are working well&amp;hellip;&lt;/p&gt;

&lt;p&gt;More details about IE&amp;rsquo;s cookie desaster can be found on &lt;a href=&#34;http://blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx&#34;&gt;blogs.msdn.com&lt;/a&gt; - the relevant question for this blog entry is number three.&lt;/p&gt;

</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2015-06-09-d3js-data-driven-documents/</id>
<link href="https://ogobrecht.github.io/posts/2015-06-09-d3js-data-driven-documents/" rel="alternate" type="text/html" title="D3.js - Data Driven Documents" />
<title type="html">D3.js - Data Driven Documents</title>
<summary type="html">DOAG APEX connect 2015, Düsseldorf</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="doag" label="DOAG" scheme="https://ogobrecht.github.io/tags/" />
<category term="slides" label="Slides" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="svg" label="SVG" scheme="https://ogobrecht.github.io/tags/" />
<published>2015-06-09T00:00:00+01:00</published>
<updated>2017-08-12T20:01:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2015-06-09-d3js-data-driven-documents/">
&lt;p&gt;&lt;em&gt;DOAG APEX connect 2015, Düsseldorf&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Die Folien zu meinem Vortrag (wurde in einer Vorversion auch auf dem DOAG Regionaltreffen München am 24.03.2015 gezeigt):&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;/slides/2015-06-09-d3js-data-driven-documents/&#34; target=&#34;_blank&#34;&gt;Open HTML presentation in a new window/tab&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&#34;item-meta&#34;&gt;
  &lt;p&gt;You need a modern browser with activated JavaScript. Navigation tips:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;Space&lt;/code&gt; = Next slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Space&lt;/code&gt; = Previous slide&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;Esc&lt;/code&gt; = Overview all slides&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;?&lt;/code&gt; = Overview all keyboard shortcuts&lt;/li&gt;
    &lt;li&gt;All links are opened in a new window/tab&lt;/li&gt;
    
    
  &lt;/ul&gt;
&lt;/blockquote&gt;


</content>
</entry>

<entry xml:lang="de">
<id>https://ogobrecht.github.io/posts/2015-03-01-d3js-grundlagen/</id>
<link href="https://ogobrecht.github.io/posts/2015-03-01-d3js-grundlagen/" rel="alternate" type="text/html" title="D3.js Grundlagen" />
<title type="html">D3.js Grundlagen</title>
<summary type="html">DOAG/SOUG News 02-2015</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="doag" label="DOAG" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="svg" label="SVG" scheme="https://ogobrecht.github.io/tags/" />
<published>2015-03-01T00:00:00+01:00</published>
<updated>2017-08-29T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2015-03-01-d3js-grundlagen/">
&lt;p&gt;&lt;em&gt;DOAG/SOUG News 02-2015&lt;/em&gt;&lt;/p&gt;


&lt;h2&gt;Inhaltsverzeichnis&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#einleitung&#34;&gt;Einleitung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beispiele-von-der-d3-homepage&#34;&gt;Beispiele von der D3 Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#d3-was-ist-das&#34;&gt;D3: Was ist das?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#das-fundament-svg&#34;&gt;Das Fundament: SVG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#der-unterschied-selectors-versus-selections&#34;&gt;Der Unterschied: Selectors versus Selections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#die-d3-mengenlehre-wie-man-daten-an-das-dom-bindet&#34;&gt;Die D3 Mengenlehre: Wie man Daten an das DOM bindet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#das-geheimnis-der-geschwindigkeit&#34;&gt;Das Geheimnis der Geschwindigkeit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wiederverwendung-von-chart-code&#34;&gt;Wiederverwendung von Chart Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exkurs-closures-in-javascript&#34;&gt;Exkurs: Closures in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#die-königsklasse-physik-simulationen&#34;&gt;Die Königsklasse: Physik-Simulationen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#netzwerken-ein-plugin-nicht-nur-für-apex&#34;&gt;Netzwerken: Ein Plugin (nicht nur) für APEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fazit&#34;&gt;Fazit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;h2 id=&#34;einleitung&#34;&gt;Einleitung&lt;/h2&gt;

&lt;p&gt;Dieser Artikel erschien in der DOAG/SOUG News 02-2015 und steht auch im &lt;a href=&#34;https://mydoag.doag.org/formes/pubfiles/6900184/docs/Publikationen/DOAGNews/2015/02-2015/2015-02-News-Ottmar-Gobrecht-D3-Data-Driven-Documents.pdf&#34;&gt;Original&lt;/a&gt; zur Verfügung. Im Gegensatz zu der Papierversion der DOAG haben wir natürlich auf einer Webseite alle Möglichkeiten, D3 live zu zeigen - also los, wir starten mit einer Netzwerkvisualisierung live im Browser (JavaScript muß aktiv sein, damit die Beispiele auf dieser Seite funktionieren):&lt;/p&gt;

&lt;figure&gt;
  &lt;div id=&#34;v0&#34;&gt;&lt;/div&gt;&lt;!--the graph container--&gt;
&lt;figcaption&gt;Knoten dürfen bewegt werden ;-)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;D3 ist eine JavaScript Bibliothek zum Manipulieren von HTML Dokumenten auf der Basis von Daten und setzt dabei auf die Webstandards HTML, SVG und CSS. Dieser Artikel zeigt die Grundlagen von D3 und weckt das Interesse am Thema &amp;ldquo;Datenvisualisierung mit Webstandards&amp;rdquo;. Vorab nur soviel: Auch D3 kennt den Begriff des Joins.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;beispiele-von-der-d3-homepage&#34;&gt;Beispiele von der D3 Homepage&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;/slides/2015-06-09-d3js-data-driven-documents/assets/beispiel-9.png&#34; alt=&#34;Beispiel von github.com/mbostock/d3/wiki/Gallery&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/slides/2015-06-09-d3js-data-driven-documents/assets/beispiel-10.png&#34; alt=&#34;Beispiel von github.com/mbostock/d3/wiki/Gallery&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;d3-was-ist-das&#34;&gt;D3: Was ist das?&lt;/h2&gt;

&lt;p&gt;D3 steht für DDD = Data Driven Documents. Neben den oben gezeigten Beispielen kennt D3 alle üblichen Charts und beim Anblick der Startseite unter &lt;a href=&#34;http://d3js.org&#34;&gt;d3js.org&lt;/a&gt; wird einem klar, daß es wohl keine Grenzen bei der Umsetzung zu geben scheint. Hier der unvollständige Versuch, D3 etwas genauer zu definieren:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;D3 ist eine JavaScript-Entwicklerbibliothek, welche es erlaubt, Daten mit grafischen Elementen (SVG) im Browser zu kombinieren und diese so auf vielfältige Art und Weise zu visualisieren&lt;/li&gt;
&lt;li&gt;Durch seinen Data Join Ansatz (Aufklärung folgt später) ist D3 im Verhältnis zu anderen Bibliotheken auch bei großen Datenmengen sehr schnell&lt;/li&gt;
&lt;li&gt;Aufgrund der Unterstützung von Webstandards ist D3 zukunftssicher und auch auf mobilen Geräten lauffähig&lt;/li&gt;
&lt;li&gt;D3 basiert auf HTML5 und CSS3, es benötigt also einen modernen Browser (Firefox, Chrome, Safari, IE9 aufwärts)&lt;/li&gt;
&lt;li&gt;D3 ist KEINE Chart-Engine, bei der man fertige Layouts auswählt und konfiguriert&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;das-fundament-svg&#34;&gt;Das Fundament: SVG&lt;/h2&gt;

&lt;p&gt;SVG steht für Scalable Vector Graphics und basiert auf XML. Die zweidimensionalen SVG Zeichnungselemente haben gegenüber Raster-Grafiken den Vorteil, verlustfrei skaliert werden zu können. Ihnen fehlt also der berühmte Treppenstufeneffekt, der bei extremer Vergrößerung bei Rasterformaten auftritt. SVG im Browser wurde im Rahmen von HTML5 standardisiert.&lt;/p&gt;

&lt;p&gt;Im Gegensatz zu HTML-Elementen, die im Grunde nur die Rechteckform kennen, gibt es bei SVG-Elementen Pfade und zur einfacheren Handhabung alle grafischen Grundformen wie Kreis, Ellipse, Rechteck, Linie und Polygon. Zusätzlich kann man noch Text und externe Rastergrafiken verwenden. Alle genannten Elemente können durch das Gruppenelement zusammengefasst werden.&lt;/p&gt;

&lt;p&gt;Elemente und Gruppen von Elementen können über Style Attribute in Ihrer Erscheinung angepasst und über Transformationen in Position, Orientierung und Form verändert werden. An Transformationen stehen Parallelverschiebung, Rotation, Skalierung und Scherung zur Verfügung, die über CSS3 Transitions auch über einen vorgegebenen Zeitraum hinweg verändert werden können. Daneben gibt es noch Animationen sowie grafische Effekte und Filter. Wer sich tiefergehender dafür interessiert, findet im Web eine Menge Informationen und Beispiele.&lt;/p&gt;

&lt;p&gt;Man kann SVG Grafiken auf mehreren Wegen in HTML einbinden: Als externe Grafik oder direkt im HTML mit dem Tag &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;. Bei einer externen Grafik muß wie bei XML der Namespace definiert werden. Bei direkter Einbindung in HTML braucht man das nicht; was im Zusammenhang mit D3 den Standardfall darstellt. Bis auf die ungewohnten Tag- und Attributnamen wird einem also nicht viel auffallen, wenn man sich eine HTML-Seite mit eingebettetem SVG im DOM Inspector eines modernen Browsers anschaut. Insofern ist SVG recht pflegeleicht und man kann die gewohnten Werkzeuge des Browsers nutzen.&lt;/p&gt;

&lt;p&gt;Wer jQuery kennt, wird sich schnell in D3 zurechtfinden. D3 unterstützt auch die Methodenverkettung und die Basismethoden wie &lt;code&gt;append&lt;/code&gt; und &lt;code&gt;attr&lt;/code&gt; haben die gleichen Namen oder zumindest ähnliche wie z.B. &lt;code&gt;style&lt;/code&gt; bei D3 und &lt;code&gt;css&lt;/code&gt; bei jQuery. Listing 1 zeigt ein Beispiel, drei SVG Elemente direkt in HTML und ein Element prozedural mit D3.&lt;/p&gt;

&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;SVG Beispiel&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://d3js.org/d3.v3.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;v1&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;viewBox&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0 0 450 120&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;width:600px; max-width:100%;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rect&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;120&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;160&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#ff6600&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ellipse&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;240&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;60&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;120&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;40&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;20&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;y1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;20&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;x2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;450&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;y2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;stroke&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;svg#v1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;circle&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;380&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;60&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;55&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;stroke&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lightsteelblue&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fill-opacity&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 1: Ein einfaches SVG Beispiel&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;svg class=&#34;shadow&#34; id=&#34;v1&#34; viewBox=&#34;0 0 450 120&#34; style=&#34;width:600px; max-width:100%;&#34;&gt;
  &lt;rect x=&#34;0&#34; y=&#34;0&#34; height=&#34;120&#34; width=&#34;160&#34; fill=&#34;#ff6600&#34;/&gt;
  &lt;ellipse cx=&#34;240&#34; cy=&#34;60&#34; rx=&#34;120&#34; ry=&#34;40&#34; fill=&#34;green&#34;/&gt;
  &lt;line x1=&#34;20&#34; y1=&#34;20&#34; x2=&#34;450&#34; y2=&#34;100&#34; stroke=&#34;blue&#34;/&gt;
&lt;/svg&gt;
&lt;figcaption&gt;Abbildung 1: Das Ergebnis aus Listing 1&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Wie man in Listing 1 erkennen kann, heißt bei SVG das Attribut für die Füllfarbe &lt;code&gt;fill&lt;/code&gt; und das für die Konturfarbe &lt;code&gt;stroke&lt;/code&gt;. Der Bezugspunkt für das Positionieren von Elementen ist die linke obere Ecke des SVG Elementes. Das gilt auch beim Rechteck-Element. Beim Kreis und der Ellipse ist der Bezugspunkt hingegen die Mitte. Da wir hier live im Browser arbeiten: Einfach mal die Konsole öffnen und mit einer veränderten Version des Skriptes herumprobieren ;-)&lt;/p&gt;

&lt;h2 id=&#34;der-unterschied-selectors-versus-selections&#34;&gt;Der Unterschied: Selectors versus Selections&lt;/h2&gt;

&lt;p&gt;In JavaScript kann mit den aus CSS bekannten Selektoren Elemente im DOM auswählen. Möchte man dann Änderungen an den Elementen vornehmen, muß man mit einer Schleife über alle Elemente iterieren. D3 verfolgt einen anderen Ansatz, wie man schon an der Bezeichnung erkennen kann - hier wird von &lt;a href=&#34;http://bost.ocks.org/mike/selection/&#34;&gt;Selections&lt;/a&gt; gesprochen. Jede Selection ist ein Array, auch wenn es nur ein oder gar kein Element enthält. Wenn man das Array dann mit einer Methode aufruft, iteriert D3, wie übrigens jQuery auch, automatisch über alle Elemente. Listing 2 zeigt den Vergleich:&lt;/p&gt;

&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Schleife über alle Elemente: JavaScript
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;pi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setProperty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;// Schleife über alle Elemente: D3
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selectAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 2: JavaScript versus D3&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;die-d3-mengenlehre-wie-man-daten-an-das-dom-bindet&#34;&gt;Die D3 Mengenlehre: Wie man Daten an das DOM bindet&lt;/h2&gt;

&lt;p&gt;Bevor man Daten an das DOM binden kann, müssen diese erst einmal zur Verfügung stehen. D3 stellt für das Lesen von Daten XHR (XMLHttpRequest) Methoden zur Verfügung. Damit können Daten per JavaScript nachgeladen werden. Der Vorteil dieses Vorgehens ist, dass sich das Laden der eigentlichen Webseite bei großen Datenmengen nicht verzögert. Zur einfacheren Handhabung gibt es darauf aufbauend vier Wrappermethoden, die für das Laden von CSV, TSV, XML und JSON Daten genutzt werden können. Häufig kommt es aber auch vor, daß man diese auch AJAX Calls genannten Aufrufe mit den Methoden des jeweils benutzten Entwicklungs-Frameworks macht, wobei sich das Datenformat JSON durchgesetzt hat. Bei APEX gibt es zum Beispiel fertige Methoden in den mitgelieferten JavaScript Bibliotheken und bei kleineren Datenmengen mag es auch ok sein, diese direkt in die Seite zu rendern. Wege gibt es viele. Am Ende benötigt man JavaScript Arrays, die die Daten enthalten und über die D3 iterieren kann. Wie die &amp;ldquo;Zeilen&amp;rdquo; bzw. Objekte des Arrays aussehen, hängt stark vom Anwendungsfall ab.&lt;/p&gt;

&lt;figure&gt;
&lt;svg class=&#34;shadow&#34; viewBox=&#34;0 0 380 160&#34; style=&#34;width:500px; max-width:100%; text-anchor: middle;&#34;&gt;
  &lt;ellipse cx=&#34;130&#34; cy=&#34;90&#34; rx=&#34;120&#34; ry=&#34;60&#34; fill=&#34;orange&#34; fill-opacity=&#34;0.5&#34;/&gt;
  &lt;ellipse cx=&#34;250&#34; cy=&#34;90&#34; rx=&#34;120&#34; ry=&#34;60&#34; fill=&#34;steelblue&#34; fill-opacity=&#34;0.5&#34;/&gt;
  &lt;text x=&#34;130&#34; y=&#34;25&#34;&gt;Data&lt;/text&gt;
  &lt;text x=&#34;250&#34; y=&#34;25&#34;&gt;Elements&lt;/text&gt;
  &lt;text x=&#34;75&#34; y=&#34;98&#34;&gt;Enter&lt;/text&gt;
  &lt;text x=&#34;190&#34; y=&#34;98&#34;&gt;Update&lt;/text&gt;
  &lt;text x=&#34;305&#34; y=&#34;98&#34;&gt;Exit&lt;/text&gt;
&lt;/svg&gt;
&lt;figcaption&gt;Abbildung 2: Der D3 Data Join (weiteres Beispiel auf d3js.org: &lt;a href=&#34;http://bost.ocks.org/mike/join/&#34;&gt;Thinking with Joins&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Nun zur eigentlichen Frage: D3 bindet Daten an das DOM, in dem man einer Selection über den Data Operator die Daten in Form eines Arrays übergibt. Hier kommt der Eingangs erwähnte Data Join zum Einsatz. Zurückgeliefert werden drei neue Selections, die D3 Update, Enter und Exit nennt. Abbildung 2 zeigt schematisch die Zusammenhänge. In der Update Selection sind die Elemente des DOM mit den Elementen des Data Arrays in der Reihenfolge ihres jeweiligen Erscheinens verknüpft. Wie man unschwer errät, kann aber eine unterschiedliche Anzahl an Elementen im DOM und in den Daten vorhanden sein. Wenn im DOM mehr Elemente vorhanden sind als Daten, dann liegen diese Elemente in der Exit Selection, mit der man die Elemente aus dem DOM entfernen kann. Gibt es mehr Daten als DOM Elemente, dann befinden sich diese Daten in der Enter Selection, mit der die fehlenden Elemente im DOM erstellt werden können. Listing 3 zeigt ein Beispiel und darauf folgt das Live-Ergebnis - wer möchte, kann in der Browserkonsole damit ein wenig herumspielen.&lt;/p&gt;

&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Data Join&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://d3js.org/d3.v3.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;v3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;color:green;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Ein bereits existierendes Element&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;v3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;div#v3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;//Die Update-Selection: Der vorhandene Paragraph wird aktualisiert
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;v3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selectAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;//Die Enter-Selection: Hier kommen zwei neue Paragraphen hinzu
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;v3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Neues Element aus Daten &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;//Die Exit-Selection ist in unserem Beispiel leer
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;v3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 3: Data Join (weiteres Beispiel auf d3js.org: &lt;a href=&#34;http://bost.ocks.org/mike/circles/&#34;&gt;Three Little Circles]&lt;/a&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;div id=&#34;v3&#34; class=&#34;shadow&#34; style=&#34;padding:10px; display:inline-block;&#34;&gt;
  &lt;p style=&#34;color:green;&#34;&gt;Ein bereits existierendes Element&lt;/p&gt;
&lt;/div&gt;
&lt;figcaption&gt;Abbildung 3: Das Ergebnis aus Listing 3&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Wie man in Listing 3 sieht, steht einem die Update Selection sofort in der Methodenverkettung zur Verfügung und sie hat keinen eigenen Namen. Es wäre aber auch möglich, die Enter oder Exit Selection zuerst aufzurufen. Wichtig ist, zu wissen, dass nach Abarbeitung der ersten Selection die anderen Selections gesondert aufgerufen werden müssen - eine weitere Verkettung ist nicht möglich. Außerdem stehen einem die Elemente der Enter Selection nach Ausführung in der Update Selection zur Verfügung. Man könnte also z.B. erst die neuen Elemente anlegen ohne weitere Attribute oder Styles zu definieren und dann mit einem Aufruf der Update-Selection alle Elemente auf einmal aktualisieren (in Listing 4 passiert das so in dieser Reihenfolge).&lt;/p&gt;

&lt;p&gt;Für den Fall, das der einfache Data Join über die Reihenfolge der Elemente in DOM und Array nicht genügt, gibt es eine sogenannte Key Function, anhand derer die Elemente im DOM identifiziert werden. Die anonyme Funktion wird bei Bedarf als zweiter Parameter dem Data Operator übergeben. Listing 4 zeigt ein Beispiel einer Data Key Funktion - hier wird zur Identifikation die ID verwendet. Wer wissen möchte, wie das alles ganz genau funktioniert, der findet das &lt;a href=&#34;http://bost.ocks.org/mike/selection/&#34;&gt;hier&lt;/a&gt; durch den Autor von D3 sehr ausführlich erklärt.&lt;/p&gt;

&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Data Key Function&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;v4&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;viewBox&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0 0 200 30&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;width:500px; max-width:100%;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://d3js.org/d3.v3.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;svg#v4&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selectAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;circle&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//hier wird die key function verwendet
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;});&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;//Wir rufen zuerst die Exit-Selection auf
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;//Dann fügen wir über die Enter-Selection die neuen Elemente ein
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;circle&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;//Zuletzt aktualisieren wir alle Elemente mit der Update-Selection
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 4: Data Key Function&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;svg id=&#34;v4&#34; class=&#34;shadow&#34; viewBox=&#34;0 0 200 30&#34; style=&#34;width:500px;&#34;&gt;&lt;/svg&gt;
&lt;figcaption&gt;Abbildung 4: Das Ergebnis aus Listing 4&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Was wird eigentlich passieren, wenn man folgenden Code ausführt? Wer mag, kann das einfach mal in der Browserkonsole ausprobieren (Mehr zu &lt;a href=&#34;https://bost.ocks.org/mike/transition/&#34;&gt;Transitions&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;120&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;75&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;color&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selectAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;circle&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;});&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;circle&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;v4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;circles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;transition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cy&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;das-geheimnis-der-geschwindigkeit&#34;&gt;Das Geheimnis der Geschwindigkeit&lt;/h2&gt;

&lt;p&gt;Die Konsequenz aus dem Vorgehen von D3 ist, dass man immer erst eine Selection erstellt, auch wenn man weiß, das im DOM keine Elemente vorhanden sind. An die Selection werden die Daten gebunden und im Falle einer statischen Visualisierung reicht es dann aus, über die Enter Selection die DOM Elemente zu erstellen. Im Falle von dynamischen Visualisierungen spielt dieses Vorgehen sein Stärken aus. Ändern sich nicht alle Daten, muß D3 nur die neuen Elemente im DOM anlegen, alte entfernen, und vorhandene können aktualisiert werden. Dies spart Resourcen im Browser, da nur die nötigste Arbeit zu tun ist, anstatt alle Elemente aus dem DOM zu entfernen, um sie dann wieder neu anzulegen. Außerdem speichert sich D3 in den Selections die Referenzen auf die DOM-Elemente, dadurch muß für weitere Updates des DOM keine weitere Elementsuche auf dem DOM ausgeführt werden. Nun ist es gelüftet, das Geheimnis hinter der Geschwindigkeit - D3 verhindert ganz einfach unnötige Arbeit für den Browser, womit Rechenkapazität für das Bearbeiten größerer Datenmengen frei wird.&lt;/p&gt;

&lt;h2 id=&#34;wiederverwendung-von-chart-code&#34;&gt;Wiederverwendung von Chart Code&lt;/h2&gt;

&lt;p&gt;Der Schwerpunkt von D3 liegt nicht auf dem Ausliefern von fertigen Chartfunktionen, in die man einfach seine Daten kippt. D3 konzentriert sich auf grundlegende, immer wieder benötigte Dinge und bietet dafür generisch verwendbare Hilfsfunktionen an. Man muss zwar Arbeit in seine Charts stecken, hat aber durch den generischen Ansatz der Basisfunktionen praktisch keine Einschränkungen bei der Umsetzung, wie man an den vielen Beispielen im Internet sehen kann.&lt;/p&gt;

&lt;p&gt;Man kommt am Anfang mit diesen Beispielen schnell zu ansehnlichen Ergebnissen. Spätestens wenn man mit dem gleichen Code einen zweiten Chart auf der selben HTML-Seite einbauen möchte, sieht man jedoch die Grenzen: Globale Variablen und Funktionen sind schnell redeklariert und ein zweiter Chart stört die Funktion des ersten. Hier ist es dann an der Zeit, über Kapselung und Wiederverwendung von Chart-Code zu sprechen. Dazu muß man wissen, wie JavaScript mit Variablen und Funktionen umgeht. Das Stichwort hier sind Closures.&lt;/p&gt;

&lt;h2 id=&#34;exkurs-closures-in-javascript&#34;&gt;Exkurs: Closures in JavaScript&lt;/h2&gt;

&lt;p&gt;In JavaScript ist alles ein Objekt und Funktionen können Objekte, also auch Funktionen, zurückgeben.&lt;/p&gt;

&lt;p&gt;Eine Closure ist am Ende nichts anderes als ein Funktionsaufruf, bei dem eine Funktion zurückgegeben wird. Die zurückgegebene Funktion behält Ihren vorherigen Kontext, kann also auf die vor der Rückgabe vorhandenen Variablen innerhalb ihrer Ursprungsfunktion zugreifen. Sie kapselt quasi Ihre Umhebung, daher der Name. Die Folge eines solchen Vorgehens ist, dass man dadurch private Variablen erhält, die von außen nicht einsehbar sind. Um trotzdem an diese Variablen zu kommen, muß man dann entsprechende Get- und Set-Funktionen definieren.&lt;/p&gt;

&lt;p&gt;Listing 5 zeigt die Prinzipien. Abbildung 5 zeigt das Ergebnis aus Listing 5 und kann einfach in der JavaScript Console des Browsers nachvollzogen werden.&lt;/p&gt;

&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Prinzip Closure&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;my_chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;conf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*create chart with conf*/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;render&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arguments&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;conf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 5: Prinzip Closure&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;img src=&#34;/slides/2015-06-09-d3js-data-driven-documents/assets/test-closure.png&#34; alt=&#34;Test Closure in Browser Konsole&#34;/&gt;
&lt;figcaption&gt;Abbildung 5: Test Closure in Browser Konsole&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Wenn man nun noch wie in Listing 5 bei diesen Get- und Set-Funktionen wiederum die Funktion selbst zurückliefert, dann hat man die Basis für eine Methodenverkettung geschaffen. Wie man sieht, lohnt es sich, ein wenig Arbeit in eine kleine API zu stecken - als Gegenleistung bekommt man universell einsatzbare Charts, die je nach Gegebenheit initialisiert und zur Laufzeit angepasst werden können, um z.B. auf Userinteraktionen zu reagieren.&lt;/p&gt;

&lt;h2 id=&#34;die-königsklasse-physik-simulationen&#34;&gt;Die Königsklasse: Physik-Simulationen&lt;/h2&gt;

&lt;p&gt;D3 bietet für verschiedene Anwendungsfälle sogenannte Layouts an. Das sind im Grunde schon die eben angesprochenen wiederverwendbaren Charts, aber auf einem generischem Level. Wir gehen das an dem Beispiel eines Force Layouts durch, einer beliebten, kräftebasierenden Darstellung von Netzwerken.&lt;/p&gt;

&lt;p&gt;Die Besonderheit einer kräftebasierenden, selbstorganisierenden Netzwerkvisualisierung ist die dahinterliegende physikalische Simulation. D3 berechnet fortwährend die Positionen der Netzwerkknoten. Damit der Eindruck einer Animation entsteht, muß man natürlich die Knoten seines Graphen irgendwann einmal neu positionieren. Diese Arbeit nimmt einem D3 nicht ab. D3 bietet aber ein sogenanntes Tick Event an, welches ungefähr alle 20 Millisekunden feuert. Wenn man dann bei jedem Tickevent alle Knoten und Verbindungen des Netzwerks an die jeweils aktuelle Position der physikalischen Simulation verschiebt, bekommt man den Eindruck einer Animation. Die Animation des Netzwerkes hört dann auf, wenn sich die Simulation in einem kräftemäßig ausgewogenen Zustand befindet.&lt;/p&gt;

&lt;p&gt;Listing 6 zeigt ein minimales, vollständig lauffähiges Script für ein Force Layout. Zuerst die Daten - diese dürften den meisten bekannt sein. Als Knoten nehmen wir die Mitarbeiter der EMP-Tabelle, als Links die Beziehung zum Vorgesetzten. Die Links beziehen sich auf die Knoten in der Reihenfolge ihres Erscheinens, es wird also keine Key Function eingesetzt, um die Knoten zu identifizieren. Dies ist ok, solange keine Updates auf den Graph erfolgen sollen, ansonsten wird es einem schwer fallen, die Knoten im DOM zu identifizieren.&lt;/p&gt;

&lt;figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Force Layout&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;v6&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--graph container--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://d3js.org/d3.v3.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nodes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;King&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Blake&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Clark&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Jones&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Scott&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Ford&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Smith&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Allen&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Ward&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Martin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Turner&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Adams&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;James&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Miller&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dept&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;links&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;225&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;svg#v6&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;viewBox&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0 0 &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;500px&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;max-width&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;100%&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;background-color&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;category10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;force&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;layout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;force&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;links&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selectAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;line&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;line&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;stroke&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#999&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nodes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selectAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;circle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;circle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fill&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;force&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;drag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;force&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tick&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;links&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;x1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;y1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;x2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;y2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nodes&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cx&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;attr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;force&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figcaption&gt;Listing 6: Force Layout&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Will man z.B. die Knoten in Farbe und Größe passend zu den Daten gestalten, kann man auf die vielen Hilfsfunktionen von D3 zurückgreifen. Als Beispiel sei hier die Farbe der Knoten genannt. In Listing 6 kann man erkennen, wie die Variable &lt;code&gt;v6.color&lt;/code&gt; mit der Funktion &lt;code&gt;d3.scale.category10()&lt;/code&gt; belegt wird. Diese Funktion liefert eine aus 10 verschiedenen Farben für den übergebenen Wert zurück. Wir benutzen dies dafür, um über die Abteilungsnummer eines Mitarbeiters eine Farbe zurückzubekommen - somit haben alle Mitarbeiter einer Abteilung die gleiche Knotenfarbe, ohne dass wir dafür etwas programmieren müssen.&lt;/p&gt;

&lt;p&gt;Nach der &lt;code&gt;v6.color&lt;/code&gt; Variablen wird dann eine Variable &lt;code&gt;v6.force&lt;/code&gt; mit dem entsprechenden Layout belegt. Dann folgt schon die Variable &lt;code&gt;v6.links&lt;/code&gt;. Hier werden alle Linien im SVG Element selektiert - in unserem Fall ergibt das ein leeres Array, weil wir ja wissen, dass wir zum ersten Mal den Graph erstellen.&lt;/p&gt;

&lt;p&gt;Dann folgt in der selben Zeile der Data Join mit unseren Links und gleich darauf wird in der Enter Selection für jeden Eintrag in unserem &lt;code&gt;v6.links&lt;/code&gt; Array eine Linie im SVG Element gezeichnet. Das Ganze wiederholen wir jetzt für die Knoten.&lt;/p&gt;

&lt;p&gt;Daraufhin definieren wir noch für das Tick Event die bereits erwähnte Funktion, die dann jeweils unsere Knoten und Links innerhalb des SVG Elementes positionieren. Man kann hier schön erkennen, wie D3 jeweils implizit über das &lt;code&gt;v6.links&lt;/code&gt; und &lt;code&gt;v6.nodes&lt;/code&gt; Array iteriert und für jeden Eintrag in der darauf definierten anonymen Funktion als ersten Parameter die Daten des Eintrags übergibt, die einem dann für die weitere Verarbeitung zur Verfügung stehen. In unserem Fall geben wir einfach nur die jeweilige Position für den Link oder den Knoten zurück.&lt;/p&gt;

&lt;p&gt;Als letzter Schritt wird noch die eigentliche physikalische Berechnung gestartet, die natürlich unsere beiden Knoten und Link Arrays benötigt, um vernünftig arbeiten zu können. Als Ergebnis erhalten wir den Graph aus Abbildung 6, der schon ein wenig an den ersten Graphen am Anfang des Artikels erinnert.&lt;/p&gt;

&lt;figure&gt;
&lt;svg id=&#34;v6&#34; class=&#34;shadow&#34; style=&#34;display:inline-block;&#34;&gt;&lt;/svg&gt;&lt;!--graph container--&gt;
&lt;figcaption&gt;Abbildung 6: Das Ergebnis aus Listing 6 - Knoten dürfen bewegt werden ;-)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Wie man sieht, muß man oft nur minimal Code erstellen, um Charts an seine eigenen Bedürfnisse anzupassen. Und sollte man doch mal etwas komplizierteres benötigen, so kann man davon ausgehen, im Internet viele Beispiele für die gleiche oder eine ähnliche Problemstellung zu finden.&lt;/p&gt;

&lt;h2 id=&#34;netzwerken-ein-plugin-nicht-nur-für-apex&#34;&gt;Netzwerken: Ein Plugin (nicht nur) für APEX&lt;/h2&gt;

&lt;p&gt;Wer sich dafür interessiert, was man noch so alles machen muss, um vom eben gezeigten Minimalbeispiel zu der großen Lösung aus dem Artikelanfang zu kommen, findet eine vollständige Implementierung eines Netzwerkcharts als &lt;a href=&#34;https://github.com/ogobrecht/d3-force-apex-plugin&#34;&gt;APEX-Plugin auf GitHub&lt;/a&gt;. Dazu gibt es auch eine &lt;a href=&#34;https://apex.oracle.com/pls/apex/f?p=18290:1&#34;&gt;Demo-App auf apex.oracle.com&lt;/a&gt;. Allen Nicht-APEX-Entwicklern sei gesagt, dass trotz seines Namens nicht zwingend APEX benötigt wird. Wie im Artikel empfohlen existiert eine vollständige JavaScript API. Darüberhinaus gibt es einen interaktiven Customization Wizard und die Chartfunktion stellt bei nicht vorhandenen Daten selbstständig Beispieldaten zur Verfügung. Mit diesen Voraussetzungen kann man nach dem Einbinden der benötigten Source-Dateien sofort loslegen, Parameter verändern und live die Auswirkungen testen.&lt;/p&gt;

&lt;h2 id=&#34;fazit&#34;&gt;Fazit&lt;/h2&gt;

&lt;p&gt;Mit D3 stehen einem eine Menge Möglichkeiten offen, eigene Charts zu erstellen. Man muß zwar zuerst ein wenig Arbeit investieren, bekommt aber bei überlegter Umsetzung wiederverwendbaren Code und hat praktisch keine Einschränkungen in der Umsetzung. Natürlich kann man in einem Artikel wie diesem nur an der Oberfläche kratzen. Nichtsdestotrotz besteht die Hoffnung, Lust auf mehr gemacht zu haben. Folgend ein paar Links als Einstieg für die eigene Recherche:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d3js.org&#34;&gt;d3js.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apex.oracle.com/pls/apex/germancommunities/apexcommunity/tipp/3481/index.html&#34;&gt;D3 Tip in der deutschen APEX Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.apex-plugin.com/search-plugin-directory/&#34;&gt;www.apex-plugin.com&lt;/a&gt; (nach D3 suchen)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apex.world/ords/f?p=100:700&#34;&gt;apex.world&lt;/a&gt; (Plugins, nach D3 suchen)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutorials.jenkov.com/svg/index.html&#34;&gt;SVG Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wer keine Lust auf selber machen hat: &lt;a href=&#34;http://nvd3.org/&#34;&gt;nvd3.org&lt;/a&gt;, &lt;a href=&#34;http://c3js.org/&#34;&gt;c3js.org&lt;/a&gt; (Abstraktionsprojekte)&lt;/p&gt;

&lt;p&gt;Happy coding :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

&lt;p&gt;&lt;link  href=&#34;/assets/d3.js/d3-force-3.0.0.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;script src=&#34;/assets/d3.js/ResizeObserver-1.5.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-3.5.6.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-force-3.0.0.min.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;style&gt;.net_gobrechts_d3_force_tooltip { z-index: auto; }&lt;/style&gt;

&lt;script&gt;
window.onload = function (){
  //v0
  window.v0 = netGobrechtsD3Force(&#39;v0&#39;)
    .height(400)
    .width(800)
    .useDomParentWidth(true) //for responsive layout
    //.zoomMode(true)
    .lassoMode(true)
    .wrapLabels(true)
    .showBorder(false)
    .debug(true) //to enable the customization wizard
    .render(); //sample data is provided when called without data
    //see also https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html
  d3.select(&#39;#v0&#39;).select(&#39;svg&#39;).classed(&#39;shadow&#39;, true);
  //v1
  d3.select(&#39;svg#v1&#39;).append(&#39;circle&#39;)
    .attr(&#39;cx&#39;,&#39;380&#39;)
    .attr(&#39;cy&#39;,&#39;60&#39;)
    .attr(&#39;r&#39;,&#39;55&#39;)
    .style(&#39;stroke&#39;,&#39;red&#39;)
    .style(&#39;fill&#39;,&#39;lightsteelblue&#39;)
    .style(&#39;fill-opacity&#39;,0.5);
  //v3
  window.v3 = {};
  v3.div = d3.select(&#39;div#v3&#39;);
  v3.p = v3.div.selectAll(&#39;p&#39;).data([1,2,3])
    .style(&#39;color&#39;, &#39;red&#39;);
  v3.p.enter().append(&#39;p&#39;)
    .text( function(d){return &#39;Neues Element aus Daten &#39; + d;} );
  v3.p.exit().remove();
  //v4
  window.v4 = {};
  v4.data = [
    {&#34;id&#34;:1, &#34;r&#34;:14, &#34;x&#34;:50,  &#34;y&#34;:15, &#34;color&#34;:&#34;red&#34;},
    {&#34;id&#34;:2, &#34;r&#34;:14, &#34;x&#34;:70, &#34;y&#34;:15, &#34;color&#34;:&#34;green&#34;},
    {&#34;id&#34;:3, &#34;r&#34;:14, &#34;x&#34;:90, &#34;y&#34;:15, &#34;color&#34;:&#34;blue&#34;}
  ];
  v4.svg = d3.select(&#39;svg#v4&#39;);
  v4.circles = v4.svg.selectAll(&#39;circle&#39;)
    .data(v4.data, function(d){return d.id;});
  v4.circles.exit().remove();
  v4.circles.enter().append(&#39;circle&#39;);
  v4.circles
    .attr(&#39;r&#39;,    function(d) { return d.r; })
    .attr(&#39;cx&#39;,   function(d) { return d.x; })
    .attr(&#39;cy&#39;,   function(d) { return d.y; })
    .attr(&#39;fill&#39;, function(d) { return d.color; });
  //v 6
  window.v6 = {}; v6.data = {};
  v6.data.nodes = [
    {&#34;name&#34;:&#34;King&#34;,&#34;dept&#34;:10},{&#34;name&#34;:&#34;Blake&#34;,&#34;dept&#34;:30},
    {&#34;name&#34;:&#34;Clark&#34;,&#34;dept&#34;:10},{&#34;name&#34;:&#34;Jones&#34;,&#34;dept&#34;:20},
    {&#34;name&#34;:&#34;Scott&#34;,&#34;dept&#34;:20},{&#34;name&#34;:&#34;Ford&#34;,&#34;dept&#34;:20},
    {&#34;name&#34;:&#34;Smith&#34;,&#34;dept&#34;:20},{&#34;name&#34;:&#34;Allen&#34;,&#34;dept&#34;:30},
    {&#34;name&#34;:&#34;Ward&#34;,&#34;dept&#34;:30},{&#34;name&#34;:&#34;Martin&#34;,&#34;dept&#34;:30},
    {&#34;name&#34;:&#34;Turner&#34;,&#34;dept&#34;:30},{&#34;name&#34;:&#34;Adams&#34;,&#34;dept&#34;:20},
    {&#34;name&#34;:&#34;James&#34;,&#34;dept&#34;:30},{&#34;name&#34;:&#34;Miller&#34;,&#34;dept&#34;:10}
  ];
  v6.data.links = [
    {&#34;source&#34;:1,&#34;target&#34;:0},{&#34;source&#34;:2,&#34;target&#34;:0},
    {&#34;source&#34;:3,&#34;target&#34;:0},{&#34;source&#34;:7,&#34;target&#34;:1},
    {&#34;source&#34;:8,&#34;target&#34;:1},{&#34;source&#34;:9,&#34;target&#34;:1},
    {&#34;source&#34;:10,&#34;target&#34;:1},{&#34;source&#34;:12,&#34;target&#34;:1},
    {&#34;source&#34;:13,&#34;target&#34;:2},{&#34;source&#34;:4,&#34;target&#34;:3},
    {&#34;source&#34;:5,&#34;target&#34;:3},{&#34;source&#34;:6,&#34;target&#34;:5},
    {&#34;source&#34;:11,&#34;target&#34;:4}
  ];
  v6.width = 300; v6.height = 225;
  v6.svg = d3.select(&#34;svg#v6&#34;)
    .attr(&#34;viewBox&#34;,&#34;0 0 &#34; + v6.width + &#34; &#34; + v6.height)
    .attr(&#34;width&#34;,&#34;500px&#34;)
    .style(&#34;max-width&#34;,&#34;100%&#34;)
    .style(&#34;background-color&#34;,&#34;white&#34;);
  v6.color = d3.scale.category10();
  v6.force = d3.layout.force().size([v6.width,v6.height]);
  v6.links = v6.svg.selectAll(&#34;line&#34;).data(v6.data.links)
    .enter().append(&#34;line&#34;).style(&#39;stroke&#39;,&#39;#999&#39;);
  v6.nodes = v6.svg.selectAll(&#34;circle&#34;).data(v6.data.nodes)
    .enter().append(&#34;circle&#34;)
      .attr(&#34;r&#34;, 5)
      .style(&#34;fill&#34;, function(d){ return v6.color(d.dept); })
      .call(v6.force.drag);
  v6.force.on(&#34;tick&#34;, function(){
    v6.links
      .attr(&#34;x1&#34;, function(d){ return d.source.x; })
      .attr(&#34;y1&#34;, function(d){ return d.source.y; })
      .attr(&#34;x2&#34;, function(d){ return d.target.x; })
      .attr(&#34;y2&#34;, function(d){ return d.target.y; });
    v6.nodes
      .attr(&#34;cx&#34;, function(d){ return d.x; })
      .attr(&#34;cy&#34;, function(d){ return d.y; });
  });
  v6.force
    .nodes(v6.data.nodes)
    .links(v6.data.links)
    .start();
}
&lt;/script&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2015-02-20-d3js-force-directed-network-chart/</id>
<link href="https://ogobrecht.github.io/posts/2015-02-20-d3js-force-directed-network-chart/" rel="alternate" type="text/html" title="D3.js Force-Directed Network Chart" />
<title type="html">D3.js Force-Directed Network Chart</title>
<summary type="html">A JavaScript standalone implementation and Oracle APEX region type plugin</summary>
<category term="project" label="Open Source Project" scheme="https://ogobrecht.github.io/tags/" />
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<category term="plugin" label="Plugin" scheme="https://ogobrecht.github.io/tags/" />
<category term="d3js" label="D3.js" scheme="https://ogobrecht.github.io/tags/" />
<category term="chart" label="Chart" scheme="https://ogobrecht.github.io/tags/" />
<category term="svg" label="SVG" scheme="https://ogobrecht.github.io/tags/" />
<published>2015-02-20T00:00:00+01:00</published>
<updated>2018-12-04T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2015-02-20-d3js-force-directed-network-chart/">
&lt;p&gt;&lt;em&gt;A JavaScript standalone implementation and Oracle APEX region type plugin&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;My first Oracle APEX plugin and open source project :-)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;div id=&#34;example&#34;&gt;&lt;/div&gt;&lt;!--the graph container--&gt;&lt;/p&gt;

&lt;p&gt;Everything started some months ago when I stumbled over this fascinating &lt;a href=&#34;https://bl.ocks.org/mbostock/4062045&#34;&gt;force-directed graph&lt;/a&gt;. I immediately had the idea to use this technology to visualize data models in APEX. My experience is, that direct after I documented a data model, this documentation is out of date. I wanted to have a live visualization of the data models. After the first implementation it turned out, that the resulting graph is also useful for other purposes and I decided to build up an APEX plugin for easier integration.&lt;/p&gt;

&lt;p&gt;If you use the bare JavaScript files you can run it on every HTML page:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;example&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--the graph container--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt;  &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/assets/d3.js/d3-force-3.0.0.css&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/assets/d3.js/ResizeObserver-1.5.0.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/assets/d3.js/d3-3.5.6.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/assets/d3.js/d3-force-3.0.0.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;onload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;example&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;netGobrechtsD3Force&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;example&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;800&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;useDomParentWidth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//for responsive layout
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//.zoomMode(true)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lassoMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;wrapLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;showBorder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//to enable the customization wizard
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//sample data is provided when called without data
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//see also https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I found myself often fiddling around with the parameters of the physical simulation - change config, reload page, not amused, change config&amp;hellip;&lt;/p&gt;

&lt;p&gt;Really annoying - even I know the implementation behind. So, the question was: What can I do for an easy configuration. My answer was after a while of thinking and trying out: A customization wizard with a live preview of the changes. The link to enter the wizard is shown when the debug mode is switched on or in APEX when the developer bar is shown - try it out in the example graph above.&lt;/p&gt;

&lt;p&gt;You can find the sources and more informations on &lt;a href=&#34;https://github.com/ogobrecht/d3-force-apex-plugin&#34;&gt;GitHub&lt;/a&gt; and a demo app on &lt;a href=&#34;https://apex.oracle.com/pls/apex/f?p=18290:1&#34;&gt;apex.oracle.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy networking :-)&lt;br&gt;
Ottmar&lt;/p&gt;

&lt;p&gt;&lt;link  href=&#34;/assets/d3.js/d3-force-3.0.0.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt;
&lt;script src=&#34;/assets/d3.js/ResizeObserver-1.5.0.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-3.5.6.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/assets/d3.js/d3-force-3.0.0.min.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;style&gt;.net_gobrechts_d3_force_tooltip { z-index: auto; }&lt;/style&gt;

&lt;script&gt;
window.onload = function() {
    window.example = netGobrechtsD3Force(&#39;example&#39;)
        .height(400)
        .width(800)
        .useDomParentWidth(true) //for responsive layout
        //.zoomMode(true)
        .lassoMode(true)
        .wrapLabels(true)
        .showBorder(false)
        .debug(true) //to enable the customization wizard
        .render(); //sample data is provided when called without data
        //see also https://ogobrecht.github.io/d3-force-apex-plugin/tutorial-1-getting-started.html
        d3.select(&#39;#example&#39;).select(&#39;svg&#39;).classed(&#39;shadow&#39;, true);
}
&lt;/script&gt;

</content>
</entry>

<entry xml:lang="en">
<id>https://ogobrecht.github.io/posts/2015-01-14-double-click-on-apex-report-row-opens-first-link-target/</id>
<link href="https://ogobrecht.github.io/posts/2015-01-14-double-click-on-apex-report-row-opens-first-link-target/" rel="alternate" type="text/html" title="Double click on APEX report row opens first link target" />
<title type="html">Double click on APEX report row opens first link target</title>
<summary type="html">A page zero dynamic action for your whole application</summary>
<category term="oracle" label="Oracle" scheme="https://ogobrecht.github.io/tags/" />
<category term="apex" label="APEX" scheme="https://ogobrecht.github.io/tags/" />
<published>2015-01-14T00:00:00+01:00</published>
<updated>2017-08-24T20:00:00+01:00</updated>
<content type="html" xml:base="https://ogobrecht.github.io/posts/2015-01-14-double-click-on-apex-report-row-opens-first-link-target/">
&lt;p&gt;&lt;em&gt;A page zero dynamic action for your whole application&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Do you like scanning a report for certain information and then moving the mouse to the first column to click the small link for details or a edit form? Would it be nice to double click anywhere on the row to open the first link?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With a little help of a dynamic action on page zero you have the solution for all your interactive and standard reports in your application. The only additional to do is, to find out the right selectors for your reports. Here some usual ones:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//APEX 5:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;IRR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uReportStandard&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tr&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//APEX 4:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;apexir_WORKSHEET_DATA&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uReportStandard&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I give you no guarantee that this will also working with your theme. Please ask your browsers developer tools and inspect your report layouts ;-)&lt;/p&gt;

&lt;p&gt;Create a dynamic action for a double click on a jQuery selector (see examples above) and set the event scope to dynamic.&lt;/p&gt;

&lt;p&gt;The dynamic action needs to execute JavaScript:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;triggeringElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;td:first&amp;gt;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy coding :-)&lt;br /&gt;
Ottmar&lt;/p&gt;

</content>
</entry>


</feed>