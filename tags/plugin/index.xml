<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>plugin on Ottmar’s Notes</title>
    <link>https://ogobrecht.github.io/tags/plugin/</link>
    <description>Recent content in plugin on Ottmar’s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ogobrecht.github.io/tags/plugin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New Major Version of D3 Force Network Chart Available</title>
      <link>https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/</guid>
      <description>Since APEX version 5 was published with the Universal Theme, I was thinking that I needed something for better responsiveness of the graph. Although it was possible to configure the graph to use the DOM parent width, the responsiveness was not so good because of situations where the window size does not change (we use the window resize event to trigger the change of the width) but the available space for the graph changes.</description>
    </item>
    
    <item>
      <title>jQuery Plugin svg2img</title>
      <link>https://ogobrecht.github.io/posts/2017-04-03-jquery-plugin-svg2img/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2017-04-03-jquery-plugin-svg2img/</guid>
      <description>SVG based charts and visualizations are often used these days. But what if you want to use your browser inline SVGs, generated with some sort of JavaScript and fancy styled with CSS, offline - maybe in a presentation, send by email or printed out large scaled?
You can create a screenshot, of course. But does this look nice when it comes to scaling? You can try to copy the HTML code of the SVG and wrap it into a correct SVG container, but then you will loose in the most cases the stylings, as normally not all CSS definitions are directly attached to the SVG elements.</description>
    </item>
    
    <item>
      <title>APEX Plugin dhtmlxGantt</title>
      <link>https://ogobrecht.github.io/posts/2017-03-14-apex-plugin-dhtmlx-gantt/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2017-03-14-apex-plugin-dhtmlx-gantt/</guid>
      <description>Some weeks ago I was asked, if I can create a plugin for the Gantt chart library from dhtmlx.com. I had a look at the library and I thought that it should be possible.
Because all my plugin developments are free time projects it took a while. Now the first public version is available. It is based on the GPLv2 version of the library, which has a reduced set of functionality.</description>
    </item>
    
    <item>
      <title>DokuWiki Plugin Reveal.js</title>
      <link>https://ogobrecht.github.io/posts/2017-03-05-dokuwiki-plugin-revealjs/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2017-03-05-dokuwiki-plugin-revealjs/</guid>
      <description>DokuWiki is very good for creating documentation in a team. It is PHP based, needs less resources and is running without a database only on files on nearly every webserver. If your infrastructure is crashed for whatever reason and you have at least access to the files (on the webserver or in a backup) you can read your documentation with a simple text editor, because DokuWiki&amp;rsquo;s syntax is designed to be readable as possible without any rendering to HTML.</description>
    </item>
    
    <item>
      <title>Markdown for Oracle APEX</title>
      <link>https://ogobrecht.github.io/posts/2016-01-01-markdown-for-oracle-apex/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2016-01-01-markdown-for-oracle-apex/</guid>
      <description>Some years ago I implemented a task board in APEX. For commenting I used the stackexchange markdown implementation (old Google code repo), which is a pure JavaScript converter and editor and based on showdown.js.
Some months ago I had to implement an application, which should be able to have multiple editors on one page and the editors should be able to support a read only mode. Furthermore there were hard limits for the amount of text for each editor.</description>
    </item>
    
    <item>
      <title>D3.js Force-Directed Network Chart</title>
      <link>https://ogobrecht.github.io/posts/2015-02-20-d3js-force-directed-network-chart/</link>
      <pubDate>Fri, 20 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2015-02-20-d3js-force-directed-network-chart/</guid>
      <description>My first Oracle APEX plugin and open source project :-)
Everything started some months ago when I stumbled over this fascinating force-directed graph. I immediately had the idea to use this technology to visualize data models in APEX. My experience is, that direct after I documented a data model, this documentation is out of date. I wanted to have a live visualization of the data models. After the first implementation it turned out, that the resulting graph is also useful for other purposes and I decided to build up an APEX plugin for easier integration.</description>
    </item>
    
  </channel>
</rss>