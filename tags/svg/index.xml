<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>svg on Ottmar’s Notes</title>
    <link>https://ogobrecht.github.io/tags/svg/</link>
    <description>Recent content in svg on Ottmar’s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 09 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ogobrecht.github.io/tags/svg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New Version of D3 Force Network Chart Available</title>
      <link>https://ogobrecht.github.io/posts/2019-06-09-new-version-of-d3-force-network-chart-available/</link>
      <pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2019-06-09-new-version-of-d3-force-network-chart-available/</guid>
      <description>First of all: Thanks to the community!
From time to time someone has new ideas or questions about the D3 network chart. Some time ago I thought my D3 implementation is more or less feature complete. But in the last weeks I worked again on the code to bring in new feature wishes from the community.
The most visible one in the new version 3.1 is the ability to add labels to links - see the links between Allen, Blake and Ward in the screenshot above.</description>
    </item>
    
    <item>
      <title>New Major Version of D3 Force Network Chart Available</title>
      <link>https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2018-12-02-new-major-version-of-d3-force-network-chart-available/</guid>
      <description>Since APEX version 5 was published with the Universal Theme, I was thinking that I needed something for better responsiveness of the graph. Although it was possible to configure the graph to use the DOM parent width, the responsiveness was not so good because of situations where the window size does not change (we use the window resize event to trigger the change of the width) but the available space for the graph changes.</description>
    </item>
    
    <item>
      <title>jQuery Plugin svg2img</title>
      <link>https://ogobrecht.github.io/posts/2017-04-03-jquery-plugin-svg2img/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2017-04-03-jquery-plugin-svg2img/</guid>
      <description>SVG based charts and visualizations are often used these days. But what if you want to use your browser inline SVGs, generated with some sort of JavaScript and fancy styled with CSS, offline - maybe in a presentation, send by email or printed out large scaled?
You can create a screenshot, of course. But does this look nice when it comes to scaling? You can try to copy the HTML code of the SVG and wrap it into a correct SVG container, but then you will loose in the most cases the stylings, as normally not all CSS definitions are directly attached to the SVG elements.</description>
    </item>
    
    <item>
      <title>D3.js - Data Driven Documents</title>
      <link>https://ogobrecht.github.io/posts/2015-06-09-d3js-data-driven-documents/</link>
      <pubDate>Tue, 09 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2015-06-09-d3js-data-driven-documents/</guid>
      <description>Die Folien zu meinem Vortrag (wurde in einer Vorversion auch auf dem DOAG Regionaltreffen München am 24.03.2015 gezeigt):
Open HTML presentation in a new window/tab
You need a modern browser with activated JavaScript. Navigation tips:
N, Space = Next slideP = Previous slideO, Esc = Overview all slides? = Show all keyboard shortcutsAll links are opened in a new window/tab</description>
    </item>
    
    <item>
      <title>D3.js Grundlagen</title>
      <link>https://ogobrecht.github.io/posts/2015-03-01-d3js-grundlagen/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2015-03-01-d3js-grundlagen/</guid>
      <description>InhaltsverzeichnisEinleitung Dieser Artikel erschien in der DOAG/SOUG News 02-2015 und steht auch im Original zur Verfügung. Im Gegensatz zu der Papierversion der DOAG haben wir natürlich auf einer Webseite alle Möglichkeiten, D3 live zu zeigen - also los, wir starten mit einer Netzwerkvisualisierung live im Browser (JavaScript muß aktiv sein, damit die Beispiele auf dieser Seite funktionieren):
 Knoten dürfen bewegt werden ;-)  D3 ist eine JavaScript Bibliothek zum Manipulieren von HTML Dokumenten auf der Basis von Daten und setzt dabei auf die Webstandards HTML, SVG und CSS.</description>
    </item>
    
    <item>
      <title>D3.js Force-Directed Network Chart</title>
      <link>https://ogobrecht.github.io/posts/2015-02-20-d3js-force-directed-network-chart/</link>
      <pubDate>Fri, 20 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.github.io/posts/2015-02-20-d3js-force-directed-network-chart/</guid>
      <description>My first Oracle APEX plugin and open source project :-)
Everything started some months ago when I stumbled over this fascinating force-directed graph. I immediately had the idea to use this technology to visualize data models in APEX. My experience is, that direct after I documented a data model, this documentation is out of date. I wanted to have a live visualization of the data models. After the first implementation it turned out, that the resulting graph is also useful for other purposes and I decided to build up an APEX plugin for easier integration.</description>
    </item>
    
  </channel>
</rss>